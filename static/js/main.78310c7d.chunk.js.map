{"version":3,"sources":["components/Util.js","components/layout/NavBar.js","components/layout/areas/preview/cards/CardBase.js","components/layout/areas/preview/PreviewButtonBar.js","components/layout/TabResult.js","components/layout/TabBase.js","components/layout/areas/form/FormUploader.js","components/layout/areas/form/FormSpell.js","components/Values.js","components/layout/areas/form/FormTraitAutosuggest.js","components/layout/areas/form/FormTrait.js","components/layout/areas/form/FormTraits.js","components/layout/areas/form/FormTroop.js","components/layout/areas/preview/cards/CardSpell.js","components/layout/areas/preview/PreviewBase.js","components/layout/areas/preview/PreviewSpell.js","components/layout/areas/preview/cards/CardTraits.js","components/layout/areas/preview/PreviewTraits.js","components/layout/areas/preview/cards/CardTroop.js","components/layout/areas/preview/PreviewTroop.js","components/App.js","index.js"],"names":["measureText","text","fontWeight","fontSize","fontFamily","context","canvas","document","createElement","getContext","font","width","hexToRgb","hex","result","exec","r","parseInt","g","b","Icon","memo","icon","className","Image","source","style","alt","src","validateFieldLength","maxLength","event","target","value","length","slice","FormText","id","fieldName","onChange","label","type","onInput","multiline","helperText","InputProps","TextField","e","margin","variant","prevState","nextState","isEqual","FormSelect","children","SelectProps","inputProps","select","FormCheckbox","checked","FormControlLabel","control","Checkbox","GridCard","ref","gridClassName","cardClassName","xs","sm","md","lg","xl","Grid","item","Card","CardContent","useStyles","makeStyles","theme","appbar","elevation","position","toolbar","paddingLeft","paddingRight","appbarText","alignSelf","marginRight","input","marginLeft","image","height","spacing","borderRadius","overflow","NavBar","classes","useTheme","mediaQueryLg","useMediaQuery","breakpoints","up","AppBar","color","Toolbar","Typography","card","paddingBottom","CardLayer","layerRef","x","y","loadingY","current","loaded","toDataURL","CardImage","crop","onLoad","useImage","status","useRef","useEffect","cache","getLayer","batchDraw","filters","Konva","Filters","RGB","red","green","blue","CardImageRotating","angularRate","Animation","frame","angleDiff","timeDiff","rotate","start","offset","CardMultiStyleText","textArray","yCenter","xCenter","fontsLoaded","topYOffset","reduce","sum","textLine","Math","max","map","phrase","size","textLineIndex","maxFontSize","yPos","lineWidth","weight","family","leftXOffset","phraseIndex","xPos","key","CardText","opacity","horizontalAlign","verticalAlign","shadowColor","shadowOffset","fill","fontStyle","align","CardTextRef","forwardRef","CardBase","Box","scaleX","buttonGrid","buttonIcon","button","display","PreviewButtonBar","troopName","displayLayer","Tooltip","title","aria-label","Button","onClick","link","download","href","body","appendChild","click","removeChild","cardBox","padding","mainCard","TabResult","troop","spellLayer","troopLayer","traitsLayer","resultStageRef","container","justify","name","renderThumb","cursor","backgroundColor","TabList","currentTab","setCurrentTab","Tabs","newValue","indicatorColor","textColor","centered","Tab","ScrollingContainer","renderThumbVertical","TabView","index","dir","component","role","hidden","aria-labelledby","direction","formElement","dropzone","FormUploader","handleTroopChange","handleChangeFiles","useCallback","files","gutterBottom","dropzoneClass","acceptedFiles","filesLimit","showAlerts","spellPower","fullField","fieldIcon","FormSpell","spellname","spelldesc","magic","startAdornment","InputAdornment","spellmult","spellbase","spellrange","colors","rarities","Common","pips","Rare","Epic","Legendary","Mythic","Doomed","roles","traits","code","desc","description","getSuggestionValue","suggestion","renderInputComponent","inputRef","other","fullWidth","node","renderSuggestion","query","isHighlighted","matches","match","parts","parse","MenuItem","selected","part","highlight","root","flexGrow","suggestionsContainerOpen","zIndex","marginTop","left","right","suggestionsList","listStyleType","divider","FormTraitAutosuggest","React","useState","state","setState","stateSuggestions","setSuggestions","handleChange","handleSuggestionSelected","suggestions","onSuggestionsFetchRequested","inputValue","deburr","trim","toLowerCase","inputLength","count","filter","keep","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","placeholder","renderSuggestionsContainer","options","Paper","containerProps","square","traitName","traitDesc","traitIcon","iconSelector","alignItems","FormTrait","traitname","FormTraits","menuColor","skill","manaCost","manaColors","typeField","FormTroop","kingdom","rarity","Object","keys","option","level","cost","MenuProps","type1","type2","attack","armor","life","getImageURL","troopimage","URL","createObjectURL","CardSpellNameText","baseFontSize","textRef","stable","textArr","oldState","CardSpellDescText","cardWidth","innerWidth","magicFontWeight","magicColor","baseDisplayRef","calculateMagicText","magicDamage","floor","toString","baseDisplay","replace","split","forEach","word","test","push","calculateMagicPhrases","lineLengths","lineIndexes","lineLength","pop","lineIndex","splitSpellDesc","CardSpell","loadingLayer","show","hide","draw","PreviewBase","PreviewSpell","CardTraitDescText","CardTraits","trait1code","trait2code","trait3code","trait1name","trait1desc","trait2name","trait2desc","trait3name","trait3desc","PreviewTraits","CardTroop","typeRef","typeText","textWidth","PreviewTroop","content","previewGridItem","order","paddingTop","marginBottom","formGridItem","grid","tabView","troopInfernus","spellimage","App","setTroop","field","layerSpellDisplay","layerTroopDisplay","layerTraitsDisplay","setFontsLoaded","WebFontLoader","load","google","families","fontactive","setTimeout","Container","maxWidth","swipeableView","axis","onChangeIndex","createMuiTheme","palette","primary","blueGrey","secondary","orange","appBar","ReactDOM","render","CssBaseline","getElementById"],"mappings":"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0D,KAAM,WACNC,KAAM,uCAER,CACE3D,KAAM,YACN0D,KAAM,WACNC,KAAM,qCAER,CACE3D,KAAM,WACN0D,KAAM,UACNC,KAAM,mDAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,sCAER,CAAE3D,KAAM,QAAS0D,KAAM,QAASE,YAAa,wBAC7C,CACE5D,KAAM,mBACN0D,KAAM,eACNC,KAAM,8CAER,CACE3D,KAAM,oBACN0D,KAAM,aACNC,KACE,6FAEJ,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,0CAER,CACE3D,KAAM,oBACN0D,KAAM,OACNC,KAAM,qCAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,mDAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,sCAER,CACE3D,KAAM,aACN0D,KAAM,cACNC,KAAM,uCAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,uDAER,CACE3D,KAAM,UACN0D,KAAM,cACNC,KAAM,0CAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,mDAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,4CAER,CACE3D,KAAM,iBACN0D,KAAM,UACNC,KAAM,4BAER,CACE3D,KAAM,iBACN0D,KAAM,gBACNC,KAAM,iDAER,CACE3D,KAAM,gBACN0D,KAAM,YACNC,KAAM,0CAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,qCAER,CACE3D,KAAM,kBACN0D,KAAM,gBACNC,KAAM,gEAER,CACE3D,KAAM,mBACN0D,KAAM,iBACNC,KAAM,+DAER,CACE3D,KAAM,mBACN0D,KAAM,iBACNC,KAAM,sDAER,CACE3D,KAAM,gBACN0D,KAAM,cACNC,KAAM,4CAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,sEAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,mDAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,oCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,iCAER,CACE3D,KAAM,SACN0D,KAAM,YACNC,KAAM,oDAER,CACE3D,KAAM,aACN0D,KAAM,UACNC,KAAM,mDAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,6CAER,CACE3D,KAAM,qBACN0D,KAAM,aACNC,KAAM,oEAER,CACE3D,KAAM,WACN0D,KAAM,cACNC,KAAM,qCAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,8BAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,+BAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,wCAER,CACE3D,KAAM,eACN0D,KAAM,gBACNC,KAAM,qCAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,iDAER,CACE3D,KAAM,MACN0D,KAAM,MACNC,KAAM,sCAER,CACE3D,KAAM,eACN0D,KAAM,SACNC,KAAM,+DAER,CACE3D,KAAM,kBACN0D,KAAM,eACNC,KAAM,kEAER,CACE3D,KAAM,oBACN0D,KAAM,OACNC,KAAM,iEAER,CACE3D,KAAM,kBACN0D,KAAM,aACNC,KAAM,gCAER,CACE3D,KAAM,YACN0D,KAAM,SACNC,KAAM,mCAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,gDAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,yCAER,CACE3D,KAAM,gBACN0D,KAAM,cACNC,KAAM,8EAER,CACE3D,KAAM,OACN0D,KAAM,aACNC,KAAM,uCAER,CACE3D,KAAM,eACN0D,KAAM,WACNC,KAAM,wDAER,CACE3D,KAAM,eACN0D,KAAM,WACNC,KAAM,2CAER,CACE3D,KAAM,iBACN0D,KAAM,UACNC,KAAM,iDAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,+CAER,CACE3D,KAAM,gBACN0D,KAAM,UACNC,KAAM,kDAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,6CAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,+CAER,CACE3D,KAAM,iBACN0D,KAAM,YACNC,KAAM,6CAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,oDAER,CACE3D,KAAM,YACN0D,KAAM,eACNC,KAAM,oDAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,oDAER,CACE3D,KAAM,WACN0D,KAAM,aACNC,KAAM,oDAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,oDAER,CACE3D,KAAM,aACN0D,KAAM,cACNC,KAAM,oDAER,CACE3D,KAAM,YACN0D,KAAM,SACNC,KAAM,mDAER,CACE3D,KAAM,qBACN0D,KAAM,UACNC,KAAM,oCAER,CACE3D,KAAM,iBACN0D,KAAM,eACNC,KAAM,8CAER,CACE3D,KAAM,mBACN0D,KAAM,eACNC,KAAM,yCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,gCAER,CACE3D,KAAM,iBACN0D,KAAM,cACNC,KAAM,iCAER,CACE3D,KAAM,iBACN0D,KAAM,gBACNC,KAAM,0CAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,gDAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,mEAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,+DAER,CACE3D,KAAM,iBACN0D,KAAM,aACNC,KAAM,oDAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,2CAER,CACE3D,KAAM,QACN0D,KAAM,QACNC,KAAM,qCAER,CACE3D,KAAM,gBACN0D,KAAM,WACNC,KAAM,0DAER,CACE3D,KAAM,UACN0D,KAAM,eACNC,KAAM,6CAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,iDAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,yCAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,8CAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,oCAER,CACE3D,KAAM,gBACN0D,KAAM,SACNC,KAAM,2CAER,CACE3D,KAAM,iBACN0D,KAAM,gBACNC,KAAM,kCAER,CACE3D,KAAM,mBACN0D,KAAM,gBACNC,KAAM,mCAER,CACE3D,KAAM,mBACN0D,KAAM,kBACNC,KAAM,4CAER,CACE3D,KAAM,YACN0D,KAAM,SACNC,KAAM,2DAER,CACE3D,KAAM,aACN0D,KAAM,SACNC,KAAM,6DAER,CACE3D,KAAM,gBACN0D,KAAM,WACNC,KAAM,qCAER,CACE3D,KAAM,gBACN0D,KAAM,cACNC,KAAM,oDAER,CACE3D,KAAM,gBACN0D,KAAM,SACNC,KAAM,yDAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,2CAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,8BAER,CACE3D,KAAM,mBACN0D,KAAM,OACNC,KAAM,6CAER,CACE3D,KAAM,eACN0D,KAAM,SACNC,KAAM,4CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,gCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,0CAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,oDAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,8BAER,CACE3D,KAAM,gBACN0D,KAAM,SACNC,KAAM,wDAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,0CAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,uCAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,0CAER,CACE3D,KAAM,YACN0D,KAAM,gBACNC,KAAM,+CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,gDAER,CACE3D,KAAM,cACN0D,KAAM,gBACNC,KAAM,gEAER,CACE3D,KAAM,aACN0D,KAAM,WACNC,KAAM,oDAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,4CAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,4DAER,CACE3D,KAAM,mBACN0D,KAAM,WACNC,KAAM,iDAER,CACE3D,KAAM,eACN0D,KAAM,WACNC,KAAM,wDAER,CACE3D,KAAM,gBACN0D,KAAM,SACNC,KAAM,6CAER,CACE3D,KAAM,cACN0D,KAAM,SACNC,KAAM,2DAER,CACE3D,KAAM,cACN0D,KAAM,gBACNC,KAAM,sCAER,CACE3D,KAAM,YACN0D,KAAM,WACNC,KAAM,0DAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,+CAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,uCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,uCAER,CACE3D,KAAM,gBACN0D,KAAM,UACNC,KAAM,wCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,sCAER,CACE3D,KAAM,aACN0D,KAAM,eACNC,KAAM,0CAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,uDAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,8CAER,CACE3D,KAAM,WACN0D,KAAM,eACNC,KAAM,uDAER,CACE3D,KAAM,SACN0D,KAAM,YACNC,KAAM,iDAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,mDAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,mEAER,CACE3D,KAAM,sBACN0D,KAAM,WACNC,KAAM,wFAER,CACE3D,KAAM,mBACN0D,KAAM,aACNC,KAAM,qFAER,CACE3D,KAAM,iBACN0D,KAAM,aACNC,KAAM,sFAER,CACE3D,KAAM,mBACN0D,KAAM,WACNC,KAAM,wFAER,CACE3D,KAAM,oBACN0D,KAAM,WACNC,KAAM,uFAER,CACE3D,KAAM,mBACN0D,KAAM,cACNC,KAAM,uFAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,qCAER,CACE3D,KAAM,aACN0D,KAAM,UACNC,KAAM,iDAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,sCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,4CAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,gCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,wCAER,CACE3D,KAAM,WACN0D,KAAM,aACNC,KAAM,6CAER,CACE3D,KAAM,QACN0D,KAAM,QACNC,KAAM,qCAER,CACE3D,KAAM,YACN0D,KAAM,gBACNC,KAAM,6CAER,CACE3D,KAAM,OACN0D,KAAM,OACNC,KAAM,sDAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,+CAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,gCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,yCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,mDAER,CACE3D,KAAM,oBACN0D,KAAM,aACNC,KAAM,iFAER,CACE3D,KAAM,iBACN0D,KAAM,YACNC,KAAM,iEAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,8CAER,CACE3D,KAAM,mBACN0D,KAAM,cACNC,KAAM,gDAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,+BAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,gCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,yCAER,CACE3D,KAAM,gBACN0D,KAAM,YACNC,KAAM,uCAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,0CAER,CACE3D,KAAM,iBACN0D,KAAM,cACNC,KAAM,oEAER,CACE3D,KAAM,YACN0D,KAAM,QACNC,KAAM,2DAER,CACE3D,KAAM,aACN0D,KAAM,UACNC,KAAM,2CAER,CACE3D,KAAM,sBACN0D,KAAM,cACNC,KAAM,qCAER,CACE3D,KAAM,iBACN0D,KAAM,gBACNC,KAAM,kCAER,CACE3D,KAAM,mBACN0D,KAAM,gBACNC,KAAM,mCAER,CACE3D,KAAM,mBACN0D,KAAM,kBACNC,KAAM,4CAER,CACE3D,KAAM,WACN0D,KAAM,UACNC,KAAM,6BAER,CACE3D,KAAM,aACN0D,KAAM,UACNC,KAAM,8BAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,uCAER,CACE3D,KAAM,YACN0D,KAAM,cACNC,KAAM,yCAER,CACE3D,KAAM,iBACN0D,KAAM,UACNC,KAAM,+DAER,CACE3D,KAAM,qBACN0D,KAAM,YACNC,KAAM,gDAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,iCAER,CACE3D,KAAM,WACN0D,KAAM,cACNC,KAAM,uCAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,6CAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,mDAER,CACE3D,KAAM,iBACN0D,KAAM,UACNC,KAAM,0CAER,CAAE3D,KAAM,WAAY0D,KAAM,UAAWE,YAAa,yBAClD,CACE5D,KAAM,aACN0D,KAAM,SACNC,KAAM,0DAER,CACE3D,KAAM,gBACN0D,KAAM,SACNC,KAAM,mDAER,CACE3D,KAAM,OACN0D,KAAM,OACNC,KAAM,sCAER,CACE3D,KAAM,WACN0D,KAAM,UACNC,KAAM,2DAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,8BAER,CAAE3D,KAAM,OAAQ0D,KAAM,OAAQE,YAAa,gCAC3C,CACE5D,KAAM,cACN0D,KAAM,YACNC,KAAM,sCAER,CAAE3D,KAAM,WAAY0D,KAAM,aAAcE,YAAa,kBACrD,CAAE5D,KAAM,WAAY0D,KAAM,UAAWE,YAAa,2BAClD,CACE5D,KAAM,WACN0D,KAAM,aACNC,KAAM,qEAER,CACE3D,KAAM,aACN0D,KAAM,UACNC,KAAM,4BAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,qCAER,CACE3D,KAAM,YACN0D,KAAM,UACNC,KAAM,gDAER,CACE3D,KAAM,gBACN0D,KAAM,SACNC,KAAM,iDAER,CACE3D,KAAM,WACN0D,KAAM,YACNC,KAAM,0DAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,8CAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,0CAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,uCAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,oCAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,kCAER,CACE3D,KAAM,YACN0D,KAAM,WACNC,KAAM,6CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,mCAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,gDAER,CACE3D,KAAM,cACN0D,KAAM,WACNC,KAAM,6CAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,wCAER,CACE3D,KAAM,cACN0D,KAAM,SACNC,KAAM,gDAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,2EAER,CACE3D,KAAM,QACN0D,KAAM,eACNC,KAAM,4DAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,mEAER,CACE3D,KAAM,iBACN0D,KAAM,cACNC,KAAM,sDAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,2DAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,qCAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,yCAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,yCAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,yCAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,yCAER,CACE3D,KAAM,WACN0D,KAAM,aACNC,KAAM,yCAER,CACE3D,KAAM,aACN0D,KAAM,WACNC,KAAM,0CAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,yCAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,yCAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,mEAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,8CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,wDAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,4BAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,oCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,mDAER,CACE3D,KAAM,UACN0D,KAAM,SACNC,KAAM,6CAER,CACE3D,KAAM,iBACN0D,KAAM,eACNC,KAAM,gEAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,8BAER,CACE3D,KAAM,aACN0D,KAAM,UACNC,KAAM,0CAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,iEAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,+BAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,wCAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,gCAER,CACE3D,KAAM,QACN0D,KAAM,aACNC,KAAM,kCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,8BAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,gCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,yCAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,qCAER,CACE3D,KAAM,YACN0D,KAAM,eACNC,KAAM,gEAER,CACE3D,KAAM,kBACN0D,KAAM,aACNC,KAAM,qEAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,qCAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,4CAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,qDAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,8CAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,4CAER,CACE3D,KAAM,iBACN0D,KAAM,YACNC,KAAM,mCAER,CACE3D,KAAM,cACN0D,KAAM,WACNC,KAAM,oDAER,CACE3D,KAAM,eACN0D,KAAM,WACNC,KAAM,8CAER,CACE3D,KAAM,gBACN0D,KAAM,UACNC,KAAM,6CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,yDAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,yCAER,CACE3D,KAAM,WACN0D,KAAM,aACNC,KAAM,kDAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,gEAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,mDAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,+DAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,mDAER,CACE3D,KAAM,aACN0D,KAAM,UACNC,KAAM,qCAER,CACE3D,KAAM,OACN0D,KAAM,OACNC,KAAM,sCAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,8BAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,+BAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,wCAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,8CAER,CACE3D,KAAM,OACN0D,KAAM,cACNC,KAAM,0DAER,CACE3D,KAAM,gBACN0D,KAAM,WACNC,KAAM,wDAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,qCAER,CACE3D,KAAM,WACN0D,KAAM,aACNC,KAAM,wCAER,CACE3D,KAAM,YACN0D,KAAM,WACNC,KAAM,gDAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,0CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,kCAER,CACE3D,KAAM,WACN0D,KAAM,aACNC,KAAM,gDAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,uCAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,wCAER,CAAE3D,KAAM,SAAU0D,KAAM,SAAUE,YAAa,wBAC/C,CACE5D,KAAM,SACN0D,KAAM,UACNC,KAAM,sDAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,wDAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,uBAER,CACE3D,KAAM,iBACN0D,KAAM,SACNC,KAAM,gCAER,CACE3D,KAAM,gBACN0D,KAAM,UACNC,KAAM,mDAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,6CAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,0CAER,CACE3D,KAAM,eACN0D,KAAM,WACNC,KAAM,0CAER,CAAE3D,KAAM,YAAa0D,KAAM,YAAaE,YAAa,uBACrD,CACE5D,KAAM,YACN0D,KAAM,aACNC,KAAM,uCAER,CACE3D,KAAM,cACN0D,KAAM,eACNC,KAAM,2CAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,oFAER,CACE3D,KAAM,OACN0D,KAAM,aACNC,KAAM,oDAER,CAAE3D,KAAM,OAAQ0D,KAAM,OAAQE,YAAa,8BAC3C,CACE5D,KAAM,cACN0D,KAAM,SACNC,KAAM,+DAER,CACE3D,KAAM,gBACN0D,KAAM,gBACNC,KAAM,0EAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,yCAER,CACE3D,KAAM,iBACN0D,KAAM,UACNC,KAAM,mCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,gCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,yCAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,yCAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,8CAER,CACE3D,KAAM,gBACN0D,KAAM,UACNC,KAAM,uCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,4DAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,mCAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,4DAER,CACE3D,KAAM,gBACN0D,KAAM,SACNC,KAAM,2BAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,mDAER,CACE3D,KAAM,iBACN0D,KAAM,WACNC,KAAM,uDAER,CACE3D,KAAM,mBACN0D,KAAM,WACNC,KAAM,+CAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,8CAER,CACE3D,KAAM,iBACN0D,KAAM,eACNC,KAAM,0CAER,CACE3D,KAAM,gBACN0D,KAAM,gBACNC,KAAM,wDAER,CACE3D,KAAM,iBACN0D,KAAM,UACNC,KAAM,uDAER,CACE3D,KAAM,cACN0D,KAAM,eACNC,KAAM,2CAER,CACE3D,KAAM,gBACN0D,KAAM,YACNC,KAAM,iCAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,qCAER,CACE3D,KAAM,aACN0D,KAAM,cACNC,KAAM,0CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,uCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,qCAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,mDAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,sCAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,iDAER,CACE3D,KAAM,iBACN0D,KAAM,YACNC,KAAM,mCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,qDAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,gCAER,CACE3D,KAAM,gBACN0D,KAAM,YACNC,KAAM,oDAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,0DAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,iCAER,CACE3D,KAAM,kBACN0D,KAAM,iBACNC,KAAM,2CAER,CACE3D,KAAM,iBACN0D,KAAM,gBACNC,KAAM,gCAER,CACE3D,KAAM,YACN0D,KAAM,WACNC,KAAM,6BAER,CACE3D,KAAM,cACN0D,KAAM,WACNC,KAAM,8BAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,uCAER,CACE3D,KAAM,uBACN0D,KAAM,gBACNC,KAAM,gEAER,CACE3D,KAAM,oBACN0D,KAAM,eACNC,KAAM,2CAER,CACE3D,KAAM,eACN0D,KAAM,UACNC,KAAM,uCAER,CACE3D,KAAM,cACN0D,KAAM,SACNC,KAAM,iCAER,CACE3D,KAAM,mBACN0D,KAAM,UACNC,KAAM,sCAER,CACE3D,KAAM,mBACN0D,KAAM,aACNC,KAAM,6CAER,CACE3D,KAAM,SACN0D,KAAM,YACNC,KAAM,4BAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,oCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,+BAER,CACE3D,KAAM,iBACN0D,KAAM,cACNC,KAAM,gCAER,CACE3D,KAAM,iBACN0D,KAAM,gBACNC,KAAM,yCAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,gDAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,+CAER,CACE3D,KAAM,YACN0D,KAAM,WACNC,KAAM,qCAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,+DAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,gCAER,CACE3D,KAAM,iBACN0D,KAAM,cACNC,KAAM,iCAER,CACE3D,KAAM,iBACN0D,KAAM,gBACNC,KAAM,0CAER,CACE3D,KAAM,gBACN0D,KAAM,YACNC,KAAM,wEAER,CACE3D,KAAM,sBACN0D,KAAM,eACNC,KAAM,6CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,iBACN0D,KAAM,cACNC,KAAM,yDAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,gCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,yCAER,CACE3D,KAAM,YACN0D,KAAM,WACNC,KAAM,4BAER,CACE3D,KAAM,cACN0D,KAAM,WACNC,KAAM,6BAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,sCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,qCAER,CACE3D,KAAM,cACN0D,KAAM,SACNC,KAAM,yCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,sCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,oCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,iDAER,CACE3D,KAAM,cACN0D,KAAM,UACNC,KAAM,0CAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,qCAER,CACE3D,KAAM,iBACN0D,KAAM,cACNC,KAAM,0CAER,CACE3D,KAAM,qBACN0D,KAAM,aACNC,KAAM,gDAER,CACE3D,KAAM,qBACN0D,KAAM,aACNC,KAAM,iDAER,CACE3D,KAAM,eACN0D,KAAM,gBACNC,KAAM,sCAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,qCAER,CAAE3D,KAAM,SAAU0D,KAAM,SAAUE,YAAa,yBAC/C,CACE5D,KAAM,iBACN0D,KAAM,aACNC,KAAM,6CAER,CACE3D,KAAM,uBACN0D,KAAM,UACNC,KAAM,oCAER,CACE3D,KAAM,eACN0D,KAAM,OACNC,KAAM,gDAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,2CAER,CACE3D,KAAM,eACN0D,KAAM,WACNC,KAAM,6CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,8CAER,CACE3D,KAAM,gBACN0D,KAAM,gBACNC,KAAM,gDAER,CACE3D,KAAM,iBACN0D,KAAM,eACNC,KAAM,+CAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,+CAER,CACE3D,KAAM,YACN0D,KAAM,UACNC,KAAM,oCAER,CACE3D,KAAM,WACN0D,KAAM,UACNC,KAAM,4BAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,oCAER,CACE3D,KAAM,WACN0D,KAAM,iBACNC,KAAM,qCAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,gDAER,CACE3D,KAAM,aACN0D,KAAM,UACNC,KAAM,6BAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,qCAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,wCAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,yCAER,CACE3D,KAAM,cACN0D,KAAM,iBACNC,KAAM,8CAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,kDAER,CACE3D,KAAM,cACN0D,KAAM,WACNC,KAAM,gCAER,CACE3D,KAAM,aACN0D,KAAM,WACNC,KAAM,oCAER,CACE3D,KAAM,sBACN0D,KAAM,cACNC,KAAM,6CAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,4CAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,iDAER,CACE3D,KAAM,cACN0D,KAAM,iBACNC,KAAM,6CAER,CACE3D,KAAM,gBACN0D,KAAM,OACNC,KAAM,4CAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,+DAER,CACE3D,KAAM,UACN0D,KAAM,aACNC,KAAM,0DAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,wCAER,CACE3D,KAAM,kBACN0D,KAAM,SACNC,KAAM,gDAER,CACE3D,KAAM,qBACN0D,KAAM,SACNC,KAAM,2CAER,CACE3D,KAAM,wBACN0D,KAAM,SACNC,KAAM,6CAER,CACE3D,KAAM,sBACN0D,KAAM,SACNC,KAAM,oDAER,CACE3D,KAAM,yBACN0D,KAAM,SACNC,KAAM,qDAER,CACE3D,KAAM,sBACN0D,KAAM,SACNC,KAAM,6CAER,CACE3D,KAAM,YACN0D,KAAM,cACNC,KAAM,oCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,uEAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,mCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,2CAER,CACE3D,KAAM,eACN0D,KAAM,UACNC,KAAM,yCAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,iDAER,CACE3D,KAAM,gBACN0D,KAAM,cACNC,KAAM,iEAER,CACE3D,KAAM,cACN0D,KAAM,SACNC,KAAM,kCAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,0CAER,CACE3D,KAAM,cACN0D,KAAM,UACNC,KAAM,yDAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,yCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,8BAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,wCAER,CACE3D,KAAM,SACN0D,KAAM,aACNC,KAAM,+CAER,CACE3D,KAAM,cACN0D,KAAM,gBACNC,KAAM,qCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,0CAER,CACE3D,KAAM,SACN0D,KAAM,eACNC,KAAM,mCAER,CACE3D,KAAM,UACN0D,KAAM,WACNC,KAAM,+DAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,6CAER,CACE3D,KAAM,aACN0D,KAAM,aACNC,KAAM,8CAER,CACE3D,KAAM,SACN0D,KAAM,aACNC,KAAM,uCAER,CAAE3D,KAAM,aAAc0D,KAAM,aAAcE,YAAa,gBACvD,CACE5D,KAAM,eACN0D,KAAM,aACNC,KAAM,oCAER,CACE3D,KAAM,UACN0D,KAAM,SACNC,KAAM,mDAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,0CAER,CACE3D,KAAM,iBACN0D,KAAM,WACNC,KAAM,oEAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,4CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,0CAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,8BAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,+BAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,wCAER,CACE3D,KAAM,YACN0D,KAAM,QACNC,KAAM,oDAER,CACE3D,KAAM,eACN0D,KAAM,UACNC,KAAM,kCAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,4CAER,CACE3D,KAAM,SACN0D,KAAM,aACNC,KAAM,mDAER,CACE3D,KAAM,iBACN0D,KAAM,cACNC,KAAM,yDAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,sCAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,8CAER,CACE3D,KAAM,WACN0D,KAAM,UACNC,KAAM,yDAER,CACE3D,KAAM,iBACN0D,KAAM,gBACNC,KAAM,+DAER,CACE3D,KAAM,gBACN0D,KAAM,YACNC,KAAM,4CAER,CACE3D,KAAM,qBACN0D,KAAM,WACNC,KAAM,gEAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,gDAER,CACE3D,KAAM,gBACN0D,KAAM,SACNC,KAAM,kCAER,CACE3D,KAAM,QACN0D,KAAM,WACNC,KAAM,sDAER,CACE3D,KAAM,WACN0D,KAAM,SACNC,KAAM,mDAER,CACE3D,KAAM,QACN0D,KAAM,QACNC,KAAM,8CAER,CACE3D,KAAM,eACN0D,KAAM,QACNC,KAAM,gEAER,CACE3D,KAAM,WACN0D,KAAM,UACNC,KAAM,4CAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,+CAER,CACE3D,KAAM,cACN0D,KAAM,eACNC,KAAM,0CAER,CACE3D,KAAM,eACN0D,KAAM,UACNC,KAAM,8DAER,CAAE3D,KAAM,WAAY0D,KAAM,WAAYE,YAAa,oBACnD,CACE5D,KAAM,cACN0D,KAAM,QACNC,KAAM,iDAER,CACE3D,KAAM,QACN0D,KAAM,QACNC,KAAM,wCAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,sDAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,kDAER,CACE3D,KAAM,UACN0D,KAAM,OACNC,KAAM,wCAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,8CAER,CACE3D,KAAM,mBACN0D,KAAM,YACNC,KAAM,8CAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,8CAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,8CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,8CAER,CACE3D,KAAM,gBACN0D,KAAM,UACNC,KAAM,+CAER,CACE3D,KAAM,iBACN0D,KAAM,aACNC,KAAM,8CAER,CACE3D,KAAM,gBACN0D,KAAM,YACNC,KAAM,8CAER,CACE3D,KAAM,cACN0D,KAAM,WACNC,KAAM,2BAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,oDAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,oCAER,CACE3D,KAAM,aACN0D,KAAM,iBACNC,KAAM,wDAER,CACE3D,KAAM,QACN0D,KAAM,aACNC,KAAM,wCAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,wDAER,CACE3D,KAAM,QACN0D,KAAM,eACNC,KAAM,gDAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,qCAER,CACE3D,KAAM,cACN0D,KAAM,YACNC,KAAM,qCAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,qCAER,CACE3D,KAAM,QACN0D,KAAM,aACNC,KAAM,qDAER,CACE3D,KAAM,QACN0D,KAAM,WACNC,KAAM,qDAER,CACE3D,KAAM,cACN0D,KAAM,SACNC,KAAM,wDAER,CACE3D,KAAM,UACN0D,KAAM,UACNC,KAAM,gDAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,qEAER,CACE3D,KAAM,aACN0D,KAAM,cACNC,KAAM,yCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,sCAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,kCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,oCAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,iDAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,2CAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,iDAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,qCAER,CACE3D,KAAM,aACN0D,KAAM,cACNC,KAAM,kCAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,qCAER,CACE3D,KAAM,aACN0D,KAAM,WACNC,KAAM,gDAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,mEAER,CACE3D,KAAM,eACN0D,KAAM,eACNC,KAAM,uDAER,CACE3D,KAAM,aACN0D,KAAM,WACNC,KAAM,wDAER,CACE3D,KAAM,gBACN0D,KAAM,WACNC,KAAM,gDAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,6BAER,CACE3D,KAAM,kBACN0D,KAAM,SACNC,KAAM,8CAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,8BAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,uCAER,CAAE3D,KAAM,SAAU0D,KAAM,SAAUE,YAAa,qBAC/C,CACE5D,KAAM,UACN0D,KAAM,gBACNC,KAAM,wEAER,CACE3D,KAAM,cACN0D,KAAM,kBACNC,KAAM,8CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,qDAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,sDAER,CACE3D,KAAM,YACN0D,KAAM,aACNC,KAAM,0DAER,CACE3D,KAAM,cACN0D,KAAM,WACNC,KAAM,oCAER,CACE3D,KAAM,WACN0D,KAAM,WACNC,KAAM,uCAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,qDAER,CACE3D,KAAM,cACN0D,KAAM,SACNC,KAAM,qDAER,CAAE3D,KAAM,QAAS0D,KAAM,OAAQE,YAAa,gCAC5C,CACE5D,KAAM,YACN0D,KAAM,cACNC,KAAM,0CAER,CACE3D,KAAM,SACN0D,KAAM,cACNC,KAAM,6CAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,8BAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,wCAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,+DAER,CACE3D,KAAM,aACN0D,KAAM,OACNC,KAAM,2CAER,CACE3D,KAAM,YACN0D,KAAM,SACNC,KAAM,mDAER,CAAE3D,KAAM,aAAc0D,KAAM,YAAaE,YAAa,qBACtD,CACE5D,KAAM,aACN0D,KAAM,YACNC,KAAM,qCAER,CACE3D,KAAM,sBACN0D,KAAM,WACNC,KAAM,gDAER,CACE3D,KAAM,SACN0D,KAAM,SACNC,KAAM,+BAER,CACE3D,KAAM,eACN0D,KAAM,WACNC,KAAM,mCAER,CACE3D,KAAM,aACN0D,KAAM,cACNC,KAAM,+CAER,CACE3D,KAAM,gBACN0D,KAAM,MACNC,KAAM,2CAER,CACE3D,KAAM,eACN0D,KAAM,aACNC,KAAM,qCAER,CACE3D,KAAM,eACN0D,KAAM,SACNC,KAAM,+CAER,CACE3D,KAAM,QACN0D,KAAM,WACNC,KAAM,kDAER,CACE3D,KAAM,YACN0D,KAAM,YACNC,KAAM,sDAER,CACE3D,KAAM,oBACN0D,KAAM,cACNC,KAAM,0CAER,CACE3D,KAAM,qBACN0D,KAAM,eACNC,KAAM,6CAER,CACE3D,KAAM,YACN0D,KAAM,WACNC,KAAM,iDAER,CACE3D,KAAM,UACN0D,KAAM,cACNC,KAAM,qDAER,CACE3D,KAAM,cACN0D,KAAM,UACNC,KAAM,qCAER,CACE3D,KAAM,cACN0D,KAAM,aACNC,KAAM,8BAER,CACE3D,KAAM,gBACN0D,KAAM,aACNC,KAAM,+BAER,CACE3D,KAAM,gBACN0D,KAAM,eACNC,KAAM,0CAER,CACE3D,KAAM,UACN0D,KAAM,eACNC,KAAM,8CAER,CACE3D,KAAM,kBACN0D,KAAM,aACNC,KAAM,wDAER,CACE3D,KAAM,sBACN0D,KAAM,SACNC,KAAM,gDAER,CACE3D,KAAM,eACN0D,KAAM,YACNC,KAAM,0CAER,CACE3D,KAAM,aACN0D,KAAM,YACNC,KAAM,6BAER,CACE3D,KAAM,cACN0D,KAAM,cACNC,KAAM,8CAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,8BAER,CACE3D,KAAM,eACN0D,KAAM,cACNC,KAAM,uCAER,CACE3D,KAAM,WACN0D,KAAM,aACNC,KAAM,4BAER,CACE3D,KAAM,WAC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","file":"static/js/main.78310c7d.chunk.js","sourcesContent":["import React, { useState, useEffect, memo } from \"react\";\r\n\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\nimport {\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid,\r\n  Card,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\n\r\nexport const measureText = (text, fontWeight, fontSize, fontFamily) => {\r\n  // Create a singleton canvas or use an existing one.\r\n  const canvas =\r\n    measureText.canvas ||\r\n    (measureText.canvas = document.createElement(\"canvas\"));\r\n\r\n  const context = canvas.getContext(\"2d\");\r\n  context.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\r\n  return context.measureText(text).width;\r\n};\r\n\r\nexport const hexToRgb = hex => {\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n      }\r\n    : null;\r\n};\r\n\r\n// Displays a NerdFonts font icon.\r\nexport const Icon = memo(({ icon, className }) => {\r\n  return (\r\n    <div>\r\n      <i className={`nf ${icon || \"nf-fa-amazon\"} ${className || null}`} />\r\n    </div>\r\n  );\r\n});\r\n\r\n// Displays an image file from its source.\r\nexport const Image = memo(({ source, className, style }) => {\r\n  return (\r\n    <img\r\n      alt=\"\"\r\n      src={source}\r\n      className={className || null}\r\n      style={style || null}\r\n    />\r\n  );\r\n});\r\n\r\n// The code to validate the length of a text field when you type in it is standard.\r\nexport const validateFieldLength = maxLength => event => {\r\n  if (event.target.value.length > maxLength) {\r\n    event.target.value = event.target.value.slice(0, event.target.maxLength);\r\n  }\r\n};\r\n\r\n// Returns the \"debounced\" result of value.\r\n// If the value has been edited in the past 500 milliseconds, it won't be updated.\r\n// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nexport const useDebounce = (value, delay) => {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value, delay]\r\n  );\r\n\r\n  return debouncedValue;\r\n};\r\n\r\n// The standard form field. Memoized for performance.\r\n// The className,\r\nexport const FormText = memo(\r\n  ({\r\n    id,\r\n    fieldName,\r\n    value,\r\n    onChange,\r\n    label,\r\n    type,\r\n    className,\r\n    onInput,\r\n    multiline,\r\n    helperText,\r\n    InputProps\r\n  }) => (\r\n    <TextField\r\n      // Required inputs.\r\n      // Pass in an ID for React to identify the field.\r\n      id={id}\r\n      // Pass in the state to display in the field.\r\n      value={value}\r\n      // Pass in a callback.\r\n      onChange={e => onChange(fieldName, e.target.value)}\r\n      // Constants\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n      // Optional inputs.\r\n      // Pass in text field label. Can be blank.\r\n      label={label || null}\r\n      // Props to pass on to the Input component.\r\n      InputProps={InputProps || null}\r\n      // Type defaults to \"text\". You can specify \"number\" as well.\r\n      type={type || \"text\"}\r\n      // Specify a makeStyles class name, not required.\r\n      className={className || null}\r\n      // Specify an onInput function, optionally.\r\n      onInput={onInput || null}\r\n      // Specify helper text below the field, optionally.\r\n      helperText={helperText || null}\r\n      // Whether the field is multiline.\r\n      multiline={multiline || false}\r\n    />\r\n  ),\r\n  (prevState, nextState) => {\r\n    isEqual(prevState.value, nextState.value);\r\n  }\r\n);\r\n\r\nexport const FormSelect = memo(\r\n  ({\r\n    id,\r\n    fieldName,\r\n    value,\r\n    onChange,\r\n    label,\r\n    className,\r\n    children,\r\n    SelectProps,\r\n    inputProps\r\n  }) => (\r\n    <TextField\r\n      // Required inputs.\r\n      // Pass in an ID for React to identify the field.\r\n      id={id}\r\n      // Pass in the state to display in the field.\r\n      value={value}\r\n      // Pass in a callback.\r\n      onChange={e => onChange(fieldName, e.target.value)}\r\n      // Constants\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n      // Select.\r\n      select\r\n      // Optional inputs.\r\n      // Pass in text field label. Can be blank.\r\n      label={label || null}\r\n      // Specify a makeStyles class name, not required.\r\n      className={className || null}\r\n      // Props to put on the Select component.\r\n      SelectProps={SelectProps || null}\r\n      // Props to put on the input.\r\n      inputProps={inputProps || null}\r\n    >\r\n      {children}\r\n    </TextField>\r\n  ),\r\n  (prevState, nextState) => {\r\n    isEqual(prevState.value, nextState.value);\r\n  }\r\n);\r\n\r\nexport const FormCheckbox = memo(({ checked, fieldName, onChange, label }) => (\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        checked={checked}\r\n        onChange={e => onChange(fieldName, e.target.checked)}\r\n      />\r\n    }\r\n    label={label}\r\n  />\r\n));\r\n\r\nexport const GridCard = ({\r\n  ref,\r\n  gridClassName,\r\n  cardClassName,\r\n  children,\r\n  xs,\r\n  sm,\r\n  md,\r\n  lg,\r\n  xl\r\n}) => (\r\n  <Grid item className={gridClassName} xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\r\n    <Card ref={ref} className={cardClassName}>\r\n      <CardContent>{children}</CardContent>\r\n    </Card>\r\n  </Grid>\r\n);\r\n","import React, { memo } from \"react\";\r\nimport { AppBar, Toolbar, Typography, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { Image } from \"../Util\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\"\r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    image: {\r\n      width: \"auto\",\r\n      height: \"36px\",\r\n      marginRight: theme.spacing(1),\r\n      borderRadius: theme.spacing(3),\r\n      overflow: \"hidden\"\r\n    }\r\n  };\r\n});\r\n\r\nconst NavBar = memo(() => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <AppBar color=\"primary\" className={classes.appbar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Image source=\"./logo256.png\" className={classes.image} />\r\n        <Typography className={classes.appbarText} variant=\"h4\" color=\"inherit\">\r\n          {mediaQueryLg ? \"Gems of War Troop Creator\" : \"Troop Creator\"}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n});\r\n\r\nexport default NavBar;\r\n","import React, { forwardRef, useEffect, useRef } from \"react\";\r\nimport { Stage, Image, Text } from \"react-konva\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useImage from \"use-image\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Konva from \"konva\";\r\nimport { hexToRgb, measureText } from \"../../../../Util\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    margin: \"0px auto\",\r\n    paddingBottom: \"12px\",\r\n    \"& .konvajs-content\": {\r\n      width: \"100% !important\",\r\n      height: \"auto !important\",\r\n      \"& canvas\": {\r\n        position: \"relative !important\",\r\n        width: \"100% !important\",\r\n        height: \"auto !important\"\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\n// https://gist.github.com/mrcoles/0dfaab93a1c899e5f46690676c8c29e5\r\nexport const fillMixedText = (ctx, args, x, y) => {\r\n  let textXPos = x;\r\n  const defaultFillStyle = ctx.fillStyle;\r\n  const defaultFont = ctx.font;\r\n\r\n  ctx.save();\r\n  args.forEach(({ text, fillStyle, font }) => {\r\n    ctx.fillStyle = fillStyle || defaultFillStyle;\r\n    ctx.font = font || defaultFont;\r\n    ctx.fillText(text, textXPos, y);\r\n    textXPos += ctx.measureText(text).width;\r\n  });\r\n  ctx.restore();\r\n};\r\n\r\nexport const writeLines = (\r\n  context,\r\n  x,\r\n  y,\r\n  maxWidth,\r\n  baseLineHeight,\r\n  maxLineCount,\r\n  text,\r\n  fontText,\r\n  centerVertical\r\n) => {\r\n  let lineHeight = baseLineHeight;\r\n\r\n  while (lineHeight > 0) {\r\n    const words = text.split(\" \");\r\n    const lines = [];\r\n    let currentLine = words[0];\r\n    context.font = fontText.replace(\"{}\", lineHeight);\r\n\r\n    // Build an array of lines, starting a new line if the current one is too long.\r\n    for (let i = 1; i < words.length; i += 1) {\r\n      const word = words[i];\r\n      const { width } = context.measureText(`${currentLine} ${word}`);\r\n      if (width < maxWidth) {\r\n        currentLine += ` ${word}`;\r\n      } else {\r\n        lines.push(currentLine);\r\n        currentLine = word;\r\n      }\r\n    }\r\n    // Finish up.\r\n    lines.push(currentLine);\r\n\r\n    if (lines.length > maxLineCount) {\r\n      lineHeight -= 2;\r\n    } else {\r\n      // Write the actual text.\r\n      let newY = y - (lines.length - 1) * lineHeight;\r\n      if (centerVertical && lines.length === 1) newY -= lineHeight / 2;\r\n\r\n      for (let j = 0; j < lines.length; j += 1) {\r\n        context.fillText(lines[j], x, newY + lineHeight * j);\r\n      }\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n// Copy an existing layer to the given coordinates.\r\n// This requires converting it to a data URL then converting it back.\r\n// Is there a simpler way?\r\nexport const CardLayer = ({\r\n  layerRef,\r\n  x,\r\n  y,\r\n  width = 0,\r\n  height = 0,\r\n  loadingY = 0\r\n}) => {\r\n  // If the layer is valid, display it, otherwise display a loading icon.\r\n  return layerRef.current && layerRef.current.loaded ? (\r\n    <CardImage\r\n      src={layerRef.current.toDataURL()}\r\n      x={x}\r\n      y={y}\r\n      width={width || layerRef.current.canvas.width}\r\n      height={height || layerRef.current.canvas.height}\r\n    />\r\n  ) : (\r\n    <CardImage\r\n      src=\"./assets/graphics/troop/loading.png\"\r\n      x={x + 195}\r\n      y={(loadingY || y) + 323}\r\n      width={100}\r\n      height={100}\r\n    />\r\n  );\r\n};\r\n\r\nexport const CardImage = ({\r\n  src,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  color = null,\r\n  crop = {},\r\n  onLoad = null\r\n}) => {\r\n  const [image, status] = useImage(src);\r\n  const ref = useRef(null);\r\n  useEffect(() => {\r\n    if (ref.current !== null) {\r\n      ref.current.cache();\r\n      ref.current.getLayer().batchDraw();\r\n      if (status === \"loaded\" && onLoad != null) onLoad();\r\n    }\r\n  }, [image, onLoad, status]);\r\n\r\n  if (src == null) return null;\r\n\r\n  return (\r\n    <Image\r\n      ref={ref}\r\n      image={image}\r\n      x={x}\r\n      y={y}\r\n      filters={color !== null ? [Konva.Filters.RGB] : null}\r\n      red={color !== null ? hexToRgb(color).r : null}\r\n      green={color !== null ? hexToRgb(color).g : null}\r\n      blue={color !== null ? hexToRgb(color).b : null}\r\n      width={width}\r\n      height={height}\r\n      crop={crop}\r\n    />\r\n  );\r\n};\r\n\r\nexport const CardImageRotating = ({\r\n  src,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  color = null,\r\n  crop = {},\r\n  onLoad = null,\r\n  angularRate = 0\r\n}) => {\r\n  const [image, status] = useImage(src);\r\n  const ref = useRef(null);\r\n  useEffect(() => {\r\n    if (ref.current !== null) {\r\n      ref.current.cache();\r\n      ref.current.getLayer().batchDraw();\r\n      if (status === \"loaded\") {\r\n        if (onLoad != null) onLoad();\r\n\r\n        if (angularRate !== 0) {\r\n          // Animation.\r\n          const anim = new Konva.Animation(frame => {\r\n            const angleDiff = (frame.timeDiff * angularRate) / 1000;\r\n            ref.current.rotate(angleDiff);\r\n          }, ref.current);\r\n          anim.start();\r\n        }\r\n      }\r\n    }\r\n  }, [image, onLoad, status]);\r\n\r\n  if (src == null) return null;\r\n\r\n  return (\r\n    <Image\r\n      ref={ref}\r\n      image={image}\r\n      x={x + width / 2}\r\n      y={y + height / 2}\r\n      filters={color !== null ? [Konva.Filters.RGB] : null}\r\n      red={color !== null ? hexToRgb(color).r : null}\r\n      green={color !== null ? hexToRgb(color).g : null}\r\n      blue={color !== null ? hexToRgb(color).b : null}\r\n      width={width}\r\n      height={height}\r\n      crop={crop}\r\n      offset={{ x: width / 2, y: height / 2 }}\r\n    />\r\n  );\r\n};\r\n\r\n/* Takes an array of lines; each line is an array of phrase objects.\r\n * Sadly assumes horizontal and vertical centering. Too much work to make more general.\r\n * Example: [\r\n *   [\r\n *     { text: \"Deal \", weight: 600, size: 50, family: \"Open Sans\", color: \"#333\" },\r\n *     { text: \"83\", weight: 600, size: 50, family: \"Open Sans\", color: \"#433\" },\r\n *   ],\r\n *   [\r\n *     { text: \"damage\", weight: 600, size: 50, family: \"Open Sans\", color: \"#333\" },\r\n *   ]\r\n * ]\r\n */\r\nexport const CardMultiStyleText = ({\r\n  textArray,\r\n  yCenter,\r\n  xCenter,\r\n  fontsLoaded\r\n}) => {\r\n  const textHeight = textArray.reduce(\r\n    (sum, textLine) => sum + Math.max(...textLine.map(phrase => phrase.size)),\r\n    0\r\n  );\r\n  let topYOffset = yCenter - textHeight / 2;\r\n  return textArray.map((textLine, textLineIndex) => {\r\n    const maxFontSize = Math.max(...textLine.map(phrase => phrase.size));\r\n    const yPos = topYOffset;\r\n    topYOffset += maxFontSize;\r\n    const lineWidth = textLine.reduce(\r\n      (sum, phrase) =>\r\n        sum +\r\n        measureText(phrase.text, phrase.weight, phrase.size, phrase.family),\r\n      0\r\n    );\r\n    let leftXOffset = xCenter - lineWidth / 2;\r\n\r\n    return textLine.map((phrase, phraseIndex) => {\r\n      const xPos = leftXOffset;\r\n      leftXOffset += measureText(\r\n        phrase.text,\r\n        phrase.weight,\r\n        phrase.size,\r\n        phrase.family\r\n      );\r\n      return (\r\n        <CardText\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          key={`spellDesc${textLineIndex}-${phraseIndex}`}\r\n          x={xPos}\r\n          y={yPos}\r\n          text={phrase.text}\r\n          color={phrase.color}\r\n          fontFamily={phrase.family}\r\n          fontSize={phrase.size}\r\n          fontWeight={phrase.weight}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nexport const CardText = ({\r\n  text,\r\n  color = \"#FFF\",\r\n  fontSize,\r\n  fontFamily = \"Open Sans\",\r\n  fontWeight,\r\n  x = 0,\r\n  y = 0,\r\n  opacity = 1,\r\n  width = null,\r\n  height = null,\r\n  horizontalAlign = \"center\",\r\n  verticalAlign = \"top\",\r\n  shadowColor = null,\r\n  shadowOffset = 0,\r\n  fontsLoaded\r\n}) => {\r\n  return (\r\n    <Text\r\n      text={text}\r\n      fill={color}\r\n      x={x}\r\n      y={y}\r\n      width={width}\r\n      opacity={opacity}\r\n      height={height}\r\n      fontSize={fontSize}\r\n      fontFamily={fontsLoaded ? fontFamily : \"Arial\"}\r\n      fontStyle={fontWeight}\r\n      align={horizontalAlign}\r\n      verticalAlign={verticalAlign}\r\n      shadowColor={shadowColor}\r\n      shadowOffset={{ x: shadowOffset, y: shadowOffset }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const CardTextRef = forwardRef(\r\n  (\r\n    {\r\n      text,\r\n      color = \"#FFF\",\r\n      fontSize,\r\n      fontFamily = \"Open Sans\",\r\n      fontWeight,\r\n      x = 0,\r\n      y = 0,\r\n      opacity = 1,\r\n      width = null,\r\n      height = null,\r\n      horizontalAlign = \"center\",\r\n      verticalAlign = \"top\",\r\n      shadowColor = null,\r\n      shadowOffset = 0,\r\n      fontsLoaded\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <Text\r\n        ref={ref}\r\n        text={text}\r\n        fill={color}\r\n        x={x}\r\n        y={y}\r\n        width={width}\r\n        opacity={opacity}\r\n        height={height}\r\n        fontSize={fontSize}\r\n        fontFamily={fontsLoaded ? fontFamily : \"sans-serif\"}\r\n        fontStyle={fontWeight}\r\n        align={horizontalAlign}\r\n        verticalAlign={verticalAlign}\r\n        shadowColor={shadowColor}\r\n        shadowOffset={{ x: shadowOffset, y: shadowOffset }}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardBase = ({ children, width, height }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.card}>\r\n      <Stage scaleX={1} width={width} height={height}>\r\n        {children}\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Tooltip } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Icon } from \"../../../Util\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  buttonGrid: {\r\n    width: \"100%\"\r\n  },\r\n  buttonIcon: {\r\n    fontSize: \"2em\"\r\n  },\r\n  button: {\r\n    margin: \"0 auto\",\r\n    display: \"table\"\r\n  }\r\n}));\r\n\r\nconst PreviewButtonBar = ({ troopName, displayLayer }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.buttonGrid}>\r\n      <Tooltip title=\"Download\" aria-label=\"download\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            if (displayLayer.current !== null) {\r\n              const link = document.createElement(\"a\");\r\n              link.download = `${troopName}.png`;\r\n              link.href = displayLayer.current.toDataURL();\r\n              document.body.appendChild(link);\r\n              link.click();\r\n              document.body.removeChild(link);\r\n            }\r\n          }}\r\n        >\r\n          <Icon className={classes.buttonIcon} icon=\"nf-mdi-download\" />\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewButtonBar;\r\n","import React, { useRef } from \"react\";\r\nimport { CardContent, Grid, Card, Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stage, Layer } from \"react-konva\";\r\nimport { CardLayer } from \"./areas/preview/cards/CardBase\";\r\n\r\nimport PreviewButtonBar from \"./areas/preview/PreviewButtonBar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonIcon: {\r\n    fontSize: \"2em\"\r\n  },\r\n  canvas: {\r\n    width: \"100%\",\r\n    margin: \"0px auto\",\r\n    display: \"table\"\r\n  },\r\n  card: {\r\n    paddingBottom: \"12px\"\r\n  },\r\n  cardBox: {\r\n    padding: `${theme.spacing(1.5)}px 0 ${theme.spacing(3)}px 0`\r\n  },\r\n  mainCard: {\r\n    margin: `${theme.spacing(3)}px 0 0 0`,\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nconst TabResult = ({ troop, spellLayer, troopLayer, traitsLayer }) => {\r\n  const classes = useStyles();\r\n\r\n  const resultStageRef = useRef();\r\n\r\n  return (\r\n    <Card className={classes.mainCard}>\r\n      <CardContent>\r\n        <Grid container>\r\n          <Grid item container justify=\"center\" xs={12}>\r\n            <Grid item>\r\n              <Box className={classes.card}>\r\n                <Stage width={1470} height={744}>\r\n                  <Layer ref={resultStageRef}>\r\n                    <CardLayer\r\n                      height={709}\r\n                      x={5}\r\n                      y={30}\r\n                      layerRef={spellLayer}\r\n                    />\r\n                    <CardLayer\r\n                      height={739}\r\n                      x={475}\r\n                      y={0}\r\n                      loadingY={30}\r\n                      layerRef={troopLayer}\r\n                    />\r\n                    <CardLayer\r\n                      height={709}\r\n                      x={1005}\r\n                      y={30}\r\n                      layerRef={traitsLayer}\r\n                    />\r\n                  </Layer>\r\n                </Stage>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <PreviewButtonBar\r\n            troopName={troop.name}\r\n            displayLayer={resultStageRef}\r\n          />\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TabResult;\r\n","import React from \"react\";\r\nimport { Typography, Grid, Tabs, Tab } from \"@material-ui/core\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport { AutoSizer } from \"react-virtualized\";\r\n\r\nconst renderThumb = ({ style }) => (\r\n  <div\r\n    style={{\r\n      ...style,\r\n      cursor: \"pointer\",\r\n      borderRadius: \"inherit\",\r\n      backgroundColor: \"rgba(255,255,255,.8)\"\r\n    }}\r\n  />\r\n);\r\n\r\nexport const TabList = ({ currentTab, setCurrentTab }) => {\r\n  // Handle a change in tab.\r\n  const handleTabEvent = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      value={currentTab}\r\n      onChange={handleTabEvent}\r\n      indicatorColor=\"primary\"\r\n      textColor=\"primary\"\r\n      centered\r\n    >\r\n      <Tab label=\"Spell\" id=\"tab-0\" />\r\n      <Tab label=\"Troop\" id=\"tab-1\" />\r\n      <Tab label=\"Traits\" id=\"tab-2\" />\r\n      <Tab label=\"Result\" id=\"tab-3\" />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport const ScrollingContainer = ({ children }) => {\r\n  return (\r\n    <AutoSizer>\r\n      {({ width, height }) => (\r\n        <Scrollbars style={{ width, height }} renderThumbVertical={renderThumb}>\r\n          {children}\r\n        </Scrollbars>\r\n      )}\r\n    </AutoSizer>\r\n  );\r\n};\r\n\r\nexport const TabView = ({ children, value, index, dir }) => (\r\n  <Typography\r\n    component=\"div\"\r\n    role=\"tabpanel\"\r\n    hidden={value !== index}\r\n    id={`full-width-tabpanel-${index}`}\r\n    aria-labelledby={`full-width-tab-${index}`}\r\n    dir={dir}\r\n  >\r\n    <Grid container direction=\"row\">\r\n      {children}\r\n    </Grid>\r\n  </Typography>\r\n);\r\n","import React, { memo, useCallback } from \"react\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { GridCard } from \"../../../Util\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formElement: {\r\n    margin: `${theme.spacing(1.5)}px 0`\r\n  },\r\n  dropzone: {\r\n    backgroundColor: \"#1f1f1f\"\r\n  }\r\n}));\r\n\r\nconst FormUploader = memo(({ handleTroopChange }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChangeFiles = useCallback(\r\n    files => {\r\n      handleTroopChange(\"files\", files.length !== 0 ? files[0] : null);\r\n    },\r\n    [handleTroopChange]\r\n  );\r\n\r\n  return (\r\n    <GridCard\r\n      gridClassName={classes.formElement}\r\n      cardClassName={classes.card}\r\n      xs={12}\r\n      sm={12}\r\n      md={12}\r\n      lg={12}\r\n      xl={12}\r\n    >\r\n      <Typography variant=\"h4\">Image</Typography>\r\n      <Typography variant=\"subtitle2\" gutterBottom>\r\n        Preferred Size: 460x652\r\n      </Typography>\r\n      <DropzoneArea\r\n        dropzoneClass={classes.dropzone}\r\n        acceptedFiles={[\"image/*\"]}\r\n        filesLimit={1}\r\n        showAlerts\r\n        onChange={handleChangeFiles}\r\n      />\r\n    </GridCard>\r\n  );\r\n});\r\n\r\nexport default FormUploader;\r\n","import React, { memo } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  InputAdornment,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Image,\r\n  FormText,\r\n  FormCheckbox,\r\n  GridCard,\r\n  validateFieldLength\r\n} from \"../../../Util\";\r\nimport FormUploader from \"./FormUploader\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    spellPower: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"50%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    formElement: {\r\n      margin: `${theme.spacing(1.5)}px 0 0 0`\r\n    },\r\n    fullField: {\r\n      width: \"100%\"\r\n    },\r\n    fieldIcon: {\r\n      width: \"auto\",\r\n      height: theme.spacing(3),\r\n      marginRight: theme.spacing(0.5)\r\n    }\r\n  };\r\n});\r\n\r\nconst FormSpell = memo(({ troop, handleTroopChange, className }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      lg={8}\r\n      container\r\n      item\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Spell Name</Typography>\r\n        <FormText\r\n          id=\"form-spellname\"\r\n          fieldName=\"spellname\"\r\n          value={troop.spellname}\r\n          onChange={handleTroopChange}\r\n          label=\"Spell Name\"\r\n          className={classes.fullField}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Spell Description</Typography>\r\n        <FormText\r\n          id=\"form-spelldesc\"\r\n          fieldName=\"spelldesc\"\r\n          value={troop.spelldesc}\r\n          onChange={handleTroopChange}\r\n          label=\"Spell Description\"\r\n          multiline\r\n          helperText=\"{magic} specifies spell power\"\r\n          className={classes.fullField}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Magic</Typography>\r\n        <FormText\r\n          id=\"form-magic\"\r\n          fieldName=\"magic\"\r\n          value={troop.magic}\r\n          onChange={handleTroopChange}\r\n          label=\"Magic\"\r\n          type=\"number\"\r\n          className={classes.fullField}\r\n          onInput={validateFieldLength(3)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Image\r\n                  source=\"./assets/graphics/troop/magic.png\"\r\n                  className={classes.fieldIcon}\r\n                />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Spell Power</Typography>\r\n        <FormText\r\n          id=\"form-spellmult\"\r\n          fieldName=\"spellmult\"\r\n          value={troop.spellmult}\r\n          onChange={handleTroopChange}\r\n          label=\"Multiplier\"\r\n          type=\"number\"\r\n          className={classes.spellPower}\r\n        />\r\n        <FormText\r\n          id=\"form-spellbase\"\r\n          fieldName=\"spellbase\"\r\n          value={troop.spellbase}\r\n          onChange={handleTroopChange}\r\n          label=\"Base\"\r\n          type=\"number\"\r\n          className={classes.spellPower}\r\n        />\r\n        <FormCheckbox\r\n          checked={troop.spellrange}\r\n          fieldName=\"spellrange\"\r\n          onChange={handleTroopChange}\r\n          label=\"Range?\"\r\n        />\r\n      </GridCard>\r\n      <FormUploader troop={troop} handleTroopChange={handleTroopChange} />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default FormSpell;\r\n","export const colors = [\r\n  { value: \"Blue\", label: \"Blue\" },\r\n  { value: \"Green\", label: \"Green\" },\r\n  { value: \"Red\", label: \"Red\" },\r\n  { value: \"Yellow\", label: \"Yellow\" },\r\n  { value: \"Purple\", label: \"Purple\" },\r\n  { value: \"Orange\", label: \"Brown\" },\r\n  { value: \"BlueGreen\", label: \"Blue / Green\" },\r\n  { value: \"BlueRed\", label: \"Blue / Red\" },\r\n  { value: \"BlueYellow\", label: \"Blue / Yellow\" },\r\n  { value: \"BluePurple\", label: \"Blue / Purple\" },\r\n  { value: \"BlueOrange\", label: \"Blue / Brown\" },\r\n  { value: \"GreenRed\", label: \"Green / Red\" },\r\n  { value: \"GreenYellow\", label: \"Green / Yellow\" },\r\n  { value: \"GreenPurple\", label: \"Green / Purple\" },\r\n  { value: \"GreenOrange\", label: \"Green / Brown\" },\r\n  { value: \"RedYellow\", label: \"Red / Yellow\" },\r\n  { value: \"RedPurple\", label: \"Red / Purple\" },\r\n  { value: \"RedOrange\", label: \"Red / Brown\" },\r\n  { value: \"YellowPurple\", label: \"Yellow / Purple\" },\r\n  { value: \"YellowOrange\", label: \"Yellow / Brown\" },\r\n  { value: \"PurpleOrange\", label: \"Purple / Brown\" },\r\n  { value: \"BlueGreenRed\", label: \"Blue / Green / Red\" },\r\n  { value: \"BlueGreenYellow\", label: \"Blue / Green / Yellow\" },\r\n  { value: \"BlueGreenPurple\", label: \"Blue / Green / Purple\" },\r\n  { value: \"BlueGreenOrange\", label: \"Blue / Green / Brown\" },\r\n  { value: \"BlueRedYellow\", label: \"Blue / Red / Yellow\" },\r\n  { value: \"BlueRedPurple\", label: \"Blue / Red / Purple\" },\r\n  { value: \"BlueRedOrange\", label: \"Blue / Red / Brown\" },\r\n  { value: \"BlueYellowPurple\", label: \"Blue / Yellow / Purple\" },\r\n  { value: \"BlueYellowOrange\", label: \"Blue / Yellow / Brown\" },\r\n  { value: \"BluePurpleOrange\", label: \"Blue / Purple / Brown\" },\r\n  { value: \"GreenRedYellow\", label: \"Green / Red / Yellow\" },\r\n  { value: \"GreenRedPurple\", label: \"Green / Red / Purple\" },\r\n  { value: \"GreenRedOrange\", label: \"Green / Red / Brown\" },\r\n  { value: \"GreenYellowPurple\", label: \"Green / Yellow / Purple\" },\r\n  { value: \"GreenYellowOrange\", label: \"Green / Yellow / Brown\" },\r\n  { value: \"GreenPurpleOrange\", label: \"Green / Purple / Brown\" },\r\n  { value: \"RedYellowPurple\", label: \"Red / Yellow / Purple\" },\r\n  { value: \"RedYellowOrange\", label: \"Red / Yellow / Brown\" },\r\n  { value: \"RedPurpleOrange\", label: \"Red / Purple / Brown\" },\r\n  { value: \"YellowPurpleOrange\", label: \"Yellow / Purple / Brown\" },\r\n  { value: \"All\", label: \"All\" }\r\n];\r\n\r\nexport const rarities = {\r\n  Common: { color: \"#FEFEFE\", pips: 1 },\r\n  Rare: { color: \"#54A721\", pips: 2 },\r\n  \"Ultra-Rare\": { color: \"#1D71FF\", pips: 3 },\r\n  Epic: { color: \"#9635E7\", pips: 4 },\r\n  Legendary: { color: \"#F3A120\", pips: 5 },\r\n  Mythic: { color: \"#13E3F6\", pips: 6 },\r\n  Doomed: { color: \"#B90000\", pips: 6 }\r\n};\r\n\r\nexport const roles = [\r\n  \"Assassin\",\r\n  \"Defender\",\r\n  \"Generator\",\r\n  \"Mage\",\r\n  \"Striker\",\r\n  \"Support\",\r\n  \"Warlock\",\r\n  \"Warmaster\",\r\n  \"Warrior\"\r\n];\r\n\r\n// CUT: exchangeattacktomagic, magearmor\r\nexport const traits = [\r\n  {\r\n    name: \"Absorb Power\",\r\n    code: \"spikearmor\",\r\n    desc: \"Gain 3 Magic when an enemy casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Accursed\",\r\n    code: \"cursed\",\r\n    desc: \"All enemies lose 2 random Skill points.\"\r\n  },\r\n  {\r\n    name: \"Adagio\",\r\n    code: \"silence\",\r\n    desc: \"Cleanse all allies when matching Yellow Gems.\"\r\n  },\r\n  {\r\n    name: \"Aegis\",\r\n    code: \"stoneskin\",\r\n    desc: \"Reduce damage from Skulls by 60%.\"\r\n  },\r\n  {\r\n    name: \"Aflame\",\r\n    code: \"aflame\",\r\n    desc: \"Burn enemies when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Agile\",\r\n    code: \"agile\",\r\n    desc: \"20% chance to dodge Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Air Brand\",\r\n    code: \"airbrand\",\r\n    desc: \"Gain 1 Attack for each Yellow ally.\"\r\n  },\r\n  {\r\n    name: \"Air Heart\",\r\n    code: \"airheart\",\r\n    desc: \"Gain 1 Life for each Yellow ally.\"\r\n  },\r\n  {\r\n    name: \"Air Link\",\r\n    code: \"airlink\",\r\n    desc: \"Gain bonus Yellow Mana from Yellow Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Air Spirit\",\r\n    code: \"airspirit\",\r\n    desc: \"Gain 1 Magic for each Yellow ally.\"\r\n  },\r\n  { name: \"Alert\", code: \"alert\", description: \"Immunity to Silence.\" },\r\n  {\r\n    name: \"Ancient Blessing\",\r\n    code: \"divineshield\",\r\n    desc: \"Bless a random Ally on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Ancient Mysteries\",\r\n    code: \"divineaura\",\r\n    desc:\r\n      \"25% chance to grant a random Positive Status Effect to a random Ally when my turn begins.\"\r\n  },\r\n  {\r\n    name: \"Angry Bear\",\r\n    code: \"nastyteeth\",\r\n    desc: \"Gain Enraged when matching Brown Gems.\"\r\n  },\r\n  {\r\n    name: \"Anti-Magic Sphere\",\r\n    code: \"jinx\",\r\n    desc: \"Reduce damage from Spells by 20%.\"\r\n  },\r\n  {\r\n    name: \"Anti-Magic\",\r\n    code: \"magiclink\",\r\n    desc: \"Deal double Skull damage vs. Enchanted enemies.\"\r\n  },\r\n  {\r\n    name: \"Antiquity\",\r\n    code: \"feyslayer\",\r\n    desc: \"Gain 4 Magic when using Artifacts.\"\r\n  },\r\n  {\r\n    name: \"Apparition\",\r\n    code: \"aspectofwar\",\r\n    desc: \"Gain 5 Attack when matching Skulls.\"\r\n  },\r\n  {\r\n    name: \"Aquatic Glory\",\r\n    code: \"winterveil\",\r\n    desc: \"All Merfolk allies gain 2 Magic when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Aquatic\",\r\n    code: \"waterspirit\",\r\n    desc: \"Submerge myself when I receive damage.\"\r\n  },\r\n  {\r\n    name: \"Arcane Surge\",\r\n    code: \"magiclink\",\r\n    desc: \"Gain bonus Purple Mana from Purple Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Arcane\",\r\n    code: \"arcane\",\r\n    desc: \"Gain 1 Magic when an ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Armor of Light\",\r\n    code: \"armored\",\r\n    desc: \"All troops gain 4 Armor.\"\r\n  },\r\n  {\r\n    name: \"Armor Piercing\",\r\n    code: \"armorpiercing\",\r\n    desc: \"50% chance to ignore Armor with Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Armor Plating\",\r\n    code: \"clockwork\",\r\n    desc: \"All Mech Allies gain 2 Armor per turn.\"\r\n  },\r\n  {\r\n    name: \"Armored\",\r\n    code: \"armored\",\r\n    desc: \"Reduce damage from Skulls by 25%.\"\r\n  },\r\n  {\r\n    name: \"Aspect of Death\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"Steal 2 Life from the first enemy at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Aspect of Famine\",\r\n    code: \"aspectoffamine\",\r\n    desc: \"First enemy loses 3 Skill points at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Aspect of Plague\",\r\n    code: \"aspectofplague\",\r\n    desc: \"Enemies lose 3 Skill points on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Aspect of War\",\r\n    code: \"aspectofwar\",\r\n    desc: \"Gain 3 Attack at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Assassinate\",\r\n    code: \"assassinate\",\r\n    desc: \"10% Chance to assassinate the last enemy when I deal Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Aura of Power\",\r\n    code: \"divineaura\",\r\n    desc: \"All Mystics gain 1 Magic on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Avenger\",\r\n    code: \"avenger\",\r\n    desc: \"Gain 3 Attack when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"Axes of Doom\",\r\n    code: \"dwarfslayer\",\r\n    desc: \"Gain 3 Magic if using an Axe.\"\r\n  },\r\n  {\r\n    name: \"Backup\",\r\n    code: \"humanbond\",\r\n    desc: \"35% chance to summon a Bandit when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"Ballistics\",\r\n    code: \"immense\",\r\n    desc: \"Gain 2 to a random Skill on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Banishment\",\r\n    code: \"manashield\",\r\n    desc: \"Dispel all enemies on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Bardic Inspiration\",\r\n    code: \"spikearmor\",\r\n    desc: \"All Yellow Allies gain 1 to all Stats at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Barkskin\",\r\n    code: \"natureheart\",\r\n    desc: \"Reduce damage from Skulls by 33%.\"\r\n  },\r\n  {\r\n    name: \"Beast Bond\",\r\n    code: \"beastbond\",\r\n    desc: \"Allied Beasts gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Beast Shield\",\r\n    code: \"beastbond\",\r\n    desc: \"Allied Beasts gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Beast Slayer\",\r\n    code: \"beastslayer\",\r\n    desc: \"Deal double Skull damage vs. Beasts.\"\r\n  },\r\n  {\r\n    name: \"Beast Spirit\",\r\n    code: \"centaurslayer\",\r\n    desc: \"Gain 1 Magic for each Beast ally.\"\r\n  },\r\n  {\r\n    name: \"Big Teeth\",\r\n    code: \"nagaslayer\",\r\n    desc: \"Gain 1 Attack when allies gain an Extra Turn.\"\r\n  },\r\n  {\r\n    name: \"Big\",\r\n    code: \"big\",\r\n    desc: \"Gain 1 Life on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Black Hunger\",\r\n    code: \"hunger\",\r\n    desc: \"Steal 2 Life from the first enemy when I match Purple Gems.\"\r\n  },\r\n  {\r\n    name: \"Blessing of Anu\",\r\n    code: \"divineshield\",\r\n    desc: \"All Blue Allies gain 1 to all Stats at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Blessing of Gaard\",\r\n    code: \"doom\",\r\n    desc: \"All Red Allies gain 1 to all Stats at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Blood and Glory\",\r\n    code: \"reinforced\",\r\n    desc: \"Gain 1 Glory in PvP Battles.\"\r\n  },\r\n  {\r\n    name: \"Bloodlust\",\r\n    code: \"frenzy\",\r\n    desc: \"Become Enraged when enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Bloodsucking\",\r\n    code: \"bloodsucking\",\r\n    desc: \"Deal double Skull damage to wounded enemies.\"\r\n  },\r\n  {\r\n    name: \"Bloodthirsty\",\r\n    code: \"bloodsucking\",\r\n    desc: \"Become enraged on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Bloody Boughs\",\r\n    code: \"dragonvines\",\r\n    desc: \"Entangle and inflict Bleed to a random Enemy when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"Boo!\",\r\n    code: \"soullegion\",\r\n    desc: \"Gain 8 Magic on Purple gem matches.\"\r\n  },\r\n  {\r\n    name: \"Bountyhunter\",\r\n    code: \"merchant\",\r\n    desc: \"Gain 2x - 6x to Bounty Score, based on my ascension.\"\r\n  },\r\n  {\r\n    name: \"Bright Death\",\r\n    code: \"airbrand\",\r\n    desc: \"Summon a Lightstorm when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Brilliant Aura\",\r\n    code: \"blessed\",\r\n    desc: \"All allies gain 2 Life on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Bull General\",\r\n    code: \"taurosbond\",\r\n    desc: \"All Tauros allies gain 1 Attack every turn.\"\r\n  },\r\n  {\r\n    name: \"Bullish Vigor\",\r\n    code: \"orclord\",\r\n    desc: \"All Allied Tauros start battles with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Bullseye\",\r\n    code: \"bullseye\",\r\n    desc: \"15% chance for Skull damage to be lethal.\"\r\n  },\r\n  {\r\n    name: \"Buried Hatred\",\r\n    code: \"stonebrand\",\r\n    desc: \"Deal double Skull damage vs. Brown Enemies.\"\r\n  },\r\n  {\r\n    name: \"Burning Hatred\",\r\n    code: \"firebrand\",\r\n    desc: \"Deal double Skull damage vs. Red Enemies.\"\r\n  },\r\n  {\r\n    name: \"Call Bones\",\r\n    code: \"undeadbond\",\r\n    desc: \"Summon a Bonestorm when an ally summons a troop.\"\r\n  },\r\n  {\r\n    name: \"Call Doom\",\r\n    code: \"daemonslayer\",\r\n    desc: \"Summon a Doomstorm when an ally summons a troop.\"\r\n  },\r\n  {\r\n    name: \"Call Fire\",\r\n    code: \"firespirit\",\r\n    desc: \"Summon a Firestorm when an ally summons a troop.\"\r\n  },\r\n  {\r\n    name: \"Call Ice\",\r\n    code: \"waterbrand\",\r\n    desc: \"Summon an Icestorm when an ally summons a troop.\"\r\n  },\r\n  {\r\n    name: \"Call Nature\",\r\n    code: \"natureheart\",\r\n    desc: \"Summon a Leafstorm when an ally summons a troop.\"\r\n  },\r\n  {\r\n    name: \"Call Stone\",\r\n    code: \"stonespirit\",\r\n    desc: \"Summon a Duststorm when an ally summons a troop.\"\r\n  },\r\n  {\r\n    name: \"Cataclysm\",\r\n    code: \"molten\",\r\n    desc: \"Explode 2 random Gems when I deal skull damage.\"\r\n  },\r\n  {\r\n    name: \"Celestial Currents\",\r\n    code: \"blessed\",\r\n    desc: \"All Centaur allies gain 1 Magic.\"\r\n  },\r\n  {\r\n    name: \"Celestial Sage\",\r\n    code: \"divineshield\",\r\n    desc: \"Give all Allies 1 Magic on 4 or 5 matches.\"\r\n  },\r\n  {\r\n    name: \"Celestial Shield\",\r\n    code: \"divineshield\",\r\n    desc: \"Gain a Barrier on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Centaur Bond\",\r\n    code: \"centaurbond\",\r\n    desc: \"Allied Centaurs gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Centaur Shield\",\r\n    code: \"centaurbond\",\r\n    desc: \"Allied Centaurs gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Centaur Slayer\",\r\n    code: \"centaurslayer\",\r\n    desc: \"Deal double Skull damage vs. Centaurs.\"\r\n  },\r\n  {\r\n    name: \"Chaos Storm\",\r\n    code: \"airspirit\",\r\n    desc: \"Summon a random storm on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Chaos Wave\",\r\n    code: \"inscribed\",\r\n    desc: \"All enemies lose 1 point on a random skill when I match Skulls.\"\r\n  },\r\n  {\r\n    name: \"Child of Sky\",\r\n    code: \"divinebond\",\r\n    desc: \"25% chance to summon a Heronath when an ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Chill of Death\",\r\n    code: \"chilltouch\",\r\n    desc: \"When an enemy dies, Freeze another random enemy.\"\r\n  },\r\n  {\r\n    name: \"Chill Touch\",\r\n    code: \"chilltouch\",\r\n    desc: \"Inflict Frozen when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Chill\",\r\n    code: \"chill\",\r\n    desc: \"Gain 8 Magic on Blue gem matches.\"\r\n  },\r\n  {\r\n    name: \"Chilling Aura\",\r\n    code: \"icycloak\",\r\n    desc: \"Steal 2 Attack from the first enemy on 4 or 5 matches.\"\r\n  },\r\n  {\r\n    name: \"Cleanse\",\r\n    code: \"divineshield\",\r\n    desc: \"Cleanse all allies on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Clobber\",\r\n    code: \"clobber\",\r\n    desc: \"Deal double Skull damage vs. Stunned enemies.\"\r\n  },\r\n  {\r\n    name: \"Clockwork\",\r\n    code: \"clockwork\",\r\n    desc: \"All Mechs start battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Commander\",\r\n    code: \"kingswill\",\r\n    desc: \"Gain 2 to all Skills if in first position.\"\r\n  },\r\n  {\r\n    name: \"Compassion\",\r\n    code: \"compassion\",\r\n    desc: \"Gain 8 Magic on Red gem matches.\"\r\n  },\r\n  {\r\n    name: \"Conflagration\",\r\n    code: \"molten\",\r\n    desc: \"Burn all enemies on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Construct Bond\",\r\n    code: \"constructbond\",\r\n    desc: \"Allied Constructs gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Construct Shield\",\r\n    code: \"constructbond\",\r\n    desc: \"Allied Constructs gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Construct Slayer\",\r\n    code: \"constructslayer\",\r\n    desc: \"Deal double Skull damage vs. Constructs.\"\r\n  },\r\n  {\r\n    name: \"Contagion\",\r\n    code: \"siphon\",\r\n    desc: \"Inflict Disease on a random Enemy on Green Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Corruption\",\r\n    code: \"miasma\",\r\n    desc: \"Steal 3 Life from the first enemy when matching Red Gems.\"\r\n  },\r\n  {\r\n    name: \"Counterattack\",\r\n    code: \"defender\",\r\n    desc: \"Gain 2 attack when I take damage.\"\r\n  },\r\n  {\r\n    name: \"Crashing Wave\",\r\n    code: \"waterspirit\",\r\n    desc: \"Explode a Blue Gem when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"Creeping Doom\",\r\n    code: \"ensoul\",\r\n    desc: \"75% chance to summon a Webspinner when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Crystallize\",\r\n    code: \"graniteskin\",\r\n    desc: \"Gain Enchant when matching Purple Gems.\"\r\n  },\r\n  {\r\n    name: \"Cunning\",\r\n    code: \"cunning\",\r\n    desc: \"Immunity to Hunter's Mark.\"\r\n  },\r\n  {\r\n    name: \"Curse of Madness\",\r\n    code: \"ward\",\r\n    desc: \"Curse a random Enemy when matching Brown.\"\r\n  },\r\n  {\r\n    name: \"Cursed Touch\",\r\n    code: \"cursed\",\r\n    desc: \"Inflict Curse when dealing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Daemon Bond\",\r\n    code: \"daemonbond\",\r\n    desc: \"Allied Daemons gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Daemon Shield\",\r\n    code: \"daemonbond\",\r\n    desc: \"Allied Daemons gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Daemon Slayer\",\r\n    code: \"daemonslayer\",\r\n    desc: \"Deal double Skull damage vs. Daemons. \"\r\n  },\r\n  {\r\n    name: \"Daemonic Pact\",\r\n    code: \"daemonicpact\",\r\n    desc: \"25% chance to summon an Ancient Horror on death.\"\r\n  },\r\n  {\r\n    name: \"Daemonic Rage\",\r\n    code: \"daemonslayer\",\r\n    desc: \"All Daemons gain 1 Attack.\"\r\n  },\r\n  {\r\n    name: \"Dark Ancestry\",\r\n    code: \"cursed\",\r\n    desc: \"Immune to Mana Drain, Silence, Faerie Fire, and Web.\"\r\n  },\r\n  {\r\n    name: \"Dark Channel\",\r\n    code: \"darkchannel\",\r\n    desc: \"50% chance to gain 1 Magic every turn.\"\r\n  },\r\n  {\r\n    name: \"Dark Covenant\",\r\n    code: \"daemonicpact\",\r\n    desc: \"25% chance to summon Envy on death.\"\r\n  },\r\n  {\r\n    name: \"Dark Death\",\r\n    code: \"magicbrand\",\r\n    desc: \"Summon a Darkstorm when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Dark Fury\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"Gain 8 Attack and Magic when I take damage.\"\r\n  },\r\n  {\r\n    name: \"Dark Hatred\",\r\n    code: \"magicbrand\",\r\n    desc: \"Deal double Skull damage vs. Purple Enemies.\"\r\n  },\r\n  {\r\n    name: \"Dark Hunger\",\r\n    code: \"centaurslayer\",\r\n    desc: \"Steal 1 Life from the first enemy when matching Purple Gems.\"\r\n  },\r\n  {\r\n    name: \"Dark Venom\",\r\n    code: \"venomous\",\r\n    desc: \"Poison a random Enemy when matching purple Gems.\"\r\n  },\r\n  {\r\n    name: \"Darkfall\",\r\n    code: \"darkfall\",\r\n    desc: \"Gain 1 Attack when matching Purple Gems.\"\r\n  },\r\n  {\r\n    name: \"Darkness\",\r\n    code: \"darkfall\",\r\n    desc: \"Decrease all enemies' Attack by 4 on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Dawn’s Aura\",\r\n    code: \"sunshine\",\r\n    desc: \"Create a lightstorm at the start of a battle.\"\r\n  },\r\n  {\r\n    name: \"Deadly Flock\",\r\n    code: \"airbrand\",\r\n    desc: \"25% chance to summon a Bladewing when an Enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Deadly Waters\",\r\n    code: \"miasma\",\r\n    desc: \"Create a Bonestorm on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Death Below\",\r\n    code: \"hunger\",\r\n    desc: \"8% Chance to kill the last enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Death Curse\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"Death Mark all enemies when I die.\"\r\n  },\r\n  {\r\n    name: \"Death Ray\",\r\n    code: \"trueshot\",\r\n    desc: \"Death Mark the first enemy when I take damage to Life.\"\r\n  },\r\n  {\r\n    name: \"Death Touch\",\r\n    code: \"deathtouch\",\r\n    desc: \"Inflict Death Mark when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Deep Magic\",\r\n    code: \"magicbrand\",\r\n    desc: \"Gain 5 Magic when attacking Delves.\"\r\n  },\r\n  {\r\n    name: \"Deep Shield\",\r\n    code: \"reinforced\",\r\n    desc: \"Gain 9 Armor when attacking Delves.\"\r\n  },\r\n  {\r\n    name: \"Deep Strength\",\r\n    code: \"avenger\",\r\n    desc: \"Gain 7 Attack when attacking Delves.\"\r\n  },\r\n  {\r\n    name: \"Deep Vitality\",\r\n    code: \"regeneration\",\r\n    desc: \"Gain 9 Life when attacking Delves.\"\r\n  },\r\n  {\r\n    name: \"Deep Water\",\r\n    code: \"bloodsucking\",\r\n    desc: \"Submerge myself on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Deep Wounds\",\r\n    code: \"assassinate\",\r\n    desc: \"Inflict Bleed on a random enemy on Red Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Defender\",\r\n    code: \"defender\",\r\n    desc: \"Allies gain 3 Armor when defending in PVP.\"\r\n  },\r\n  {\r\n    name: \"Delirium\",\r\n    code: \"indigestible\",\r\n    desc: \"Gain 2 Magic and Attack when I take damage to Life.\"\r\n  },\r\n  {\r\n    name: \"Deluge\",\r\n    code: \"waterlink\",\r\n    desc: \"Submerge a random ally on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Depth Charge\",\r\n    code: \"waterspirit\",\r\n    desc: \"Deal double Skull damage vs. Submerged enemies.\"\r\n  },\r\n  {\r\n    name: \"Desert King\",\r\n    code: \"kingswill\",\r\n    desc: \"All Brown Allies gain 1 to all Stats at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Destiny of Darkness\",\r\n    code: \"darkfall\",\r\n    desc: \"2% chance to Deathmark an enemy when matching Purple Gems, boosted by my ascensions.\"\r\n  },\r\n  {\r\n    name: \"Destiny of Flame\",\r\n    code: \"fierycloak\",\r\n    desc: \"2% chance to Deathmark an enemy when matching Red Gems, boosted by my ascensions.\"\r\n  },\r\n  {\r\n    name: \"Destiny of Ice\",\r\n    code: \"frozensoul\",\r\n    desc: \"2% chance to Deathmark an enemy when matching Blue Gems, boosted by my ascensions.\"\r\n  },\r\n  {\r\n    name: \"Destiny of Light\",\r\n    code: \"sunshine\",\r\n    desc: \"2% chance to Deathmark an enemy when matching Yellow Gems, boosted by my ascensions.\"\r\n  },\r\n  {\r\n    name: \"Destiny of Nature\",\r\n    code: \"seedling\",\r\n    desc: \"2% chance to Deathmark an enemy when matching Green Gems, boosted by my ascensions.\"\r\n  },\r\n  {\r\n    name: \"Destiny of Stone\",\r\n    code: \"graniteskin\",\r\n    desc: \"2% chance to Deathmark an enemy when matching Brown Gems, boosted by my ascensions.\"\r\n  },\r\n  {\r\n    name: \"Dexterous\",\r\n    code: \"spikearmor\",\r\n    desc: \"40% chance to dodge Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Dissonance\",\r\n    code: \"silence\",\r\n    desc: \"Silence a random enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Divine Aura\",\r\n    code: \"divineaura\",\r\n    desc: \"All allies heal 2 points per turn.\"\r\n  },\r\n  {\r\n    name: \"Divine Bond\",\r\n    code: \"divinebond\",\r\n    desc: \"Allied Divines gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Divine Right\",\r\n    code: \"divineshield\",\r\n    desc: \"Gain 4 Armor when an ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Divine Shield\",\r\n    code: \"divinebond\",\r\n    desc: \"Allied Divines gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Divine Slayer\",\r\n    code: \"divineslayer\",\r\n    desc: \"Deal double Skull damage vs. Divine.\"\r\n  },\r\n  {\r\n    name: \"Divinity\",\r\n    code: \"divineaura\",\r\n    desc: \"All Divine Allies gain 2 Life every turn.\"\r\n  },\r\n  {\r\n    name: \"Dodge\",\r\n    code: \"agile\",\r\n    desc: \"30% chance to dodge Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Doom Aura\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"Create a Doomstorm on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Doom\",\r\n    code: \"doom\",\r\n    desc: \"Deal double Skull damage vs. Death Marked enemies.\"\r\n  },\r\n  {\r\n    name: \"Dragon Bond\",\r\n    code: \"dragonbond\",\r\n    desc: \"Allied Dragons gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Dragon Boon\",\r\n    code: \"dragonbond\",\r\n    desc: \"25% chance to summon a Dragonette on death.\"\r\n  },\r\n  {\r\n    name: \"Dragon Shield\",\r\n    code: \"dragonbond\",\r\n    desc: \"Allied Dragons gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Dragon Slayer\",\r\n    code: \"dragonslayer\",\r\n    desc: \"Deal double Skull damage vs. Dragons.\"\r\n  },\r\n  {\r\n    name: \"Dragon Vines\",\r\n    code: \"dragonvines\",\r\n    desc: \"Entangle the first enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Dragon's Blessing\",\r\n    code: \"divineaura\",\r\n    desc: \"Cause a random positive status effect on a random Ally on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Dragon's Grace\",\r\n    code: \"manyheads\",\r\n    desc: \"All ally Dragons gain 1 Life and Magic on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Drowned Crew\",\r\n    code: \"undeadslayer\",\r\n    desc: \"All Elementals start battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Dusk’s Aura\",\r\n    code: \"darkchannel\",\r\n    desc: \"Create a darkstorm at the start of a battle.\"\r\n  },\r\n  {\r\n    name: \"Dwarf Bond\",\r\n    code: \"dwarfbond\",\r\n    desc: \"Allied Dwarves gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Dwarf Shield\",\r\n    code: \"dwarfbond\",\r\n    desc: \"Allied Dwarves gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Dwarf Slayer\",\r\n    code: \"dwarfslayer\",\r\n    desc: \"Deal double Skull damage vs. Dwarves.\"\r\n  },\r\n  {\r\n    name: \"Dwarven Armor\",\r\n    code: \"giantbond\",\r\n    desc: \"Gain 4 Armor for each Dwarven ally.\"\r\n  },\r\n  {\r\n    name: \"Dwarven Doom\",\r\n    code: \"soullegion\",\r\n    desc: \"Summon a Doomstorm when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Dwarven Mettle\",\r\n    code: \"giantslayer\",\r\n    desc: \"All Dwarven allies gain 2 Life and Attack on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Eagle Eye\",\r\n    code: \"alert\",\r\n    desc: \"Place Hunter's Mark on enemies when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Earthquake\",\r\n    code: \"shatter\",\r\n    desc: \"Stun all Enemies on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Electrified Plating\",\r\n    code: \"technomancy\",\r\n    desc: \"Add 50% of Armor to Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Elemental Bond\",\r\n    code: \"elementalbond\",\r\n    desc: \"Allied Elementals gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Elemental Shield\",\r\n    code: \"elementalbond\",\r\n    desc: \"Allied Elementals gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Elemental Slayer\",\r\n    code: \"elementalslayer\",\r\n    desc: \"Deal double Skull damage vs. Elementals.\"\r\n  },\r\n  {\r\n    name: \"Elf Bond\",\r\n    code: \"elfbond\",\r\n    desc: \"Allied Elves gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Elf Shield\",\r\n    code: \"elfbond\",\r\n    desc: \"Allied Elves gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Elf Slayer\",\r\n    code: \"elfslayer\",\r\n    desc: \"Deal double Skull damage vs. Elves.\"\r\n  },\r\n  {\r\n    name: \"Elven Kin\",\r\n    code: \"dragonvines\",\r\n    desc: \"All Elves start battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Elven Sentries\",\r\n    code: \"elfbond\",\r\n    desc: \"All Elves gain 1 Magic and Attack at the start of a battle.\"\r\n  },\r\n  {\r\n    name: \"Emperor's Blessing\",\r\n    code: \"kingswill\",\r\n    desc: \"Enchant a random ally on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Empowered\",\r\n    code: \"empowered\",\r\n    desc: \"Start battles with full Mana.\"\r\n  },\r\n  {\r\n    name: \"Energize\",\r\n    code: \"technomancy\",\r\n    desc: \"Gain 3 Magic on Yellow gem matches.\"\r\n  },\r\n  {\r\n    name: \"Ensoul\",\r\n    code: \"ensoul\",\r\n    desc: \"Gain an extra Soul on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Entrapment\",\r\n    code: \"fireproof\",\r\n    desc: \"Deal double Skull damage vs. Entangled enemies.\"\r\n  },\r\n  {\r\n    name: \"Eternal Summer\",\r\n    code: \"feybond\",\r\n    desc: \"All Fey Allies gain 2 Life every turn.\"\r\n  },\r\n  { name: \"Exemplar\", code: \"avenger\", description: \"Gain 5 Attack in PvP.\" },\r\n  {\r\n    name: \"Experiment\",\r\n    code: \"siphon\",\r\n    desc: \"Inflict a random status effect  on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Extreme Greed\",\r\n    code: \"greedy\",\r\n    desc: \"Gain 4 bonus Gold when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"Fall\",\r\n    code: \"fall\",\r\n    desc: \"Gain 8 Magic on Brown gem matches.\"\r\n  },\r\n  {\r\n    name: \"Familiar\",\r\n    code: \"goblord\",\r\n    desc: \"50% chance to summon a Giant Spider when I take damage.\"\r\n  },\r\n  {\r\n    name: \"Fast Healing\",\r\n    code: \"regeneration\",\r\n    desc: \"Recover 2 Life every turn.\"\r\n  },\r\n  { name: \"Fast\", code: \"fast\", description: \"Start battles with 50% Mana.\" },\r\n  {\r\n    name: \"Feline Fury\",\r\n    code: \"beastbond\",\r\n    desc: \"All Raksha gain 1 Attack and Life.\"\r\n  },\r\n  { name: \"Ferocity\", code: \"deathtouch\", description: \"Gain 4 Attack.\" },\r\n  { name: \"Fey Bond\", code: \"feybond\", description: \"Allied Fey gain 2 Life.\" },\r\n  {\r\n    name: \"Fey Link\",\r\n    code: \"spiritfire\",\r\n    desc: \"50% chance to Faerie Fire a random Enemy at the start of my Turn.\"\r\n  },\r\n  {\r\n    name: \"Fey Shield\",\r\n    code: \"feybond\",\r\n    desc: \"Allied Fey gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Fey Slayer\",\r\n    code: \"feyslayer\",\r\n    desc: \"Deal double Skull damage vs. Fey.\"\r\n  },\r\n  {\r\n    name: \"Fey Touch\",\r\n    code: \"feybond\",\r\n    desc: \"Faerie Fire enemies when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Fey Vengeance\",\r\n    code: \"aflame\",\r\n    desc: \"Faerie Fire a random enemy when an Ally dies.\"\r\n  },\r\n  {\r\n    name: \"Feyblade\",\r\n    code: \"feyslayer\",\r\n    desc: \"Deal double Skull damage vs. enemies with Faerie Fire.\"\r\n  },\r\n  {\r\n    name: \"Fiery Cloak\",\r\n    code: \"fierycloak\",\r\n    desc: \"Burn a random enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Fiery Death\",\r\n    code: \"firebrand\",\r\n    desc: \"Summon a Firestorm when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Fire Aura\",\r\n    code: \"fierycloak\",\r\n    desc: \"All Red Allies gain 5 to all Stats.\"\r\n  },\r\n  {\r\n    name: \"Fire Brand\",\r\n    code: \"firebrand\",\r\n    desc: \"Gain 1 Attack for each Red ally.\"\r\n  },\r\n  {\r\n    name: \"Fire Heart\",\r\n    code: \"fireheart\",\r\n    desc: \"Gain 1 Life for each Red ally.\"\r\n  },\r\n  {\r\n    name: \"Fire Link\",\r\n    code: \"firelink\",\r\n    desc: \"Gain bonus Red Mana from Red Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Fire Spirit\",\r\n    code: \"firespirit\",\r\n    desc: \"Gain 1 Magic for each Red ally.\"\r\n  },\r\n  {\r\n    name: \"Fireblade\",\r\n    code: \"pyromania\",\r\n    desc: \"Deal triple Skull damage to burning enemies.\"\r\n  },\r\n  {\r\n    name: \"Firebringer\",\r\n    code: \"firelink\",\r\n    desc: \"Gain bonus Red Mana from Red Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Fireproof\",\r\n    code: \"fireproof\",\r\n    desc: \"Immunity to Burning and Faerie Fire.\"\r\n  },\r\n  {\r\n    name: \"Firestarter\",\r\n    code: \"aflame\",\r\n    desc: \"Create a firestorm at the start of a battle.\"\r\n  },\r\n  {\r\n    name: \"First Wargare\",\r\n    code: \"nastyteeth\",\r\n    desc: \"Give 2 Attack and Magic to Allied Wargare when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"Focus\",\r\n    code: \"knightslayer\",\r\n    desc: \"Deal double Skull damage vs. enemies with Hunter's Mark.\"\r\n  },\r\n  {\r\n    name: \"For The Herd\",\r\n    code: \"taurosbond\",\r\n    desc: \"Give all Tauros 1 Attack, Armor and Life on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"For the People\",\r\n    code: \"queensgrace\",\r\n    desc: \"All Humans gain 2 Armor at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Fortitude\",\r\n    code: \"reinforced\",\r\n    desc: \"Immune to Stun, Poison, Disease, Death Mark and Devour.\"\r\n  },\r\n  {\r\n    name: \"Frenzy\",\r\n    code: \"frenzy\",\r\n    desc: \"Gain 1 Attack when taking damage.\"\r\n  },\r\n  {\r\n    name: \"From Ashes\",\r\n    code: \"fireheart\",\r\n    desc: \"Summon a Firestorm when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"From Bones\",\r\n    code: \"undeadbond\",\r\n    desc: \"Summon a Bonestorm when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"From Dark\",\r\n    code: \"magicheart\",\r\n    desc: \"Summon a Darkstorm when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"From Doom\",\r\n    code: \"deathtouch\",\r\n    desc: \"Summon a Doomstorm when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"From Ice\",\r\n    code: \"waterheart\",\r\n    desc: \"Summon an Icestorm when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"From Light\",\r\n    code: \"airheart\",\r\n    desc: \"Summon a Lightstorm when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"From Nature\",\r\n    code: \"natureheart\",\r\n    desc: \"Summon a Leafstorm when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"From Stone\",\r\n    code: \"stoneheart\",\r\n    desc: \"Summon a Duststorm when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"Frostbite\",\r\n    code: \"frozensoul\",\r\n    desc: \"25% chance to Freeze a random enemy when an ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Frozen Hatred\",\r\n    code: \"chilltouch\",\r\n    desc: \"Deal double Skull damage vs. Blue Enemies.\"\r\n  },\r\n  {\r\n    name: \"Frozen Soul\",\r\n    code: \"frozensoul\",\r\n    desc: \"Inflict Frozen when enemies deal Skull damage to me.\"\r\n  },\r\n  {\r\n    name: \"Full Plate\",\r\n    code: \"fullplate\",\r\n    desc: \"Gain 2 Armor every turn.\"\r\n  },\r\n  {\r\n    name: \"Gale Force\",\r\n    code: \"airspirit\",\r\n    desc: \"All Yellow allies gain 2 Attack.\"\r\n  },\r\n  {\r\n    name: \"Gate Guardian\",\r\n    code: \"gateguardian\",\r\n    desc: \"50% chance to Summon a Warg when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"General\",\r\n    code: \"leader\",\r\n    desc: \"Gain 3 to all Skills if in last position.\"\r\n  },\r\n  {\r\n    name: \"Get Behind Me!\",\r\n    code: \"divineshield\",\r\n    desc: \"25% chance to Barrier a random Ally at the start of my turn.\"\r\n  },\r\n  {\r\n    name: \"Giant Bond\",\r\n    code: \"giantbond\",\r\n    desc: \"Allied Giants gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Giant Lord\",\r\n    code: \"goblord\",\r\n    desc: \"All Giants start battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Giant Queen\",\r\n    code: \"queensgrace\",\r\n    desc: \"All Giant Allies gain 2 Life and Magic on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Giant Shield\",\r\n    code: \"giantbond\",\r\n    desc: \"Allied Giants gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Giant Slayer\",\r\n    code: \"giantslayer\",\r\n    desc: \"Deal double Skull damage vs. Giants.\"\r\n  },\r\n  {\r\n    name: \"Gift of Fire\",\r\n    code: \"fireheart\",\r\n    desc: \"All Red Allies gain 1 Magic.\"\r\n  },\r\n  {\r\n    name: \"Gloom\",\r\n    code: \"undeadbond\",\r\n    desc: \"All Purple allies gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Goblin Bond\",\r\n    code: \"goblinbond\",\r\n    desc: \"Allied Goblins gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Goblin Friend\",\r\n    code: \"goblinbond\",\r\n    desc: \"All Goblins gain 2 Attack.\"\r\n  },\r\n  {\r\n    name: \"Goblin Shield\",\r\n    code: \"goblinbond\",\r\n    desc: \"Allied Goblins gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Goblin Slayer\",\r\n    code: \"goblinslayer\",\r\n    desc: \"Deal double Skull damage vs. Goblins.\"\r\n  },\r\n  {\r\n    name: \"Goblord\",\r\n    code: \"goblord\",\r\n    desc: \"Gain 20 Life if in last position.\"\r\n  },\r\n  {\r\n    name: \"Godslayer\",\r\n    code: \"daemonslayer\",\r\n    desc: \"Deal 3x - 5x Skull damage vs. Bosses, based on my ascension.\"\r\n  },\r\n  {\r\n    name: \"Golem Protector\",\r\n    code: \"taurosbond\",\r\n    desc: \"20% chance to summon an Ancient Golem when I take damage to Life.\"\r\n  },\r\n  {\r\n    name: \"Granite Skin\",\r\n    code: \"graniteskin\",\r\n    desc: \"Reduce damage from Skulls by 75%.\"\r\n  },\r\n  {\r\n    name: \"Greedy\",\r\n    code: \"greedy\",\r\n    desc: \"Gain 2 bonus Gold on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Grim Curse\",\r\n    code: \"virulence\",\r\n    desc: \"Disease a random enemy when matching Purple Gems.\"\r\n  },\r\n  {\r\n    name: \"Grudge\",\r\n    code: \"grudge\",\r\n    desc: \"Gain 1 Attack when an enemy casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Hack n Slash\",\r\n    code: \"hacknslash\",\r\n    desc: \"Gain 3 Attack when dealing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Hammer Mastery\",\r\n    code: \"dwarfbond\",\r\n    desc: \"Gain 2 Magic if using a Hammer.\"\r\n  },\r\n  {\r\n    name: \"Harpy Flock\",\r\n    code: \"airheart\",\r\n    desc: \"5% chance to summon a Harpy when my turn begins.\"\r\n  },\r\n  {\r\n    name: \"Harvest Moon\",\r\n    code: \"darkfall\",\r\n    desc: \"All Wargare Allies gain 2 Life every turn.\"\r\n  },\r\n  {\r\n    name: \"Haunted Weave\",\r\n    code: \"stalker\",\r\n    desc: \"Web a random enemy when I summon a troop.\"\r\n  },\r\n  {\r\n    name: \"Head Hunter\",\r\n    code: \"soullegion\",\r\n    desc: \"50% chance to summon a Vargouille when an Enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Healing Herb\",\r\n    code: \"naturespirit\",\r\n    desc: \"Gain 4 Life when matching Green Gems.\"\r\n  },\r\n  {\r\n    name: \"Heatwave\",\r\n    code: \"fierycloak\",\r\n    desc: \"Create a Firestorm at the start of every turn.\"\r\n  },\r\n  {\r\n    name: \"Hellsteed\",\r\n    code: \"fierycloak\",\r\n    desc: \"25% chance to summon a Nightmare when an Ally casts a Spell.\"\r\n  },\r\n  {\r\n    name: \"Hidden Trap\",\r\n    code: \"darkchannel\",\r\n    desc: \"Explode a random Gem when matching Yellow Gems.\"\r\n  },\r\n  {\r\n    name: \"High Ancestry\",\r\n    code: \"mysticbond\",\r\n    desc: \"Immune to Mana Drain, Silence, Faerie Fire, and Death Mark.\"\r\n  },\r\n  {\r\n    name: \"High Seas\",\r\n    code: \"waterlink\",\r\n    desc: \"Gain 2 bonus Blue Mana when matching Blue Gems.\"\r\n  },\r\n  {\r\n    name: \"Holy Armor\",\r\n    code: \"armored\",\r\n    desc: \"Reduce damage from Skulls by 40%.\"\r\n  },\r\n  {\r\n    name: \"Huge\",\r\n    code: \"huge\",\r\n    desc: \"Gain 2 Life on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Human Bond\",\r\n    code: \"humanbond\",\r\n    desc: \"Allied Humans gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Human Shield\",\r\n    code: \"humanbond\",\r\n    desc: \"Allied Humans gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Human Slayer\",\r\n    code: \"humanslayer\",\r\n    desc: \"Deal double Skull damage vs. Humans.\"\r\n  },\r\n  {\r\n    name: \"Hunger\",\r\n    code: \"hunger\",\r\n    desc: \"Gain 2 to all Skills on Skull gem matches.\"\r\n  },\r\n  {\r\n    name: \"Hunt\",\r\n    code: \"stryxslayer\",\r\n    desc: \"Hunter’s Mark a random enemy on 4 or 5 of a kind.\"\r\n  },\r\n  {\r\n    name: \"Hunter's Moon\",\r\n    code: \"darkfall\",\r\n    desc: \"Hunter's Mark a random Enemy when matching Red Gems.\"\r\n  },\r\n  {\r\n    name: \"Ice Armor\",\r\n    code: \"chilltouch\",\r\n    desc: \"Reduce damage from Skulls by 65%.\"\r\n  },\r\n  {\r\n    name: \"Ice Aura\",\r\n    code: \"frozensoul\",\r\n    desc: \"All Blue Allies gain 5 to all Stats.\"\r\n  },\r\n  {\r\n    name: \"Icy Cloak\",\r\n    code: \"icycloak\",\r\n    desc: \"Deal triple Skull damage vs. Frozen enemies.\"\r\n  },\r\n  {\r\n    name: \"Icy Death\",\r\n    code: \"waterbrand\",\r\n    desc: \"Summon an Icestorm when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Icy Rebirth\",\r\n    code: \"chilltouch\",\r\n    desc: \"Freeze all Enemies when I die.\"\r\n  },\r\n  {\r\n    name: \"Icy Veil\",\r\n    code: \"waterbrand\",\r\n    desc: \"Create an icestorm at the start of a battle.\"\r\n  },\r\n  {\r\n    name: \"Immense\",\r\n    code: \"immense\",\r\n    desc: \"Gain 10 Life on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Immortal\",\r\n    code: \"immortal\",\r\n    desc: \"25% chance to resurrect after death.\"\r\n  },\r\n  { name: \"Immune\", code: \"immune\", description: \"Immunity to Disease.\" },\r\n  {\r\n    name: \"Impact\",\r\n    code: \"shatter\",\r\n    desc: \"Inflict Stun when enemies deal Skull damage to me.\"\r\n  },\r\n  {\r\n    name: \"Impervious\",\r\n    code: \"impervious\",\r\n    desc: \"Immune to all Status Effects, Devour, and Mana Burn.\"\r\n  },\r\n  {\r\n    name: \"Indigestible\",\r\n    code: \"indigestible\",\r\n    desc: \"Immunity to Devour.\"\r\n  },\r\n  {\r\n    name: \"Infernal Armor\",\r\n    code: \"aflame\",\r\n    desc: \"Reflect 25% of Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Insane Growth\",\r\n    code: \"immense\",\r\n    desc: \"Gain 5 to a random Skill on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Inscribed\",\r\n    code: \"inscribed\",\r\n    desc: \"Gain 1 Armor when an enemy casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Inspiration\",\r\n    code: \"queensgrace\",\r\n    desc: \"All Allies start battle with 15% Mana.\"\r\n  },\r\n  {\r\n    name: \"Inspire Hope\",\r\n    code: \"sunshine\",\r\n    desc: \"All Humans start battle with 50% Mana.\"\r\n  },\r\n  { name: \"Insulated\", code: \"insulated\", description: \"Immunity to Frozen.\" },\r\n  {\r\n    name: \"Invention\",\r\n    code: \"mechslayer\",\r\n    desc: \"Gain 2 Armor on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Invigorated\",\r\n    code: \"naturespirit\",\r\n    desc: \"Gain 1 Life when an ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Invulnerable\",\r\n    code: \"impervious\",\r\n    desc: \"Immune to all Status Effects, Devour,  Mana Drain, Transform, and Lethal Damage.\"\r\n  },\r\n  {\r\n    name: \"Jaws\",\r\n    code: \"nastyteeth\",\r\n    desc: \"All Merfolk gain 3 Attack on 4 or 5 Gem matches.\"\r\n  },\r\n  { name: \"Jinx\", code: \"jinx\", description: \"Halve enemy Gem Masteries.\" },\r\n  {\r\n    name: \"Just a Bite\",\r\n    code: \"hunger\",\r\n    desc: \"Steal 4 Life from the first enemy when matching Brown Gems.\"\r\n  },\r\n  {\r\n    name: \"King's Legion\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"All Undead Allies gain 1 Armor and Magic when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"King's Will\",\r\n    code: \"kingswill\",\r\n    desc: \"Gain 8 Life when I deal Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Knife Throwing\",\r\n    code: \"avenger\",\r\n    desc: \"Gain 2 Magic if using a Dagger.\"\r\n  },\r\n  {\r\n    name: \"Knight Bond\",\r\n    code: \"knightbond\",\r\n    desc: \"Allied Knights gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Knight Shield\",\r\n    code: \"knightbond\",\r\n    desc: \"Allied Knights gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Knight Slayer\",\r\n    code: \"knightslayer\",\r\n    desc: \"Deal double Skull damage vs. Knights.\"\r\n  },\r\n  {\r\n    name: \"Knockout\",\r\n    code: \"knockout\",\r\n    desc: \"Inflict Stun when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Leader\",\r\n    code: \"leader\",\r\n    desc: \"Gain 3 to all Skills if in first position.\"\r\n  },\r\n  {\r\n    name: \"Leading Light\",\r\n    code: \"armored\",\r\n    desc: \"Gain 10 Armor if in first position.\"\r\n  },\r\n  {\r\n    name: \"Lethal Toxin\",\r\n    code: \"lethaltoxin\",\r\n    desc: \"Deal triple Skull damage to Poisoned and Webbed enemies.\"\r\n  },\r\n  {\r\n    name: \"Life Drain\",\r\n    code: \"lifedrain\",\r\n    desc: \"Gain 4 Life when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Life Siphon\",\r\n    code: \"lifedrain\",\r\n    desc: \"Steal 2 Life from the first enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Light Fingers\",\r\n    code: \"greedy\",\r\n    desc: \"Gain 5 Gold every turn.\"\r\n  },\r\n  {\r\n    name: \"Lightbringer\",\r\n    code: \"merfolkbond\",\r\n    desc: \"Gain bonus Yellow Mana from Yellow Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Lightning Bolt\",\r\n    code: \"airbrand\",\r\n    desc: \"Deal 10 damage to a random enemy on 4 or 5 matches.\"\r\n  },\r\n  {\r\n    name: \"Lightning Strike\",\r\n    code: \"airbrand\",\r\n    desc: \"Explode 1 Yellow Gem on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Lion's Wrath\",\r\n    code: \"lionstrength\",\r\n    desc: \"Stun a random enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Lord of Beasts\",\r\n    code: \"lionstrength\",\r\n    desc: \"All Beasts start battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Lord of Death\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"All Undead gain 5 Life and Magic when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Lord of Storms\",\r\n    code: \"airlink\",\r\n    desc: \"Elementals gain 1 Magic when an ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Loyal Mount\",\r\n    code: \"dragonslayer\",\r\n    desc: \"100% chance to summon a Drake on death.\"\r\n  },\r\n  {\r\n    name: \"Mace of Power\",\r\n    code: \"dwarfbond\",\r\n    desc: \"Gain 2 Magic if using a Mace.\"\r\n  },\r\n  {\r\n    name: \"Mage Lord\",\r\n    code: \"mysticbond\",\r\n    desc: \"Gain 2 Magic if in last position.\"\r\n  },\r\n  {\r\n    name: \"Magic Aura\",\r\n    code: \"eyeofkhetar\",\r\n    desc: \"All Purple Allies gain 5 to all Stats.\"\r\n  },\r\n  {\r\n    name: \"Magic Brand\",\r\n    code: \"magicbrand\",\r\n    desc: \"Gain 1 Attack for each Purple ally.\"\r\n  },\r\n  {\r\n    name: \"Magic Heart\",\r\n    code: \"magicheart\",\r\n    desc: \"Gain 1 Life for each Purple ally.\"\r\n  },\r\n  {\r\n    name: \"Magic Link\",\r\n    code: \"magiclink\",\r\n    desc: \"Gain bonus Purple Mana from Purple Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Magic Spirit\",\r\n    code: \"magicspirit\",\r\n    desc: \"Gain 1 Magic for each Purple ally.\"\r\n  },\r\n  {\r\n    name: \"Magic Vines\",\r\n    code: \"dragonvines\",\r\n    desc: \"Entangle a random enemy when matching Purple.\"\r\n  },\r\n  {\r\n    name: \"Magical Shield\",\r\n    code: \"insulated\",\r\n    desc: \"All Purple allies gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Mana Shield\",\r\n    code: \"manashield\",\r\n    desc: \"Immunity to Mana Burn, Mana Drain and Mana Steal.\"\r\n  },\r\n  {\r\n    name: \"Mana Source\",\r\n    code: \"empowered\",\r\n    desc: \"Start battles with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Manifestation\",\r\n    code: \"humanbond\",\r\n    desc: \"Gain 5 to all Skill Points when matching Skulls.\"\r\n  },\r\n  {\r\n    name: \"Many Heads\",\r\n    code: \"manyheads\",\r\n    desc: \"All enemies take 3 damage when they deal Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Marauder Bond\",\r\n    code: \"marauderbond\",\r\n    desc: \"Allied Marauders gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Marauder Slayer\",\r\n    code: \"marauderslayer\",\r\n    desc: \"Deal double Skull damage vs. Marauders.\"\r\n  },\r\n  {\r\n    name: \"Master Builder\",\r\n    code: \"constructbond\",\r\n    desc: \"All constructs gain 10 Life.\"\r\n  },\r\n  {\r\n    name: \"Mech Bond\",\r\n    code: \"mechbond\",\r\n    desc: \"Allied Mechs gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Mech Shield\",\r\n    code: \"mechbond\",\r\n    desc: \"Allied Mechs gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Mech Slayer\",\r\n    code: \"mechslayer\",\r\n    desc: \"Deal double Skull damage vs. Mechs.\"\r\n  },\r\n  {\r\n    name: \"Mega-Aspect of Death\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"Steal 3 Life from the first enemy at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Mega-Divine Right\",\r\n    code: \"divineshield\",\r\n    desc: \"Gain 4 Armor when matching Yellow Gems.\"\r\n  },\r\n  {\r\n    name: \"Mega-Immense\",\r\n    code: \"immense\",\r\n    desc: \"Gain 12 Life on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Mega-Thorns\",\r\n    code: \"thorns\",\r\n    desc: \"Reflect 100% of Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Mega-Unbreakable\",\r\n    code: \"immense\",\r\n    desc: \"Reduce damage from Skulls by 100%.\"\r\n  },\r\n  {\r\n    name: \"Mega-Winter Veil\",\r\n    code: \"winterveil\",\r\n    desc: \"Freeze all enemies on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Mentor\",\r\n    code: \"magiclink\",\r\n    desc: \"All allies gain 1 Magic.\"\r\n  },\r\n  {\r\n    name: \"Merchant\",\r\n    code: \"merchant\",\r\n    desc: \"Gain 25% bonus Gold from battle.\"\r\n  },\r\n  {\r\n    name: \"Merfolk Bond\",\r\n    code: \"merfolkbond\",\r\n    desc: \"Allied Merfolk gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Merfolk Shield\",\r\n    code: \"merfolkbond\",\r\n    desc: \"Allied Merfolk gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Merfolk Slayer\",\r\n    code: \"merfolkslayer\",\r\n    desc: \"Deal double Skull damage vs. Merfolk.\"\r\n  },\r\n  {\r\n    name: \"Miasma\",\r\n    code: \"miasma\",\r\n    desc: \"Poison a random enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Molten\",\r\n    code: \"molten\",\r\n    desc: \"Burn a random enemy when matching Red Gems.\"\r\n  },\r\n  {\r\n    name: \"Moneybags\",\r\n    code: \"merchant\",\r\n    desc: \"Gain 100% bonus Gold from battle.\"\r\n  },\r\n  {\r\n    name: \"Monkey Magic\",\r\n    code: \"spiritfire\",\r\n    desc: \"Steal 1 Magic from the first enemy at the start of my turn.\"\r\n  },\r\n  {\r\n    name: \"Monster Bond\",\r\n    code: \"monsterbond\",\r\n    desc: \"Allied Monsters gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Monster Shield\",\r\n    code: \"monsterbond\",\r\n    desc: \"Allied Monsters gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Monster Slayer\",\r\n    code: \"monsterslayer\",\r\n    desc: \"Deal double Skull damage vs. Monsters.\"\r\n  },\r\n  {\r\n    name: \"Monstrous Kin\",\r\n    code: \"manyheads\",\r\n    desc: \"Give all Monster Allies 2 to all Skill Points on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Mutant Regeneration\",\r\n    code: \"regeneration\",\r\n    desc: \"Recover 6 Life at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Mystic Bond\",\r\n    code: \"mysticbond\",\r\n    desc: \"Allied Mystics gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Mystic Channel\",\r\n    code: \"magicspirit\",\r\n    desc: \"All Mystics gain 2 Magic and Life when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Mystic Shield\",\r\n    code: \"mysticbond\",\r\n    desc: \"Allied Mystics gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Mystic Slayer\",\r\n    code: \"mysticslayer\",\r\n    desc: \"Deal double Skull damage vs. Mystics.\"\r\n  },\r\n  {\r\n    name: \"Naga Bond\",\r\n    code: \"nagabond\",\r\n    desc: \"Allied Naga gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Naga Shield\",\r\n    code: \"nagabond\",\r\n    desc: \"Allied Naga gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Naga Slayer\",\r\n    code: \"nagaslayer\",\r\n    desc: \"Deal double Skull damage vs. Naga.\"\r\n  },\r\n  {\r\n    name: \"Nasty Teeth\",\r\n    code: \"nastyteeth\",\r\n    desc: \"Deal 5x Skull damage vs. Knights.\"\r\n  },\r\n  {\r\n    name: \"Nature Aura\",\r\n    code: \"thorns\",\r\n    desc: \"All Green Allies gain 5 to all Stats.\"\r\n  },\r\n  {\r\n    name: \"Nature Brand\",\r\n    code: \"naturebrand\",\r\n    desc: \"Gain 1 Attack for each Green ally.\"\r\n  },\r\n  {\r\n    name: \"Nature Heart\",\r\n    code: \"natureheart\",\r\n    desc: \"Gain 1 Life for each Green ally.\"\r\n  },\r\n  {\r\n    name: \"Nature Link\",\r\n    code: \"naturelink\",\r\n    desc: \"Gain bonus Green Mana from Green Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Nature Pact\",\r\n    code: \"elfbond\",\r\n    desc: \"25% chance to summon a Dryad on death.\"\r\n  },\r\n  {\r\n    name: \"Nature Spirit\",\r\n    code: \"naturespirit\",\r\n    desc: \"Gain 1 Magic for each Green ally.\"\r\n  },\r\n  {\r\n    name: \"Nature's Death\",\r\n    code: \"naturebrand\",\r\n    desc: \"Summon a Leafstorm when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Nature’s Aura\",\r\n    code: \"naturelink\",\r\n    desc: \"Create a leafstorm at the start of a battle.\"\r\n  },\r\n  {\r\n    name: \"Nature’s Will\",\r\n    code: \"naturelink\",\r\n    desc: \"Gain bonus Green Mana from Green Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Necro Master\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"Gain 150% bonus Souls from battle.\"\r\n  },\r\n  {\r\n    name: \"Necromancy\",\r\n    code: \"necromancy\",\r\n    desc: \"Gain 50% bonus Souls from battle.\"\r\n  },\r\n  { name: \"Nimble\", code: \"flying\", description: \"Immunity to Entangle.\" },\r\n  {\r\n    name: \"Northern Clans\",\r\n    code: \"frozensoul\",\r\n    desc: \"All Urska start the battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Ocean’s Trident\",\r\n    code: \"avenger\",\r\n    desc: \"Gain 3 Magic if using a Polearm.\"\r\n  },\r\n  {\r\n    name: \"Omen of Dark\",\r\n    code: \"jinx\",\r\n    desc: \"Explode a Purple Gem at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Omen of Death\",\r\n    code: \"undeadslayer\",\r\n    desc: \"Explode a Skull at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Omen of Fire\",\r\n    code: \"firelink\",\r\n    desc: \"Explode a Red Gem at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Omen of Ice\",\r\n    code: \"chilltouch\",\r\n    desc: \"Explode a Blue Gem at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Omen of Light\",\r\n    code: \"elementalbond\",\r\n    desc: \"Explode a Yellow Gem at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Omen of Nature\",\r\n    code: \"naturespirit\",\r\n    desc: \"Explode a Green Gem at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Omen of Stone\",\r\n    code: \"stonebrand\",\r\n    desc: \"Explode a Brown Gem at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Orc Armor\",\r\n    code: \"armored\",\r\n    desc: \"Gain 5 Armor when I take damage.\"\r\n  },\r\n  {\r\n    name: \"Orc Bond\",\r\n    code: \"orcbond\",\r\n    desc: \"Allied Orcs gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Orc Cunning\",\r\n    code: \"magiclink\",\r\n    desc: \"Gain 2 Magic when I take damage.\"\r\n  },\r\n  {\r\n    name: \"Orc Fury\",\r\n    code: \"marauderslayer\",\r\n    desc: \"Gain 3 Attack when I take damage.\"\r\n  },\r\n  {\r\n    name: \"Orc Might\",\r\n    code: \"goblinbond\",\r\n    desc: \"Gain 8 to a random skill when I take damage.\"\r\n  },\r\n  {\r\n    name: \"Orc Shield\",\r\n    code: \"orcbond\",\r\n    desc: \"Allied Orcs gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Orc Slayer\",\r\n    code: \"orcslayer\",\r\n    desc: \"Deal double Skull damage vs. Orc.\"\r\n  },\r\n  {\r\n    name: \"Orclord\",\r\n    code: \"orclord\",\r\n    desc: \"All Orcs start battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Overclock\",\r\n    code: \"clockwork\",\r\n    desc: \"Allied Mechs gain 5 Attack and Armor.\"\r\n  },\r\n  {\r\n    name: \"Pack Master\",\r\n    code: \"wildfolkslayer\",\r\n    desc: \"25% chance to summon a Dire Wolf on death.\"\r\n  },\r\n  {\r\n    name: \"Penumbra\",\r\n    code: \"darkfall\",\r\n    desc: \"Create a Darkstorm at the start of every turn.\"\r\n  },\r\n  {\r\n    name: \"Perfect Aim\",\r\n    code: \"trueshot\",\r\n    desc: \"Gain 2 Magic if using a Bow.\"\r\n  },\r\n  {\r\n    name: \"Pickpocket\",\r\n    code: \"merchant\",\r\n    desc: \"Gain 10 Gold when I take damage.\"\r\n  },\r\n  {\r\n    name: \"Pillage and Plunder\",\r\n    code: \"graniteskin\",\r\n    desc: \"Gain 20 bonus Gold on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Plague Touch\",\r\n    code: \"plaguetouch\",\r\n    desc: \"Inflict Disease when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Plaguebearer\",\r\n    code: \"virulence\",\r\n    desc: \"Disease a random enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Poison Gaze\",\r\n    code: \"aspectofplague\",\r\n    desc: \"Poison all enemies on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Poison Spores\",\r\n    code: \"jinx\",\r\n    desc: \"Inflict Poison when I take Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Poison Tide\",\r\n    code: \"waterlink\",\r\n    desc: \"Steal 4 Life from the first enemy when matching Green Gems.\"\r\n  },\r\n  {\r\n    name: \"Portent\",\r\n    code: \"divineaura\",\r\n    desc: \"All Centaurs gain 2 Magic when an enemy casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Possession\",\r\n    code: \"spiritfire\",\r\n    desc: \"25% chance to resurrect after death.\"\r\n  },\r\n  {\r\n    name: \"Potion of Armor\",\r\n    code: \"immune\",\r\n    desc: \"Each Ally reduces damage from Skulls by 25%.\"\r\n  },\r\n  {\r\n    name: \"Potion of Blessing\",\r\n    code: \"immune\",\r\n    desc: \"Bless each Ally at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Potion of Enchantment\",\r\n    code: \"immune\",\r\n    desc: \"Enchant each Ally at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Potion of Explosion\",\r\n    code: \"immune\",\r\n    desc: \"Each Ally explodes 1 Gem at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Potion of Rejuvenation\",\r\n    code: \"immune\",\r\n    desc: \"Each Ally heals 3 Life at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Potion of Shielding\",\r\n    code: \"immune\",\r\n    desc: \"Barrier each Ally at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Precision\",\r\n    code: \"humanslayer\",\r\n    desc: \"Gain 2 Magic if using a Missile.\"\r\n  },\r\n  {\r\n    name: \"Pride Prowess\",\r\n    code: \"lionstrength\",\r\n    desc: \"All ally Raksha gain 1 Attack and Magic at the start of every turn.\"\r\n  },\r\n  {\r\n    name: \"Protector\",\r\n    code: \"stoneskin\",\r\n    desc: \"Gain 3 Magic if using a Shield.\"\r\n  },\r\n  {\r\n    name: \"Provocation\",\r\n    code: \"nastyteeth\",\r\n    desc: \"Enrage a random ally on 4 or 5 matches.\"\r\n  },\r\n  {\r\n    name: \"Purification\",\r\n    code: \"blessed\",\r\n    desc: \"Cleanse myself on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Pyromania\",\r\n    code: \"pyromania\",\r\n    desc: \"Deal double Skull damage vs. Burning enemies.\"\r\n  },\r\n  {\r\n    name: \"Queen's Grace\",\r\n    code: \"queensgrace\",\r\n    desc: \"All Daemons gain 2 Attack and Life at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Quick Study\",\r\n    code: \"grudge\",\r\n    desc: \"Gain 10% bonus XP from battle.\"\r\n  },\r\n  {\r\n    name: \"Radiant Aura\",\r\n    code: \"divineshield\",\r\n    desc: \"All Divine start battle with 40% Mana.\"\r\n  },\r\n  {\r\n    name: \"Raging Bull\",\r\n    code: \"goblord\",\r\n    desc: \"Gain 2 Attack, Armor and Life when matching Red Gems.\"\r\n  },\r\n  {\r\n    name: \"Rainbow Link\",\r\n    code: \"spiritfire\",\r\n    desc: \"Gain bonus Mana from all Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Raksha Bond\",\r\n    code: \"rakshabond\",\r\n    desc: \"Allied Raksha gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Raksha Shield\",\r\n    code: \"rakshabond\",\r\n    desc: \"Allied Raksha gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Raksha Slayer\",\r\n    code: \"rakshaslayer\",\r\n    desc: \"Deal double Skull damage vs. Raksha.\"\r\n  },\r\n  {\r\n    name: \"Rancor\",\r\n    code: \"nastyteeth\",\r\n    desc: \"Gain 3 Attack when an enemy matches Skulls.\"\r\n  },\r\n  {\r\n    name: \"Razor Armor\",\r\n    code: \"constructbond\",\r\n    desc: \"Add 20% of Armor to Skull Damage.\"\r\n  },\r\n  {\r\n    name: \"Razor Teeth\",\r\n    code: \"nagaslayer\",\r\n    desc: \"Inflict Bleed when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Reaper\",\r\n    code: \"undeadslayer\",\r\n    desc: \"Gain 2 Magic if using a Scythe.\"\r\n  },\r\n  {\r\n    name: \"Rebirth\",\r\n    code: \"immortal\",\r\n    desc: \"50% chance to become a Baby Dragon with full mana on death.\"\r\n  },\r\n  {\r\n    name: \"Regeneration\",\r\n    code: \"regeneration\",\r\n    desc: \"Recover 1 Life at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Reinforced\",\r\n    code: \"reinforced\",\r\n    desc: \"Recover 1 Armor at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"Repair\",\r\n    code: \"reinforced\",\r\n    desc: \"Gain 1 Armor on 4 or 5 Gem matches.\"\r\n  },\r\n  { name: \"Resilience\", code: \"magicbrand\", description: \"Gain 8 Life.\" },\r\n  {\r\n    name: \"Resplendence\",\r\n    code: \"stoneheart\",\r\n    desc: \"Gain 2 Magic if using Jewellery.\"\r\n  },\r\n  {\r\n    name: \"Revenge\",\r\n    code: \"frenzy\",\r\n    desc: \"Inflict Hunter's Mark when I take Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Revered\",\r\n    code: \"blessed\",\r\n    desc: \"All allies gain 2 random Skill points.\"\r\n  },\r\n  {\r\n    name: \"Rising Shadows\",\r\n    code: \"darkfall\",\r\n    desc: \"7% chance to assassinate the last enemy when another enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Rock Solid\",\r\n    code: \"stonelink\",\r\n    desc: \"Gain a Barrier when matching Brown Gems.\"\r\n  },\r\n  {\r\n    name: \"Rocky Death\",\r\n    code: \"stonebrand\",\r\n    desc: \"Summon a Duststorm when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Rogue Bond\",\r\n    code: \"roguebond\",\r\n    desc: \"Allied Rogues gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Rogue Shield\",\r\n    code: \"roguebond\",\r\n    desc: \"Allied Rogues gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Rogue Slayer\",\r\n    code: \"rogueslayer\",\r\n    desc: \"Deal double Skull damage vs. Rogues.\"\r\n  },\r\n  {\r\n    name: \"Root Trap\",\r\n    code: \"snare\",\r\n    desc: \"Entangle the first enemy at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Royal Armory\",\r\n    code: \"avenger\",\r\n    desc: \"All ally Knights gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Sacrifice\",\r\n    code: \"sacrifice\",\r\n    desc: \"Gain 3 to all Skills when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Savior\",\r\n    code: \"impervious\",\r\n    desc: \"When an ally dies, Barrier another random ally.\"\r\n  },\r\n  {\r\n    name: \"Second Helping\",\r\n    code: \"queensgrace\",\r\n    desc: \"All allied Goblins gain 5 Life on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Seedling\",\r\n    code: \"seedling\",\r\n    desc: \"Gain 8 Magic on Green gem matches.\"\r\n  },\r\n  {\r\n    name: \"Serendipity\",\r\n    code: \"feyslayer\",\r\n    desc: \"Give a random ally a random status effect.\"\r\n  },\r\n  {\r\n    name: \"Serenity\",\r\n    code: \"blessed\",\r\n    desc: \"Inflict Silence when enemies deal Skull damage to me.\"\r\n  },\r\n  {\r\n    name: \"Serpent's Fang\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"Deal 3 damage to a random enemy when an ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Shadow Scales\",\r\n    code: \"insulated\",\r\n    desc: \"All Naga Allies gain 1 Armor every turn.\"\r\n  },\r\n  {\r\n    name: \"Shadows’ Call\",\r\n    code: \"stealthy\",\r\n    desc: \"20% chance to summon a Sister of Shadows when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Shatter\",\r\n    code: \"shatter\",\r\n    desc: \"Deal double Skull damage vs. Frozen enemies.\"\r\n  },\r\n  {\r\n    name: \"Shining Staff\",\r\n    code: \"arcane\",\r\n    desc: \"Gain 2 Magic if using a Staff.\"\r\n  },\r\n  {\r\n    name: \"Shock\",\r\n    code: \"airbrand\",\r\n    desc: \"Deal 2 damage to a random enemy on 4 or 5 matches.\"\r\n  },\r\n  {\r\n    name: \"Shrapnel\",\r\n    code: \"molten\",\r\n    desc: \"Deal 1 damage to all enemies on 4 or 5 matches.\"\r\n  },\r\n  {\r\n    name: \"Siege\",\r\n    code: \"siege\",\r\n    desc: \"Allies gain 2 Attack when invading in PVP.\"\r\n  },\r\n  {\r\n    name: \"Siegebreaker\",\r\n    code: \"siege\",\r\n    desc: \"Deal 3x - 5x Skull damage vs. Towers, based on my ascension.\"\r\n  },\r\n  {\r\n    name: \"Silence!\",\r\n    code: \"silence\",\r\n    desc: \"Silence enemies when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Siphon\",\r\n    code: \"siphon\",\r\n    desc: \"Steal enemy mana when dealing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Skull Death\",\r\n    code: \"undeadslayer\",\r\n    desc: \"Summon a Bonestorm when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Sky Ancestry\",\r\n    code: \"blessed\",\r\n    desc: \"Immune to Mana Drain, Silence, Faerie Fire, and Mana Burn.\"\r\n  },\r\n  { name: \"Slippery\", code: \"slippery\", description: \"Immunity to Web.\" },\r\n  {\r\n    name: \"Snap Freeze\",\r\n    code: \"chill\",\r\n    desc: \"Freeze a random enemy at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Snare\",\r\n    code: \"snare\",\r\n    desc: \"Inflict Web when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Sneak Attack\",\r\n    code: \"sacrifice\",\r\n    desc: \"Deal 7 damage to the last enemy on 4 or 5 matches.\"\r\n  },\r\n  {\r\n    name: \"Snowstorm\",\r\n    code: \"frozensoul\",\r\n    desc: \"Create an Icestorm at the start of every turn.\"\r\n  },\r\n  {\r\n    name: \"Soaring\",\r\n    code: \"ward\",\r\n    desc: \"Allied Stryx gain 5 Life and Attack.\"\r\n  },\r\n  {\r\n    name: \"Song of Bones\",\r\n    code: \"undeadbond\",\r\n    desc: \"Summon a Bonestorm at the start of Battle.\"\r\n  },\r\n  {\r\n    name: \"Song of Darkness\",\r\n    code: \"inscribed\",\r\n    desc: \"Summon a Darkstorm at the start of Battle.\"\r\n  },\r\n  {\r\n    name: \"Song of Doom\",\r\n    code: \"daemonslayer\",\r\n    desc: \"Summon a Doomstorm at the start of Battle.\"\r\n  },\r\n  {\r\n    name: \"Song of Fire\",\r\n    code: \"firebrand\",\r\n    desc: \"Summon a Firestorm at the start of Battle.\"\r\n  },\r\n  {\r\n    name: \"Song of Ice\",\r\n    code: \"magicheart\",\r\n    desc: \"Summon an Icestorm at the start of Battle.\"\r\n  },\r\n  {\r\n    name: \"Song of Light\",\r\n    code: \"blessed\",\r\n    desc: \"Summon a Lightstorm at the start of Battle.\"\r\n  },\r\n  {\r\n    name: \"Song of Nature\",\r\n    code: \"naturelink\",\r\n    desc: \"Summon a Leafstorm at the start of Battle.\"\r\n  },\r\n  {\r\n    name: \"Song of Stone\",\r\n    code: \"stonelink\",\r\n    desc: \"Summon a Duststorm at the start of Battle.\"\r\n  },\r\n  {\r\n    name: \"Soul Caller\",\r\n    code: \"airheart\",\r\n    desc: \"Gain 1 Soul every turn.\"\r\n  },\r\n  {\r\n    name: \"Soul Legion\",\r\n    code: \"soullegion\",\r\n    desc: \"50% chance to Summon a Wight when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Soul Ritual\",\r\n    code: \"soullegion\",\r\n    desc: \"Gain 5 Magic when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Sour Candy\",\r\n    code: \"aspectofplague\",\r\n    desc: \"Faerie Fire a random enemy when matching Green Gems.\"\r\n  },\r\n  {\r\n    name: \"Spark\",\r\n    code: \"mysticbond\",\r\n    desc: \"Gain Enchant when matching Red Gems.\"\r\n  },\r\n  {\r\n    name: \"Spawn of Hell\",\r\n    code: \"daemonicpact\",\r\n    desc: \"50% chance to summon a Hellspawn when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Spawn\",\r\n    code: \"dragonslayer\",\r\n    desc: \"25% chance to summon a Baby Dragon on death.\"\r\n  },\r\n  {\r\n    name: \"Spell Armor\",\r\n    code: \"reinforced\",\r\n    desc: \"Reduce damage from Spells by 25%.\"\r\n  },\r\n  {\r\n    name: \"Spell Block\",\r\n    code: \"inscribed\",\r\n    desc: \"Reduce damage from Spells by 50%.\"\r\n  },\r\n  {\r\n    name: \"Spiked Armor\",\r\n    code: \"spikearmor\",\r\n    desc: \"Add 25% of Armor to Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Spiky\",\r\n    code: \"spikearmor\",\r\n    desc: \"Deal 3 damage to all enemies when I match skulls.\"\r\n  },\r\n  {\r\n    name: \"Spiny\",\r\n    code: \"airbrand\",\r\n    desc: \"Deal 1 damage to all enemies when I match skulls.\"\r\n  },\r\n  {\r\n    name: \"Spore Cloud\",\r\n    code: \"miasma\",\r\n    desc: \"Disease a random Enemy when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"Stalker\",\r\n    code: \"stalker\",\r\n    desc: \"Deal double Skull damage vs. Webbed enemies.\"\r\n  },\r\n  {\r\n    name: \"Stealthy\",\r\n    code: \"stealthy\",\r\n    desc: \"Cannot be targeted by spells (unless there are no other targets).\"\r\n  },\r\n  {\r\n    name: \"Stone Aura\",\r\n    code: \"graniteskin\",\r\n    desc: \"All Brown Allies gain 5 to all Stats.\"\r\n  },\r\n  {\r\n    name: \"Stone Brand\",\r\n    code: \"stonebrand\",\r\n    desc: \"Gain 1 Attack for each Brown ally.\"\r\n  },\r\n  {\r\n    name: \"Stone Circle\",\r\n    code: \"stonespirit\",\r\n    desc: \"All Brown Allies gain 3 Armor.\"\r\n  },\r\n  {\r\n    name: \"Stone Heart\",\r\n    code: \"stoneheart\",\r\n    desc: \"Gain 1 Life for each Brown ally.\"\r\n  },\r\n  {\r\n    name: \"Stone Link\",\r\n    code: \"stonelink\",\r\n    desc: \"Gain bonus Brown Mana from Brown Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Stone Loyalty\",\r\n    code: \"divineshield\",\r\n    desc: \"All Dwarves start battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Stone Mastery\",\r\n    code: \"stonebrand\",\r\n    desc: \"Gain bonus Brown Mana from Brown Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Stone Spirit\",\r\n    code: \"stonespirit\",\r\n    desc: \"Gain 1 Magic for each Brown ally.\"\r\n  },\r\n  {\r\n    name: \"Stone Wall\",\r\n    code: \"stonespirit\",\r\n    desc: \"All Brown allies gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Stoneskin\",\r\n    code: \"stoneskin\",\r\n    desc: \"Reduce damage from Skulls by 50%.\"\r\n  },\r\n  {\r\n    name: \"Storm Aura\",\r\n    code: \"airheart\",\r\n    desc: \"Create a duststorm at the start of a battle.\"\r\n  },\r\n  {\r\n    name: \"Storm Flock\",\r\n    code: \"fierycloak\",\r\n    desc: \"35% chance to summon a Harpy Mage when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"Storm Shield\",\r\n    code: \"divineshield\",\r\n    desc: \"Give a random Ally a Barrier on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Storm Soul\",\r\n    code: \"icycloak\",\r\n    desc: \"Conjure a random Storm when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"Stormy Hatred\",\r\n    code: \"airbrand\",\r\n    desc: \"Deal double Skull damage vs. Yellow Enemies.\"\r\n  },\r\n  {\r\n    name: \"Stryx Bond\",\r\n    code: \"stryxbond\",\r\n    desc: \"Allied Stryx gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Stryx Commander\",\r\n    code: \"flying\",\r\n    desc: \"All Stryx allies gain 1 Attack every turn.\"\r\n  },\r\n  {\r\n    name: \"Stryx Shield\",\r\n    code: \"stryxbond\",\r\n    desc: \"Allied Stryx gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Stryx Slayer\",\r\n    code: \"stryxslayer\",\r\n    desc: \"Deal double Skull damage vs. Stryx.\"\r\n  },\r\n  { name: \"Sturdy\", code: \"sturdy\", description: \"Immune to Poison.\" },\r\n  {\r\n    name: \"Succumb\",\r\n    code: \"aspectofdeath\",\r\n    desc: \"Enemies lose 4 from a random Skill Point when an Ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Sudden Doom\",\r\n    code: \"elementalslayer\",\r\n    desc: \"Create a Doomstorm at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Summer Veil\",\r\n    code: \"fierycloak\",\r\n    desc: \"Faerie Fire a random enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Sun Fire\",\r\n    code: \"sunshine\",\r\n    desc: \"Faerie Fire a random enemy when matching Red Gems.\"\r\n  },\r\n  {\r\n    name: \"Sun Flare\",\r\n    code: \"fierycloak\",\r\n    desc: \"50% chance to Burn a random enemy at start of my turn.\"\r\n  },\r\n  {\r\n    name: \"Sun's Glory\",\r\n    code: \"sunshine\",\r\n    desc: \"Gain 2 Magic on Red Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Sunshine\",\r\n    code: \"sunshine\",\r\n    desc: \"Gain 8 Magic on Yellow gem matches.\"\r\n  },\r\n  {\r\n    name: \"Suppression\",\r\n    code: \"suppression\",\r\n    desc: \"Enemies lose 1 Skill point on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Swift Curse\",\r\n    code: \"cursed\",\r\n    desc: \"Death Mark a random enemy at the start of battle.\"\r\n  },\r\n  { name: \"Swift\", code: \"fast\", description: \"Start battles with 75% Mana.\" },\r\n  {\r\n    name: \"Tactician\",\r\n    code: \"magicspirit\",\r\n    desc: \"Gain 3 Magic at the start of a battle.\"\r\n  },\r\n  {\r\n    name: \"Tangle\",\r\n    code: \"naturebrand\",\r\n    desc: \"Inflict Entangle when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Tauros Bond\",\r\n    code: \"taurosbond\",\r\n    desc: \"Allied Tauros gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Tauros Shield\",\r\n    code: \"taurosbond\",\r\n    desc: \"Allied Tauros gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Tauros Slayer\",\r\n    code: \"taurosslayer\",\r\n    desc: \"Deal double Skull damage vs. Tauros.\"\r\n  },\r\n  {\r\n    name: \"Technomancy\",\r\n    code: \"technomancy\",\r\n    desc: \"Decrease a random Enemy's Magic by 2 on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Temptation\",\r\n    code: \"doom\",\r\n    desc: \"Charm a random enemy when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"Tentacles\",\r\n    code: \"thorns\",\r\n    desc: \"Deal 3 damage to all enemies on 4 or 5 matches.\"\r\n  },\r\n  { name: \"Thick Head\", code: \"thickhead\", description: \"Immunity to Stun.\" },\r\n  {\r\n    name: \"Thick Hide\",\r\n    code: \"beastbond\",\r\n    desc: \"Reduce damage from Skulls by 20%.\"\r\n  },\r\n  {\r\n    name: \"Thieves’ Guild\",\r\n    code: \"mechbond\",\r\n    desc: \"All Rogues gain 1 Magic on 4 or 5 of a kind.\"\r\n  },\r\n  {\r\n    name: \"Thorns\",\r\n    code: \"thorns\",\r\n    desc: \"Reflect 50% of Skull damage\"\r\n  },\r\n  {\r\n    name: \"Thunder Fist\",\r\n    code: \"knockout\",\r\n    desc: \"All Yellow Allies gain 1 Magic.\"\r\n  },\r\n  {\r\n    name: \"Tidal King\",\r\n    code: \"waterspirit\",\r\n    desc: \"Submerge myself at the start of every turn.\"\r\n  },\r\n  {\r\n    name: \"Titanic Surge\",\r\n    code: \"big\",\r\n    desc: \"All Giant Allies gain 1 Life and Magic.\"\r\n  },\r\n  {\r\n    name: \"Tough Scales\",\r\n    code: \"dragonbond\",\r\n    desc: \"Reduce damage from Skulls by 30%.\"\r\n  },\r\n  {\r\n    name: \"Toxic Hatred\",\r\n    code: \"immune\",\r\n    desc: \"Deal double Skull damage vs. Green Enemies.\"\r\n  },\r\n  {\r\n    name: \"Toxic\",\r\n    code: \"venomous\",\r\n    desc: \"Deal double Skull damage vs. Poisoned Enemies.\"\r\n  },\r\n  {\r\n    name: \"Transcend\",\r\n    code: \"inscribed\",\r\n    desc: \"Exchange 2 Life for 2 Magic on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Tree of Knowledge\",\r\n    code: \"natureheart\",\r\n    desc: \"Gain Enchant when matching Green Gems.\"\r\n  },\r\n  {\r\n    name: \"Troll Regeneration\",\r\n    code: \"regeneration\",\r\n    desc: \"Recover 3 Life at the start of each turn.\"\r\n  },\r\n  {\r\n    name: \"True Shot\",\r\n    code: \"trueshot\",\r\n    desc: \"75% chance to ignore Armor with Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Tsunami\",\r\n    code: \"waterspirit\",\r\n    desc: \"Submerge all Allies when matching 4 or more Gems.\"\r\n  },\r\n  {\r\n    name: \"Unbreakable\",\r\n    code: \"immense\",\r\n    desc: \"Reduce damage from Skulls by 80%.\"\r\n  },\r\n  {\r\n    name: \"Undead Bond\",\r\n    code: \"undeadbond\",\r\n    desc: \"Allied Undead gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Undead Shield\",\r\n    code: \"undeadbond\",\r\n    desc: \"Allied Undead gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Undead Slayer\",\r\n    code: \"undeadslayer\",\r\n    desc: \"Deal double Skull damage vs. Undeads. \"\r\n  },\r\n  {\r\n    name: \"Undying\",\r\n    code: \"undeadslayer\",\r\n    desc: \"Immune to Poison, Disease, and Death Mark.\"\r\n  },\r\n  {\r\n    name: \"Unholy Blessing\",\r\n    code: \"undeadbond\",\r\n    desc: \"All Undead gain 2 Armor and Magic when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"Unstable Possession\",\r\n    code: \"ensoul\",\r\n    desc: \"Explode 2 random Gems on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Up in Flames\",\r\n    code: \"firebrand\",\r\n    desc: \"Burn a random enemy when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"Urska Bond\",\r\n    code: \"beastbond\",\r\n    desc: \"Allied Urska gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Urska Major\",\r\n    code: \"beastslayer\",\r\n    desc: \"All Urska Allies gain 1 Attack every turn.\"\r\n  },\r\n  {\r\n    name: \"Urska Shield\",\r\n    code: \"beastslayer\",\r\n    desc: \"Allied Urska gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Urska Slayer\",\r\n    code: \"beastslayer\",\r\n    desc: \"Deal double Skull damage vs. Urska.\"\r\n  },\r\n  {\r\n    name: \"Valuable\",\r\n    code: \"stoneheart\",\r\n    desc: \"Gain 25 Gold when I die.\"\r\n  },\r\n  {\r\n    name: \"Vanguard\",\r\n    code: \"insulated\",\r\n    desc: \"Gain Barrier at the start of battle.\"\r\n  },\r\n  {\r\n    name: \"Vengeance\",\r\n    code: \"daemonslayer\",\r\n    desc: \"Gain 3 Attack when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Venomous\",\r\n    code: \"venomous\",\r\n    desc: \"Poison enemies when doing Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Victory Lap\",\r\n    code: \"gardswrath\",\r\n    desc: \"Gain 8 Mana when an Enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Virtue of Courage\",\r\n    code: \"lionstrength\",\r\n    desc: \"All allies gain 2 Attack and Life on Skull gem matches.\"\r\n  },\r\n  {\r\n    name: \"Virtue of Honor\",\r\n    code: \"divineshield\",\r\n    desc: \"Gain 10 to all Skills when playing a PVP battle.\"\r\n  },\r\n  {\r\n    name: \"Virtue of Humility\",\r\n    code: \"compassion\",\r\n    desc: \"All allies gain 2 Armor and Magic when I take damage to Life.\"\r\n  },\r\n  {\r\n    name: \"Virtue of Justice\",\r\n    code: \"hacknslash\",\r\n    desc: \"All allies gain 3 Attack and Armor  when an enemy dies.\"\r\n  },\r\n  {\r\n    name: \"Virtue of Loyalty\",\r\n    code: \"fullplate\",\r\n    desc: \"All allies gain 3 Armor and Life when an ally casts a spell.\"\r\n  },\r\n  {\r\n    name: \"Virtue of Sacrifice\",\r\n    code: \"ensoul\",\r\n    desc: \"All allies gain 2 Attack and Magic when an ally dies.\"\r\n  },\r\n  {\r\n    name: \"Virulence\",\r\n    code: \"virulence\",\r\n    desc: \"Deal double Skull damage vs. Diseased enemies.\"\r\n  },\r\n  {\r\n    name: \"Voracious\",\r\n    code: \"hunger\",\r\n    desc: \"5% chance to Devour on Skull damage.\"\r\n  },\r\n  {\r\n    name: \"Wall of Vines\",\r\n    code: \"naturebrand\",\r\n    desc: \"All Green allies gain 5 Armor.\"\r\n  },\r\n  { name: \"Ward\", code: \"ward\", description: \"All allies gain 5 Armor.\" },\r\n  { name: \"Warded\", code: \"warded\", description: \"Immunity to Death Mark.\" },\r\n  {\r\n    name: \"Wargare Bond\",\r\n    code: \"wargarebond\",\r\n    desc: \"Allied Wargare gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Wargare Shield\",\r\n    code: \"wargarebond\",\r\n    desc: \"Allied Wargare gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Wargare Slayer\",\r\n    code: \"wargareslayer\",\r\n    desc: \"Deal double Skull damage vs. Wargare.\"\r\n  },\r\n  {\r\n    name: \"Water Brand\",\r\n    code: \"waterbrand\",\r\n    desc: \"Gain 1 Attack for each Blue ally.\"\r\n  },\r\n  {\r\n    name: \"Water Heart\",\r\n    code: \"waterheart\",\r\n    desc: \"Gain 1 Life for each Blue ally.\"\r\n  },\r\n  {\r\n    name: \"Water Link\",\r\n    code: \"waterlink\",\r\n    desc: \"Gain bonus Blue Mana from Blue Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Water Mastery\",\r\n    code: \"waterspirit\",\r\n    desc: \"Gain bonus Blue Mana from Blue Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Water Spirit\",\r\n    code: \"waterspirit\",\r\n    desc: \"Gain 1 Magic for each Blue ally.\"\r\n  },\r\n  {\r\n    name: \"Watery Binding\",\r\n    code: \"waterbrand\",\r\n    desc: \"All Blue Allies gain 4 Life.\"\r\n  },\r\n  {\r\n    name: \"Webweaver\",\r\n    code: \"cocoon\",\r\n    desc: \"Web a random enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Well-Read\",\r\n    code: \"empowered\",\r\n    desc: \"Gain 3 Magic if using a Tome.\"\r\n  },\r\n  {\r\n    name: \"Wild Frenzy\",\r\n    code: \"wildfolkbond\",\r\n    desc: \"All Wildfolk allies gain 2 Attack at the start of every turn.\"\r\n  },\r\n  {\r\n    name: \"Wild Growth\",\r\n    code: \"beastbond\",\r\n    desc: \"All Beast allies gain 2 Attack and Life on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Wild Mana\",\r\n    code: \"dragonvines\",\r\n    desc: \"All Wildfolk start battle with 50% Mana.\"\r\n  },\r\n  {\r\n    name: \"Wild Vines\",\r\n    code: \"thorns\",\r\n    desc: \"Entangle a random enemy when matching Green.\"\r\n  },\r\n  {\r\n    name: \"Wildfolk Bond\",\r\n    code: \"wildfolkbond\",\r\n    desc: \"Allied Wildfolk gain 2 Life.\"\r\n  },\r\n  {\r\n    name: \"Wildfolk Shield\",\r\n    code: \"wildfolkbond\",\r\n    desc: \"Allied Wildfolk gain 2 Armor.\"\r\n  },\r\n  {\r\n    name: \"Wildfolk Slayer\",\r\n    code: \"wildfolkslayer\",\r\n    desc: \"Deal double Skull damage vs. Wildfolk.\"\r\n  },\r\n  {\r\n    name: \"Wind Aura\",\r\n    code: \"winterveil\",\r\n    desc: \"All Yellow Allies gain 5 to all Stats.\"\r\n  },\r\n  { name: \"Wind Shield\", code: \"manashield\", description: \"Gain 8 Armor.\" },\r\n  {\r\n    name: \"Wind Speed\",\r\n    code: \"airheart\",\r\n    desc: \"All Yellow Allies start battle with 10% Mana.\"\r\n  },\r\n  {\r\n    name: \"Winter Veil\",\r\n    code: \"winterveil\",\r\n    desc: \"Freeze a random enemy on 4 or 5 Gem matches.\"\r\n  },\r\n  {\r\n    name: \"Wood Ancestry\",\r\n    code: \"natureheart\",\r\n    desc: \"Immune to Mana Drain, Silence, Faerie Fire, and Entangle.\"\r\n  },\r\n  {\r\n    name: \"Wrath of Anu\",\r\n    code: \"fierycloak\",\r\n    desc: \"50% chance to Stun a random enemy at the start of my turn.\"\r\n  },\r\n  {\r\n    name: \"Zorn's Fury\",\r\n    code: \"doom\",\r\n    desc: \"Gain 4 Mana when I take damage.\"\r\n  }\r\n];\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { memo, useCallback } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, MenuItem, Paper } from \"@material-ui/core\";\r\n\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport deburr from \"lodash/deburr\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\n\r\nimport { Image } from \"../../../Util\";\r\nimport { traits } from \"../../../Values\";\r\n\r\nconst getSuggestions = value => {\r\n  const inputValue = deburr(value.trim()).toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : traits.filter(suggestion => {\r\n        const keep =\r\n          count < 5 &&\r\n          suggestion.name.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n        if (keep) {\r\n          count += 1;\r\n        }\r\n\r\n        return keep;\r\n      });\r\n};\r\n\r\nconst getSuggestionValue = suggestion => {\r\n  return suggestion.name;\r\n};\r\n\r\nconst renderInputComponent = inputProps => {\r\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      variant=\"filled\"\r\n      InputProps={{\r\n        inputRef: node => {\r\n          ref(node);\r\n          inputRef(node);\r\n        },\r\n        classes: {\r\n          input: classes.input\r\n        }\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nconst renderSuggestion = (suggestion, { query, isHighlighted }) => {\r\n  const matches = match(suggestion.name, query);\r\n  const parts = parse(suggestion.name, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        <Image\r\n          source={`./assets/graphics/traiticons/${suggestion.code}.png`}\r\n          style={{\r\n            width: \"auto\",\r\n            height: \"24px\",\r\n            marginRight: \"4px\"\r\n          }}\r\n        />\r\n        {parts.map(part => (\r\n          <span\r\n            key={part.text}\r\n            style={{ fontWeight: part.highlight ? 500 : 400 }}\r\n          >\r\n            {part.text}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 250,\r\n    flexGrow: 1\r\n  },\r\n  container: {\r\n    position: \"relative\"\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  suggestion: {\r\n    display: \"block\"\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: \"none\"\r\n  },\r\n  divider: {\r\n    height: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst FormTraitAutosuggest = memo(({ index, handleTroopChange }) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useState(\"\");\r\n\r\n  const [stateSuggestions, setSuggestions] = React.useState([]);\r\n\r\n  const handleChange = useCallback(\r\n    (event, { newValue }) => {\r\n      setState(newValue);\r\n    },\r\n    [setState]\r\n  );\r\n\r\n  const handleSuggestionSelected = useCallback(\r\n    (event, { suggestion }) => {\r\n      // Upon selecting a trait, clear out the autocomplete field and fill in the trait fields.\r\n      setState(\"\");\r\n      handleTroopChange(`trait${index}code`, suggestion.code);\r\n      handleTroopChange(`trait${index}name`, suggestion.name);\r\n      handleTroopChange(`trait${index}desc`, suggestion.desc);\r\n    },\r\n    [handleTroopChange, index]\r\n  );\r\n\r\n  const handleSuggestionsFetchRequested = ({ value }) => {\r\n    setSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const handleSuggestionsClearRequested = () => {\r\n    setSuggestions([]);\r\n  };\r\n\r\n  return (\r\n    <Autosuggest\r\n      renderInputComponent={renderInputComponent}\r\n      suggestions={stateSuggestions}\r\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\r\n      onSuggestionsClearRequested={handleSuggestionsClearRequested}\r\n      onSuggestionSelected={handleSuggestionSelected}\r\n      getSuggestionValue={getSuggestionValue}\r\n      renderSuggestion={renderSuggestion}\r\n      inputProps={{\r\n        classes,\r\n        id: `react-autosuggest-trait${index}`,\r\n        label: \"Autofill Trait\",\r\n        placeholder: \"Start typing...\",\r\n        value: state,\r\n        onChange: handleChange\r\n      }}\r\n      theme={{\r\n        container: classes.container,\r\n        suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n        suggestionsList: classes.suggestionsList,\r\n        suggestion: classes.suggestion\r\n      }}\r\n      renderSuggestionsContainer={options => (\r\n        <Paper {...options.containerProps} square>\r\n          {options.children}\r\n        </Paper>\r\n      )}\r\n    />\r\n  );\r\n});\r\n\r\nexport default FormTraitAutosuggest;\r\n","import React, { memo } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport FormTraitAutosuggest from \"./FormTraitAutosuggest\";\r\n\r\nimport { Image, FormText, validateFieldLength, GridCard } from \"../../../Util\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    traitName: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: `calc(100% - 80px)`,\r\n        padding: `${theme.spacing(0.5)}px`\r\n      }\r\n    },\r\n    traitDesc: {\r\n      width: \"100%\"\r\n    },\r\n    traitIcon: {\r\n      width: \"48px\",\r\n      height: \"48px\",\r\n      marginRight: theme.spacing(0.5)\r\n    },\r\n    formElement: {\r\n      margin: `${theme.spacing(1.5)}px 0`\r\n    },\r\n    iconSelector: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    overflow: {\r\n      overflow: \"visible\"\r\n    }\r\n  };\r\n});\r\n\r\nconst FormTrait = memo(({ index, troop, handleTroopChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <GridCard\r\n      gridClassName={classes.formElement}\r\n      cardClassName={classes.overflow}\r\n      xs={12}\r\n      sm={12}\r\n      md={6}\r\n      lg={4}\r\n      xl={4}\r\n    >\r\n      <Typography variant=\"h4\">{`Trait ${index}`}</Typography>\r\n      <div className={classes.iconSelector}>\r\n        <Image\r\n          className={classes.traitIcon}\r\n          source={\r\n            troop[`trait${index}code`] !== null\r\n              ? `./assets/graphics/traiticons/${troop[`trait${index}code`]}.png`\r\n              : null\r\n          }\r\n        />\r\n        <FormText\r\n          id={`form-trait${index}name`}\r\n          fieldName={`trait${index}name`}\r\n          value={troop[`trait${index}name`]}\r\n          onChange={handleTroopChange}\r\n          label=\"Trait Name\"\r\n          className={classes.traitname}\r\n          onInput={validateFieldLength(20)}\r\n        />\r\n      </div>\r\n      <FormText\r\n        id={`form-trait${index}desc`}\r\n        fieldName={`trait${index}desc`}\r\n        value={troop[`trait${index}desc`]}\r\n        onChange={handleTroopChange}\r\n        label=\"Trait Description\"\r\n        multiline\r\n        className={classes.traitDesc}\r\n      />\r\n      <FormTraitAutosuggest\r\n        index={index}\r\n        handleTroopChange={handleTroopChange}\r\n      />\r\n    </GridCard>\r\n  );\r\n});\r\n\r\nexport default FormTrait;\r\n","import React, { memo } from \"react\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport FormTrait from \"./FormTrait\";\r\n\r\nconst FormTraits = memo(({ troop, handleTroopChange, className }) => {\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      lg={8}\r\n      container\r\n      item\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <FormTrait\r\n        index={1}\r\n        troop={troop}\r\n        handleTroopChange={handleTroopChange}\r\n      />\r\n      <FormTrait\r\n        index={2}\r\n        troop={troop}\r\n        handleTroopChange={handleTroopChange}\r\n      />\r\n      <FormTrait\r\n        index={3}\r\n        troop={troop}\r\n        handleTroopChange={handleTroopChange}\r\n      />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default FormTraits;\r\n","import React, { memo } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  MenuItem,\r\n  InputAdornment,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { colors, roles, rarities } from \"../../../Values\";\r\nimport FormUploader from \"./FormUploader\";\r\n\r\nimport {\r\n  Image,\r\n  FormText,\r\n  FormSelect,\r\n  validateFieldLength,\r\n  GridCard\r\n} from \"../../../Util\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    menuColor: {\r\n      width: 400\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: \"33%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"25%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"75%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"50%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    fieldIcon: {\r\n      width: \"auto\",\r\n      height: theme.spacing(3),\r\n      marginRight: theme.spacing(0.5)\r\n    },\r\n    formElement: {\r\n      margin: `${theme.spacing(1.5)}px 0`\r\n    },\r\n    iconSelector: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    fullField: {\r\n      width: \"100%\"\r\n    }\r\n  };\r\n});\r\n\r\nconst FormTroop = memo(({ troop, handleTroopChange, className }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      lg={8}\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      container\r\n      item\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Name</Typography>\r\n        <FormText\r\n          id=\"form-name\"\r\n          fieldName=\"name\"\r\n          value={troop.name}\r\n          onChange={handleTroopChange}\r\n          label=\"Name\"\r\n          className={classes.fullField}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Kingdom</Typography>\r\n        <FormText\r\n          id=\"form-kingdom\"\r\n          fieldName=\"kingdom\"\r\n          value={troop.kingdom}\r\n          onChange={handleTroopChange}\r\n          label=\"Kingdom\"\r\n          className={classes.fullField}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Rarity</Typography>\r\n        <FormSelect\r\n          id=\"form-rarity\"\r\n          fieldName=\"rarity\"\r\n          value={troop.rarity}\r\n          onChange={handleTroopChange}\r\n          label=\"Rarity\"\r\n          className={classes.fullField}\r\n        >\r\n          {Object.keys(rarities).map(option => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </FormSelect>\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={3}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Level</Typography>\r\n        <FormText\r\n          id=\"form-level\"\r\n          fieldName=\"level\"\r\n          value={troop.level}\r\n          onChange={handleTroopChange}\r\n          label=\"Level\"\r\n          type=\"number\"\r\n          className={classes.fullField}\r\n          onInput={validateFieldLength(5)}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={3}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Role</Typography>\r\n        <FormSelect\r\n          id=\"form-role\"\r\n          fieldName=\"role\"\r\n          value={troop.role}\r\n          onChange={handleTroopChange}\r\n          label=\"Role\"\r\n          className={classes.fullField}\r\n          inputProps={{ className: classes.iconSelector }}\r\n        >\r\n          {roles.map(option => (\r\n            <MenuItem key={option} value={option}>\r\n              <Image\r\n                source={`./assets/graphics/roles/${option}.png`}\r\n                className={classes.fieldIcon}\r\n              />\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </FormSelect>\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={6}\r\n        xl={5}\r\n      >\r\n        <Typography variant=\"h4\">Mana Cost</Typography>\r\n        <FormText\r\n          id=\"form-cost\"\r\n          fieldName=\"cost\"\r\n          value={troop.cost}\r\n          onChange={handleTroopChange}\r\n          label=\"Cost\"\r\n          type=\"number\"\r\n          className={classes.manaCost}\r\n          onInput={validateFieldLength(3)}\r\n        />\r\n        <FormSelect\r\n          id=\"form-colors\"\r\n          fieldName=\"colors\"\r\n          value={troop.colors}\r\n          onChange={handleTroopChange}\r\n          label=\"Colors\"\r\n          className={classes.manaColors}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menuColor\r\n            }\r\n          }}\r\n          inputProps={{ className: classes.iconSelector }}\r\n        >\r\n          {colors.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <Image\r\n                source={`./assets/graphics/colors/${option.value}.png`}\r\n                className={classes.fieldIcon}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </FormSelect>\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Types</Typography>\r\n        <FormText\r\n          id=\"form-type1\"\r\n          fieldName=\"type1\"\r\n          value={troop.type1}\r\n          onChange={handleTroopChange}\r\n          label=\"Type 1\"\r\n          className={classes.typeField}\r\n          onInput={validateFieldLength(10)}\r\n        />\r\n        <FormText\r\n          id=\"form-type2\"\r\n          fieldName=\"type2\"\r\n          value={troop.type2}\r\n          onChange={handleTroopChange}\r\n          label=\"Type 2\"\r\n          className={classes.typeField}\r\n          onInput={validateFieldLength(10)}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={6}\r\n        xl={5}\r\n      >\r\n        <Typography variant=\"h4\">Skills</Typography>\r\n        <FormText\r\n          id=\"form-attack\"\r\n          fieldName=\"attack\"\r\n          value={troop.attack}\r\n          onChange={handleTroopChange}\r\n          label=\"Attack\"\r\n          type=\"number\"\r\n          className={classes.skill}\r\n          onInput={validateFieldLength(3)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Image\r\n                  source=\"./assets/graphics/troop/attack.png\"\r\n                  className={classes.fieldIcon}\r\n                />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <FormText\r\n          id=\"form-armor\"\r\n          fieldName=\"armor\"\r\n          value={troop.armor}\r\n          onChange={handleTroopChange}\r\n          label=\"Armor\"\r\n          type=\"number\"\r\n          className={classes.skill}\r\n          onInput={validateFieldLength(3)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Image\r\n                  source=\"./assets/graphics/troop/armor.png\"\r\n                  className={classes.fieldIcon}\r\n                />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <FormText\r\n          id=\"form-life\"\r\n          fieldName=\"life\"\r\n          value={troop.life}\r\n          onChange={handleTroopChange}\r\n          label=\"Life\"\r\n          type=\"number\"\r\n          className={classes.skill}\r\n          onInput={validateFieldLength(3)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Image\r\n                  source=\"./assets/graphics/troop/life.png\"\r\n                  className={classes.fieldIcon}\r\n                />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </GridCard>\r\n      <FormUploader handleTroopChange={handleTroopChange} />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default FormTroop;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Layer, Group } from \"react-konva\";\r\nimport Konva from \"konva\";\r\nimport {\r\n  CardBase,\r\n  CardImage,\r\n  CardText,\r\n  CardTextRef,\r\n  CardMultiStyleText,\r\n  CardImageRotating\r\n} from \"./CardBase\";\r\n\r\nconst getImageURL = troop => {\r\n  if (troop.troopimage !== null) {\r\n    return URL.createObjectURL(troop.troopimage);\r\n  }\r\n  // Else, use the default.\r\n  return `./assets/graphics/troop/eruption.png`;\r\n};\r\n\r\n// Create a text element that scales to always be one line.\r\nconst CardSpellNameText = ({\r\n  text,\r\n  width,\r\n  x,\r\n  y,\r\n  horizontalAlign = \"center\",\r\n  fontWeight,\r\n  baseFontSize,\r\n  fontsLoaded\r\n}) => {\r\n  const textRef = useRef(null);\r\n\r\n  // Create a basic state that resets when the troop changes.\r\n  const [state, setState] = useState({ stable: false, fontSize: baseFontSize });\r\n  useEffect(() => {\r\n    setState({ stable: false, fontSize: baseFontSize });\r\n  }, [text, baseFontSize]);\r\n\r\n  // Modify the font size until it's right.\r\n  useEffect(() => {\r\n    if (!state.stable && textRef.current !== null) {\r\n      if (textRef.current.textArr.length > 1) {\r\n        setState(oldState => ({\r\n          ...oldState,\r\n          fontSize: oldState.fontSize - 2\r\n        }));\r\n      } else {\r\n        // Finalize the state.\r\n        setState(oldState => ({ ...oldState, stable: true }));\r\n      }\r\n    }\r\n  }, [state]);\r\n\r\n  // Display either the proper text or a loading icon.\r\n  const result = state.stable ? (\r\n    <CardTextRef\r\n      ref={textRef}\r\n      x={x}\r\n      y={y}\r\n      height={baseFontSize}\r\n      width={width}\r\n      horizontalAlign={horizontalAlign}\r\n      verticalAlign=\"middle\"\r\n      text={text}\r\n      fontWeight={fontWeight}\r\n      fontSize={state.fontSize}\r\n      fontsLoaded={fontsLoaded}\r\n    />\r\n  ) : (\r\n    <Group>\r\n      <CardTextRef\r\n        ref={textRef}\r\n        x={x}\r\n        y={0}\r\n        height={1000}\r\n        width={width}\r\n        horizontalAlign={horizontalAlign}\r\n        verticalAlign=\"middle\"\r\n        text={text}\r\n        opacity={0}\r\n        fontWeight={fontWeight}\r\n        fontSize={state.fontSize}\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n      <CardImage\r\n        src=\"./assets/graphics/troop/loading.png\"\r\n        x={195}\r\n        y={323}\r\n        width={100}\r\n        height={100}\r\n      />\r\n    </Group>\r\n  );\r\n\r\n  return result;\r\n};\r\n\r\n// BEWARE, ALL YE WHO ENTER HERE\r\n// This creates multiple text elements in order to create multi-styled text.\r\nconst CardSpellDescText = ({\r\n  troop,\r\n  yCenter,\r\n  cardWidth,\r\n  innerWidth,\r\n  height,\r\n  baseFontSize,\r\n  fontFamily = \"Open Sans\",\r\n  fontWeight = 600,\r\n  color = \"#000\",\r\n  magicFontWeight,\r\n  magicColor,\r\n  fontsLoaded\r\n}) => {\r\n  // A reference to the hidden text display used for math.\r\n  const baseDisplayRef = useRef(null);\r\n\r\n  // Create a basic state that resets when the troop changes.\r\n  const [state, setState] = useState({ stable: false, fontSize: baseFontSize });\r\n  useEffect(() => {\r\n    setState({ stable: false, fontSize: baseFontSize });\r\n  }, [troop, baseFontSize]);\r\n\r\n  // Modify the font size until it's right.\r\n  useEffect(() => {\r\n    if (!state.stable && baseDisplayRef.current !== null) {\r\n      if (baseDisplayRef.current.textArr.length * state.fontSize > height) {\r\n        setState(oldState => ({\r\n          ...oldState,\r\n          fontSize: oldState.fontSize - 3\r\n        }));\r\n      } else {\r\n        // Finalize the state.\r\n        setState(oldState => ({ ...oldState, stable: true }));\r\n      }\r\n    }\r\n  }, [state, height]);\r\n\r\n  // Outputs either a magic value or a range, as appropriate.\r\n  const calculateMagicText = () => {\r\n    const magicDamage =\r\n      parseInt(troop.spellbase, 10) +\r\n      parseInt(troop.spellmult, 10) * parseInt(troop.magic, 10);\r\n    return troop.spellrange\r\n      ? `${Math.floor(magicDamage / 2)} - ${magicDamage}`\r\n      : magicDamage.toString();\r\n  };\r\n\r\n  // This simple substitution is only used for the baseDisplay.\r\n  const simpleDescSub = () =>\r\n    troop.spelldesc.replace(/{magic}/gi, calculateMagicText());\r\n\r\n  const calculateMagicPhrases = phrase =>\r\n    calculateMagicText()\r\n      .split(/(\\s+)/)\r\n      .map(word => {\r\n        return word === \"-\"\r\n          ? { ...phrase, text: word }\r\n          : {\r\n              ...phrase,\r\n              color: magicColor,\r\n              weight: magicFontWeight,\r\n              text: word\r\n            };\r\n      });\r\n\r\n  // Turn the current text into a MultiStyleText descriptor.\r\n  const splitSpellDesc = () => {\r\n    const result = [];\r\n    // Split the spell description.\r\n    troop.spelldesc.split(/(\\s+)/).forEach(word => {\r\n      const phrase = {\r\n        text: word,\r\n        weight: fontWeight,\r\n        size: state.fontSize,\r\n        family: fontFamily,\r\n        color\r\n      };\r\n      if (/\\{magic\\}/gi.test(word)) {\r\n        // Resolve the magic phrase into either a number or range.\r\n        result.push(...calculateMagicPhrases(phrase));\r\n      } else {\r\n        // Else, don't use magic.\r\n        result.push(phrase);\r\n      }\r\n    });\r\n\r\n    // Find the length of each line by checking the invisible baseDisplay.\r\n    const lineLengths = baseDisplayRef.current.textArr.map(value => {\r\n      return value.text.split(/(\\s+)/).length;\r\n    });\r\n\r\n    // Get the indexes of each line.\r\n    const lineIndexes = [0];\r\n    lineLengths.forEach(lineLength =>\r\n      lineIndexes.push(lineLength + lineIndexes[lineIndexes.length - 1] + 1)\r\n    );\r\n    lineIndexes.pop();\r\n\r\n    // Split the phrase array by index + length.\r\n    const lines = lineIndexes.map((lineIndex, position) => {\r\n      return result.slice(lineIndex, lineIndex + lineLengths[position]);\r\n    });\r\n\r\n    return lines;\r\n  };\r\n\r\n  // The invisible text is used to calculate line heights.\r\n  const baseDisplay = (\r\n    <CardTextRef\r\n      ref={baseDisplayRef}\r\n      x={(cardWidth - innerWidth) / 2}\r\n      y={0}\r\n      width={innerWidth}\r\n      color={color}\r\n      height={1000}\r\n      opacity={0}\r\n      fontsLoaded={fontsLoaded}\r\n      fontSize={state.fontSize}\r\n      fontWeight={fontWeight}\r\n      text={simpleDescSub()}\r\n      horizontalAlign=\"center\"\r\n      verticalAlign=\"middle\"\r\n    />\r\n  );\r\n\r\n  // If stable, display multi-styled text.\r\n  // Else, display a loading image.\r\n  return state.stable ? (\r\n    <Group>\r\n      {baseDisplay}\r\n      <CardMultiStyleText\r\n        fontsLoaded={fontsLoaded}\r\n        textArray={splitSpellDesc()}\r\n        yCenter={yCenter}\r\n        xCenter={cardWidth / 2}\r\n      />\r\n    </Group>\r\n  ) : (\r\n    <Group>\r\n      {baseDisplay}\r\n      <CardImage\r\n        src=\"./assets/graphics/troop/loading.png\"\r\n        x={195}\r\n        y={323}\r\n        width={100}\r\n        height={100}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nconst CardSpell = ({ troop, displayLayer, fontsLoaded }) => {\r\n  const loadingLayer = useRef(null);\r\n\r\n  // Hide while loading.\r\n  useEffect(() => {\r\n    displayLayer.current.loaded = false;\r\n    loadingLayer.current.show();\r\n    displayLayer.current.hide();\r\n    loadingLayer.current.draw();\r\n  }, []);\r\n\r\n  // Show once loaded.\r\n  useEffect(() => {\r\n    if (fontsLoaded && displayLayer.current.loaded) {\r\n      loadingLayer.current.hide();\r\n      displayLayer.current.show();\r\n      displayLayer.current.draw();\r\n    }\r\n  }, [fontsLoaded, (displayLayer.current || { loaded: false }).loaded]);\r\n\r\n  // Loading animation.\r\n  useEffect(() => {\r\n    const anim = new Konva.Animation(frame => {\r\n      const angleDiff = (frame.timeDiff * 120) / 1000;\r\n      loadingLayer.current.rotate(angleDiff);\r\n    }, loadingLayer.current);\r\n    anim.start();\r\n  }, [loadingLayer]);\r\n\r\n  return (\r\n    <CardBase width={460} height={723}>\r\n      <Layer ref={loadingLayer}>\r\n        <CardImageRotating\r\n          src=\"./assets/graphics/troop/loading.png\"\r\n          x={195}\r\n          y={323}\r\n          width={100}\r\n          height={100}\r\n          angularRate={90}\r\n        />\r\n      </Layer>\r\n      <Layer ref={displayLayer}>\r\n        <CardImage\r\n          src={getImageURL(troop)}\r\n          x={0}\r\n          y={87}\r\n          width={460}\r\n          height={340}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./assets/graphics/spellcard/${troop.rarity}.png`\r\n              : null\r\n          }\r\n          width={460}\r\n          height={723}\r\n          onLoad={() => {\r\n            displayLayer.current.loaded = true;\r\n          }}\r\n        />\r\n        <CardSpellNameText\r\n          x={70}\r\n          y={30}\r\n          width={320}\r\n          horizontalAlign=\"center\"\r\n          text={troop.spellname}\r\n          fontWeight={600}\r\n          baseFontSize={50}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardText\r\n          x={235}\r\n          y={457}\r\n          width={80}\r\n          horizontalAlign=\"left\"\r\n          text={troop.magic}\r\n          fontWeight={600}\r\n          fontSize={40}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardSpellDescText\r\n          troop={troop}\r\n          yCenter={600}\r\n          innerWidth={425}\r\n          cardWidth={460}\r\n          height={160}\r\n          fontWeight={600}\r\n          baseFontSize={38}\r\n          color=\"#000\"\r\n          magicColor=\"#680b7c\"\r\n          magicFontWeight=\"800\"\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n      </Layer>\r\n    </CardBase>\r\n  );\r\n};\r\n\r\nexport default CardSpell;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PreviewButtonBar from \"./PreviewButtonBar\";\r\n\r\nimport { GridCard } from \"../../../Util\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      padding: 0\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: theme.spacing(1.5)\r\n    }\r\n  }\r\n}));\r\n\r\nconst PreviewBase = ({ troopName, displayLayer, children, className }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <GridCard\r\n      gridClassName={className}\r\n      cardClassName={classes.card}\r\n      xs={12}\r\n      sm={12}\r\n      md={12}\r\n      lg={4}\r\n      xl={4}\r\n    >\r\n      {children}\r\n      <PreviewButtonBar troopName={troopName} displayLayer={displayLayer} />\r\n    </GridCard>\r\n  );\r\n};\r\n\r\nexport default PreviewBase;\r\n","import React from \"react\";\r\n\r\nimport CardSpell from \"./cards/CardSpell\";\r\nimport PreviewBase from \"./PreviewBase\";\r\n\r\nconst PreviewSpell = ({ troop, displayLayer, className, fontsLoaded }) => {\r\n  return (\r\n    <PreviewBase\r\n      troopName={troop.name}\r\n      className={className}\r\n      displayLayer={displayLayer}\r\n    >\r\n      <CardSpell\r\n        troop={troop}\r\n        displayLayer={displayLayer}\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n    </PreviewBase>\r\n  );\r\n};\r\n\r\nexport default PreviewSpell;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { Layer, Group } from \"react-konva\";\r\nimport {\r\n  CardBase,\r\n  CardImage,\r\n  CardText,\r\n  CardTextRef,\r\n  CardImageRotating\r\n} from \"./CardBase\";\r\nimport { rarities } from \"../../../../Values\";\r\n\r\nconst CardTraitDescText = ({\r\n  text,\r\n  yCenter,\r\n  cardWidth,\r\n  innerWidth,\r\n  height,\r\n  baseFontSize,\r\n  fontFamily = \"Open Sans\",\r\n  fontWeight = 600,\r\n  color = \"#000\",\r\n  fontsLoaded = false\r\n}) => {\r\n  // A reference to the hidden text display used for math.\r\n  const baseDisplayRef = useRef(null);\r\n\r\n  // Create a basic state that resets when the troop changes.\r\n  const [state, setState] = useState({ stable: false, fontSize: baseFontSize });\r\n  useEffect(() => {\r\n    setState({ stable: false, fontSize: baseFontSize });\r\n  }, [text, baseFontSize]);\r\n\r\n  // Modify the font size until it's right.\r\n  useEffect(() => {\r\n    if (!state.stable && baseDisplayRef.current !== null) {\r\n      if (baseDisplayRef.current.textArr.length * state.fontSize > height) {\r\n        setState(oldState => ({\r\n          ...oldState,\r\n          fontSize: oldState.fontSize - 3\r\n        }));\r\n      } else {\r\n        // Finalize the state.\r\n        setState(oldState => ({ ...oldState, stable: true }));\r\n      }\r\n    }\r\n  }, [state, height]);\r\n\r\n  // The invisible text is used to calculate line heights.\r\n  const baseDisplay = (\r\n    <CardTextRef\r\n      ref={baseDisplayRef}\r\n      x={(cardWidth - innerWidth) / 2}\r\n      y={0}\r\n      text={text}\r\n      fontFamily={fontFamily}\r\n      verticalAlign=\"middle\"\r\n      horizontalAlign=\"center\"\r\n      width={innerWidth}\r\n      color=\"#009\"\r\n      opacity={0}\r\n      height={1000}\r\n      fontSize={state.fontSize}\r\n      fontWeight={fontWeight}\r\n      fontsLoaded={fontsLoaded}\r\n    />\r\n  );\r\n\r\n  return state.stable ? (\r\n    <Group>\r\n      {baseDisplay}\r\n      <CardText\r\n        x={(cardWidth - innerWidth) / 2}\r\n        y={yCenter - height / 2}\r\n        text={text}\r\n        color={color}\r\n        fontFamily={fontFamily}\r\n        fontSize={state.fontSize}\r\n        fontWeight={fontWeight}\r\n        width={innerWidth}\r\n        height={height}\r\n        verticalAlign=\"middle\"\r\n        horizontalAlign=\"center\"\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n    </Group>\r\n  ) : (\r\n    <Group>\r\n      {baseDisplay}\r\n      <CardImage\r\n        src=\"./assets/graphics/troop/loading.png\"\r\n        x={195}\r\n        y={323}\r\n        width={100}\r\n        height={100}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nconst CardTraits = ({ troop, displayLayer, fontsLoaded }) => {\r\n  const loadingLayer = useRef(null);\r\n\r\n  // Hide while loading.\r\n  useEffect(() => {\r\n    displayLayer.current.loaded = false;\r\n    loadingLayer.current.show();\r\n    displayLayer.current.hide();\r\n    loadingLayer.current.draw();\r\n  }, []);\r\n\r\n  // Show once loaded.\r\n  useEffect(() => {\r\n    if (fontsLoaded && displayLayer.current.loaded) {\r\n      loadingLayer.current.hide();\r\n      displayLayer.current.show();\r\n      displayLayer.current.draw();\r\n    }\r\n  }, [fontsLoaded, (displayLayer.current || { loaded: false }).loaded]);\r\n\r\n  // Loading animation.\r\n  useEffect(() => {\r\n    const anim = new Konva.Animation(frame => {\r\n      const angleDiff = (frame.timeDiff * 120) / 1000;\r\n      loadingLayer.current.rotate(angleDiff);\r\n    }, loadingLayer.current);\r\n    anim.start();\r\n  }, [loadingLayer]);\r\n\r\n  return (\r\n    <CardBase width={460} height={727}>\r\n      <Layer ref={loadingLayer}>\r\n        <CardImageRotating\r\n          src=\"./assets/graphics/troop/loading.png\"\r\n          x={195}\r\n          y={323}\r\n          width={100}\r\n          height={100}\r\n          angularRate={90}\r\n        />\r\n      </Layer>\r\n      <Layer ref={displayLayer}>\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./assets/graphics/traitscard/${troop.rarity}.png`\r\n              : null\r\n          }\r\n          width={460}\r\n          height={727}\r\n          onLoad={() => {\r\n            displayLayer.current.loaded = true;\r\n          }}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.trait1code !== \"\"\r\n              ? `./assets/graphics/traiticons/${troop.trait1code}.png`\r\n              : null\r\n          }\r\n          x={400}\r\n          y={100}\r\n          color={rarities.Epic.color}\r\n          width={44}\r\n          height={44}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.trait2code !== \"\"\r\n              ? `./assets/graphics/traiticons/${troop.trait2code}.png`\r\n              : null\r\n          }\r\n          x={400}\r\n          y={306}\r\n          color={rarities.Legendary.color}\r\n          width={44}\r\n          height={44}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.trait3code !== \"\"\r\n              ? `./assets/graphics/traiticons/${troop.trait3code}.png`\r\n              : null\r\n          }\r\n          x={400}\r\n          y={512}\r\n          color={rarities.Mythic.color}\r\n          width={44}\r\n          height={44}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.trait1name}\r\n          x={60}\r\n          y={110}\r\n          width={475}\r\n          color={rarities.Epic.color}\r\n          horizontalAlign=\"left\"\r\n          fontSize={32}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardTraitDescText\r\n          yCenter={220}\r\n          cardWidth={460}\r\n          innerWidth={410}\r\n          height={100}\r\n          text={troop.trait1desc}\r\n          fontWeight={600}\r\n          baseFontSize={32}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.trait2name}\r\n          x={60}\r\n          y={316}\r\n          width={475}\r\n          color={rarities.Legendary.color}\r\n          horizontalAlign=\"left\"\r\n          fontSize={32}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardTraitDescText\r\n          yCenter={425}\r\n          cardWidth={460}\r\n          innerWidth={410}\r\n          height={100}\r\n          text={troop.trait2desc}\r\n          fontWeight={600}\r\n          baseFontSize={32}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.trait3name}\r\n          x={60}\r\n          y={522}\r\n          color={rarities.Mythic.color}\r\n          width={475}\r\n          horizontalAlign=\"left\"\r\n          fontSize={32}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardTraitDescText\r\n          yCenter={630}\r\n          cardWidth={460}\r\n          innerWidth={410}\r\n          height={100}\r\n          text={troop.trait3desc}\r\n          fontWeight={600}\r\n          baseFontSize={32}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n      </Layer>\r\n    </CardBase>\r\n  );\r\n};\r\n\r\nexport default CardTraits;\r\n","import React from \"react\";\r\n\r\nimport CardTraits from \"./cards/CardTraits\";\r\nimport PreviewBase from \"./PreviewBase\";\r\n\r\nconst PreviewTraits = ({ troop, displayLayer, fontsLoaded, className }) => {\r\n  return (\r\n    <PreviewBase\r\n      troopName={troop.name}\r\n      className={className}\r\n      displayLayer={displayLayer}\r\n    >\r\n      <CardTraits\r\n        troop={troop}\r\n        displayLayer={displayLayer}\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n    </PreviewBase>\r\n  );\r\n};\r\n\r\nexport default PreviewTraits;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { Layer } from \"react-konva\";\r\nimport {\r\n  CardBase,\r\n  CardImage,\r\n  CardText,\r\n  CardTextRef,\r\n  CardImageRotating\r\n} from \"./CardBase\";\r\nimport { rarities } from \"../../../../Values\";\r\n\r\nconst getImageURL = troop => {\r\n  if (troop.troopimage !== null) {\r\n    return URL.createObjectURL(troop.troopimage);\r\n  }\r\n  // Else, use the default.\r\n  return `./assets/graphics/troop/infernus.png`;\r\n};\r\n\r\n// Render a spell as part of a full-size card (like in the troop list).\r\nconst CardTroop = ({ troop, displayLayer, fontsLoaded }) => {\r\n  const loadingLayer = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Hide while loading.\r\n    displayLayer.current.loaded = false;\r\n    loadingLayer.current.show();\r\n    displayLayer.current.hide();\r\n    loadingLayer.current.draw();\r\n  }, []);\r\n\r\n  // Show once loaded.\r\n  useEffect(() => {\r\n    if (fontsLoaded && displayLayer.current.loaded) {\r\n      loadingLayer.current.hide();\r\n      displayLayer.current.show();\r\n      displayLayer.current.draw();\r\n    }\r\n  }, [fontsLoaded, (displayLayer.current || { loaded: false }).loaded]);\r\n\r\n  const typeRef = useRef(null);\r\n\r\n  const typeText =\r\n    troop.type2 !== \"\" ? `${troop.type1} / ${troop.type2}` : troop.type1;\r\n\r\n  return (\r\n    <CardBase width={490} height={739}>\r\n      <Layer ref={loadingLayer}>\r\n        <CardImageRotating\r\n          src=\"./assets/graphics/troop/loading.png\"\r\n          x={195}\r\n          y={323}\r\n          width={100}\r\n          height={100}\r\n          angularRate={90}\r\n        />\r\n      </Layer>\r\n      <Layer ref={displayLayer}>\r\n        <CardImage\r\n          src={getImageURL(troop)}\r\n          x={30}\r\n          y={37 + 9}\r\n          width={461}\r\n          height={643}\r\n          crop={{ x: 0, y: 9, width: 460, height: 643 }}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./assets/graphics/troopcard/${troop.rarity}.png`\r\n              : null\r\n          }\r\n          width={490}\r\n          height={739}\r\n          onLoad={() => {\r\n            displayLayer.current.loaded = true;\r\n          }}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./assets/graphics/colors/${troop.colors}.png`\r\n              : null\r\n          }\r\n          width={100}\r\n          height={100}\r\n          x={0}\r\n          y={0}\r\n        />\r\n        <CardText\r\n          text={troop.cost}\r\n          x={15}\r\n          y={25}\r\n          width={70}\r\n          fontSize={60}\r\n          fontWeight={600}\r\n          shadowColor=\"black\"\r\n          horizontalAlign=\"center\"\r\n          shadowOffset={2}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.level}\r\n          x={0}\r\n          y={96}\r\n          width={475}\r\n          horizontalAlign=\"right\"\r\n          fontSize={50}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.trait1code !== \"\"\r\n              ? `./assets/graphics/traiticons/${troop.trait1code}.png`\r\n              : null\r\n          }\r\n          x={45}\r\n          y={243}\r\n          color={rarities.Epic.color}\r\n          width={50}\r\n          height={50}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.trait2code !== \"\"\r\n              ? `./assets/graphics/traiticons/${troop.trait2code}.png`\r\n              : null\r\n          }\r\n          x={45}\r\n          y={308}\r\n          color={rarities.Legendary.color}\r\n          width={50}\r\n          height={50}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.trait3code !== \"\"\r\n              ? `./assets/graphics/traiticons/${troop.trait3code}.png`\r\n              : null\r\n          }\r\n          x={45}\r\n          y={373}\r\n          color={rarities.Mythic.color}\r\n          width={50}\r\n          height={50}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.name}\r\n          x={45}\r\n          y={285}\r\n          width={380}\r\n          height={300}\r\n          fontFamily=\"Raleway\"\r\n          horizontalAlign=\"left\"\r\n          verticalAlign=\"bottom\"\r\n          fontSize={57}\r\n          fontWeight={500}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardText\r\n          text={troop.kingdom}\r\n          x={45}\r\n          y={585}\r\n          width={460}\r\n          horizontalAlign=\"left\"\r\n          color=\"#CCCCCC\"\r\n          fontSize={30}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.attack}\r\n          x={110}\r\n          y={635}\r\n          width={460}\r\n          horizontalAlign=\"left\"\r\n          fontSize={45}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardText\r\n          text={troop.armor}\r\n          x={250}\r\n          y={635}\r\n          width={460}\r\n          horizontalAlign=\"left\"\r\n          fontSize={45}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardText\r\n          text={troop.life}\r\n          x={400}\r\n          y={635}\r\n          width={460}\r\n          horizontalAlign=\"left\"\r\n          fontSize={45}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./assets/graphics/roles/${troop.role}.png`\r\n              : null\r\n          }\r\n          x={\r\n            260 - 44 - 16 - (typeRef.current || { textWidth: 0 }).textWidth / 2\r\n          }\r\n          y={692}\r\n          color=\"#000000\"\r\n          width={44}\r\n          height={44}\r\n        />\r\n        <CardTextRef\r\n          ref={typeRef}\r\n          text={typeText}\r\n          x={40}\r\n          y={700}\r\n          horizontalAlign=\"center\"\r\n          width={440}\r\n          color=\"#000000\"\r\n          fontSize={30}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./assets/graphics/roles/${troop.role}.png`\r\n              : null\r\n          }\r\n          x={260 + 16 + (typeRef.current || { textWidth: 0 }).textWidth / 2}\r\n          y={692}\r\n          color=\"#000000\"\r\n          width={44}\r\n          height={44}\r\n        />\r\n      </Layer>\r\n    </CardBase>\r\n  );\r\n};\r\n\r\nexport default CardTroop;\r\n","import React from \"react\";\r\n\r\nimport CardTroop from \"./cards/CardTroop\";\r\nimport PreviewBase from \"./PreviewBase\";\r\n\r\nconst PreviewTroop = ({ troop, displayLayer, className, fontsLoaded }) => {\r\n  return (\r\n    <PreviewBase\r\n      troopName={troop.name}\r\n      className={className}\r\n      displayLayer={displayLayer}\r\n    >\r\n      <CardTroop\r\n        troop={troop}\r\n        displayLayer={displayLayer}\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n    </PreviewBase>\r\n  );\r\n};\r\n\r\nexport default PreviewTroop;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Container, Toolbar } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport WebFontLoader from \"webfontloader\";\r\n\r\nimport NavBar from \"./layout/NavBar\";\r\nimport TabResult from \"./layout/TabResult\";\r\nimport { TabView, ScrollingContainer, TabList } from \"./layout/TabBase\";\r\nimport FormSpell from \"./layout/areas/form/FormSpell\";\r\nimport FormTraits from \"./layout/areas/form/FormTraits\";\r\nimport FormTroop from \"./layout/areas/form/FormTroop\";\r\nimport PreviewSpell from \"./layout/areas/preview/PreviewSpell\";\r\nimport PreviewTraits from \"./layout/areas/preview/PreviewTraits\";\r\nimport PreviewTroop from \"./layout/areas/preview/PreviewTroop\";\r\nimport { timeout } from \"q\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    height: `calc(100vh - 64px)`,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"100%\",\r\n      height: \"100%\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"calc(100vw - 240px)\",\r\n      height: \"calc(100vh - 112px)\"\r\n    }\r\n  },\r\n  previewGridItem: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      order: 1,\r\n      padding: 0,\r\n      paddingTop: theme.spacing(3),\r\n      margin: 0,\r\n      marginBottom: theme.spacing(1.5)\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      order: 1,\r\n      padding: theme.spacing(1.5)\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      order: 2,\r\n      padding: theme.spacing(3)\r\n    },\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      order: 2,\r\n      margin: \"0\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      order: 1\r\n    }\r\n  },\r\n  grid: {\r\n    display: \"flex\"\r\n  },\r\n  tabView: {\r\n    marginBottom: \"22vh\"\r\n  }\r\n}));\r\n\r\n// Default troop for the troop creator.\r\nconst troopInfernus = {\r\n  name: \"Infernus\",\r\n  kingdom: \"Broken Spire\",\r\n  rarity: \"Mythic\",\r\n  level: \"20\",\r\n\r\n  role: \"Mage\",\r\n  cost: \"24\",\r\n  colors: \"RedYellowPurple\",\r\n\r\n  type1: \"Divine\",\r\n  type2: \"Elemental\",\r\n\r\n  attack: \"40\",\r\n  armor: \"40\",\r\n  life: \"40\",\r\n\r\n  troopimage: null,\r\n  magic: \"25\",\r\n\r\n  spellname: \"Eruption\",\r\n  spelldesc:\r\n    \"Deal {magic} splash damage to 2 random enemies. Explode 5 random Gems.\",\r\n  spellmult: \"1\",\r\n  spellbase: \"10\",\r\n  spellrange: false,\r\n\r\n  spellimage: null,\r\n  trait1name: \"Elemental Shield\",\r\n  trait1desc: \"Allied Elementals gain 2 Armor.\",\r\n  trait1code: \"elementalbond\",\r\n  trait2name: \"Fiery Death\",\r\n  trait2desc: \"Summon a Firestorm when an enemy dies.\",\r\n  trait2code: \"firebrand\",\r\n  trait3name: \"Conflagration\",\r\n  trait3desc: \"Burn all enemies on 4 or 5 Gem matches.\",\r\n  trait3code: \"molten\"\r\n};\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // State of troop info, stored in the forms.\r\n  const [troop, setTroop] = React.useState(troopInfernus);\r\n\r\n  // Creates an onChange function by passing the setState function. Uses callbacks for performance.\r\n  const handleTroopChange = useCallback(\r\n    (field, value) => setTroop(oldState => ({ ...oldState, [field]: value })),\r\n    [setTroop]\r\n  );\r\n\r\n  // State of the currently selected tab number.\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n\r\n  const layerSpellDisplay = useRef(null);\r\n  const layerTroopDisplay = useRef(null);\r\n  const layerTraitsDisplay = useRef(null);\r\n\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n  // Handle loading effects.\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      google: {\r\n        families: [\"Open Sans:400,600,700\", \"Roboto\", \"Raleway\"]\r\n      },\r\n      fontactive: () => {\r\n        setTimeout(() => {\r\n          setFontsLoaded(true);\r\n        }, 500);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Toolbar />\r\n      <Container maxWidth={false} className={classes.content}>\r\n        <TabList currentTab={currentTab} setCurrentTab={setCurrentTab} />\r\n        <ScrollingContainer>\r\n          <SwipeableViews\r\n            className={classes.swipeableView}\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={currentTab}\r\n            onChangeIndex={setCurrentTab}\r\n          >\r\n            <TabView value={currentTab} index={0} dir={theme.direction}>\r\n              {currentTab === 0 ? (\r\n                <FormSpell\r\n                  troop={troop}\r\n                  className={classes.formGridItem}\r\n                  handleTroopChange={handleTroopChange}\r\n                />\r\n              ) : null}\r\n              <PreviewSpell\r\n                troop={troop}\r\n                displayLayer={layerSpellDisplay}\r\n                fontsLoaded={fontsLoaded}\r\n                className={classes.previewGridItem}\r\n              />\r\n            </TabView>\r\n            <TabView value={currentTab} index={1} dir={theme.direction}>\r\n              {currentTab === 1 ? (\r\n                <FormTroop\r\n                  troop={troop}\r\n                  className={classes.formGridItem}\r\n                  handleTroopChange={handleTroopChange}\r\n                />\r\n              ) : null}\r\n              <PreviewTroop\r\n                troop={troop}\r\n                displayLayer={layerTroopDisplay}\r\n                fontsLoaded={fontsLoaded}\r\n                className={classes.previewGridItem}\r\n              />\r\n            </TabView>\r\n            <TabView value={currentTab} index={2} dir={theme.direction}>\r\n              {currentTab === 2 ? (\r\n                <FormTraits\r\n                  troop={troop}\r\n                  className={classes.formGridItem}\r\n                  handleTroopChange={handleTroopChange}\r\n                />\r\n              ) : null}\r\n              <PreviewTraits\r\n                troop={troop}\r\n                displayLayer={layerTraitsDisplay}\r\n                fontsLoaded={fontsLoaded}\r\n                className={classes.previewGridItem}\r\n              />\r\n            </TabView>\r\n            <TabView value={currentTab} index={3} dir={theme.direction}>\r\n              <TabResult\r\n                className={classes.tabView}\r\n                spellLayer={layerSpellDisplay}\r\n                troopLayer={layerTroopDisplay}\r\n                traitsLayer={layerTraitsDisplay}\r\n                troop={troop}\r\n              />\r\n            </TabView>\r\n          </SwipeableViews>\r\n        </ScrollingContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport { orange, blueGrey } from \"@material-ui/core/colors\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport App from \"./components/App\";\r\n\r\n// CSS\r\nimport (/* webpackPrefetch: true */ \"./css/style.css\");\r\nimport (/* webpackPrefetch: true */ \"./css/google-fonts.css\");\r\nimport (/* webpackPrefetch: true */ \"./css/nerd-fonts.min.css\");\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: blueGrey,\r\n    secondary: orange\r\n  },\r\n  zIndex: {\r\n    appBar: 1\r\n  }\r\n});\r\n\r\nfunction Index() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline>\r\n        <App />\r\n      </CssBaseline>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nReactDOM.render(<Index />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}