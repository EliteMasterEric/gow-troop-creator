{"version":3,"sources":["components/Icon.js","components/NavBar.js","components/TabResult.js","components/FormSpell.js","components/CardSpell.js","components/PreviewSpell.js","components/TabSpell.js","components/Values.js","components/FormTraits.js","components/CardTraits.js","components/PreviewTraits.js","components/TabTraits.js","components/FormTroop.js","components/CardTroop.js","components/PreviewTroop.js","components/TabTroop.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","image","width","height","paddingRight","Icon","icon","className","Image","source","classes","alt","src","appbar","elevation","position","toolbar","paddingLeft","appbarText","alignSelf","marginRight","input","marginLeft","borderRadius","overflow","NavBar","AppBar","color","Toolbar","Typography","variant","buttonIcon","fontSize","canvas","margin","display","TabResult","troop","canvasResult","React","useState","downloadUrl","setDownloadUrl","updateDownloadURL","current","toDataURL","useEffect","Card","CardContent","align","Grid","container","item","justify","xs","Box","ref","Tooltip","title","aria-label","Button","size","href","download","name","menu","menuColor","spellPower","breakpoints","up","padding","dropzone","backgroundColor","FormSpell","spellData","setSpellData","other","handleChange","useTheme","event","target","value","lg","spacing","direction","sm","md","xl","card","TextField","id","spellname","onChange","type","label","style","spelldesc","multiline","helperText","magic","InputProps","startAdornment","InputAdornment","spellmult","spellbase","FormControlLabel","control","Checkbox","checked","spellrange","gutterBottom","dropzoneClass","acceptedFiles","filesLimit","showAlerts","files","length","spellimage","cardBox","core_sources","rarities","pips","fillMixedText","ctx","args","x","y","defaultFillStyle","fillStyle","defaultFont","font","save","forEach","text","fillText","measureText","restore","writeSpellDescriptionLines","context","maxWidth","maxHeight","baseLineHeight","lineHeight","words","split","lines","lineIndexes","currentLine","magicFillWordIndex","replace","i","word","magicDamage","parseInt","spell","Math","floor","push","newY","j","textAlign","newX","magicFillWordLocalIndex","magicWords","splice","lineFirstPart","join","lineLastPart","textParts","boldFont","draw","temp","images","getContext","ctemp","rarity_color","rarity","drawImage","globalCompositeOperation","fillRect","clearRect","cresult","getImageURL","URL","createObjectURL","CardSpell","troopCard","useRef","isFontReady","setFontReady","WebFontLoader","load","google","families","fontactive","troop_sources","callback","loadedImages","countImages","onload","index","loadImages","buttonGrid","paddingTop","PreviewSpell","cardGridItem","order","formGridItem","TabSpell","debouncedTroop","colors","roles","trait_codes","skill","manaCost","manaColors","typeField","traitcode","traitname","FormTraits","traitData","setTraitData","trait1code","select","map","code","MenuItem","key","trait1name","trait1desc","trait2code","trait2name","trait2desc","trait3code","trait3name","trait3desc","writeLines","globalAlpha","trait","CardTraits","PreviewTraits","TabTraits","FormTroop","troopData","setTroopData","kingdom","option","level","role","cost","SelectProps","MenuProps","type1","type2","attack","armor","life","troopimage","rarity_pips","rect","clip","translate","scale","shadowOffsetX","shadowOffsetY","shadowColor","Array","keys","txtSize","leftRoleX","rightRoleX","drawInactive","loadingImage","CardTroop","PreviewTroop","TabTroop","content","flexGrow","grid","tabView","TabPanel","children","component","hidden","aria-labelledby","p","a11yProps","App","setTroop","currentTab","setCurrentTab","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","createRef","CssBaseline","Container","Tabs","newValue","indicatorColor","textColor","centered","Tab","axis","onChangeIndex","dir","createMuiTheme","palette","primary","blueGrey","secondary","orange","zIndex","appBar","ReactDOM","render","MuiThemeProvider","document","getElementById"],"mappings":"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CnC,CAAEb,MAAO,kBAAmBa,MAAO,wBACnC,CAAEb,MAAO,qBAAsBa,MAAO,2BACtC,CAAEb,MAAO,MAAOa,MAAO,QAGd0B,GAAW,CACtB,SACA,OACA,aACA,OACA,YACA,SACA,UAGW2F,GAAQ,CACnB,WACA,WACA,YACA,OACA,UACA,UACA,UACA,YACA,WAGWC,GAAc,CACzB,SACA,QACA,WACA,WACA,UACA,YACA,QACA,SACA,UACA,gBACA,gBACA,iBACA,iBACA,cACA,cACA,UACA,YACA,cACA,MACA,UACA,eACA,WACA,cACA,gBACA,QACA,aACA,UACA,YACA,SACA,aACA,gBACA,kBACA,UACA,SACA,aACA,eACA,eACA,cACA,WACA,aACA,WACA,aACA,aACA,eACA,eACA,OACA,aACA,eACA,cACA,YACA,cACA,gBACA,kBACA,UACA,YACA,YACA,SACA,cACA,OACA,OACA,UACA,YACA,aACA,YACA,YACA,WACA,YACA,aACA,SACA,SACA,aACA,YACA,aACA,eACA,YACA,cACA,aACA,eACA,UACA,cACA,SACA,SACA,aACA,OACA,YACA,cACA,SACA,WACA,UACA,WACA,SACA,aACA,eACA,YACA,YACA,OACA,YACA,aACA,eACA,WACA,SACA,cACA,YACA,eACA,aACA,aACA,YACA,cACA,aACA,YACA,eACA,iBACA,WACA,aACA,WACA,cACA,gBACA,SACA,SACA,cACA,gBACA,aACA,eACA,WACA,aACA,aACA,cACA,cACA,aACA,eACA,aACA,UACA,UACA,YACA,cACA,YACA,cACA,aACA,eACA,eACA,aACA,YACA,cACA,YACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,aACA,aACA,aACA,UACA,WACA,aACA,aACA,YACA,YACA,cACA,YACA,cACA,SACA,WACA,cACA,aACA,eACA,cACA,YACA,SACA,WACA,aACA,eACA,WACA,YACA,OACA,SACA,cACA,gBACA,aACA,aACA,YACA,cACA,eACA,iBACA,c,6NCvPF,IAAMtN,GAAYC,YAAW,SAAAC,GAAU,IAAD,YA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","file":"static/js/main.14bdc3b2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  image: {\r\n    width: 'auto',\r\n    height: '24px',\r\n    paddingRight: '4px'\r\n  }\r\n}));\r\n\r\n/*\r\n  Renders font icons. Great for buttons!\r\n  Powered by Nerd Fonts. Find class names on https://www.nerdfonts.com/cheat-sheet\r\n  Example: <Icon icon=\"nf-mdi-login\" />\r\n */\r\nexport const Icon = ({icon, className}) => {\r\n  return (\r\n    <div>\r\n      <i className={`nf ${(icon || \"nf-fa-amazon\")} ${className || ''}`}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const Image = ({source, className}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <img alt=\"\" src={source} className={className || classes.image}></img>\r\n  );\r\n}","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Image } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\" \r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    image: {\r\n      width: 'auto',\r\n      height: '36px',\r\n      paddingRight: '8px',\r\n      borderRadius: '24px',\r\n      overflow: 'hidden'\r\n    }\r\n  };\r\n });\r\n\r\nexport const NavBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar color=\"primary\" className={classes.appbar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Image source={'./logo256.png'} className={classes.image} />\r\n        <Typography className={classes.appbarText} variant=\"h4\" color=\"inherit\">\r\n          Gems of War Troop Creator\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Typography, CardContent, Grid, Card, Button, Tooltip, Box } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Icon } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonIcon: {\r\n    fontSize: '2em'\r\n  },\r\n  canvas: {\r\n    width: '100%',\r\n    margin: '0px auto',\r\n    display: 'table'\r\n  }\r\n}));\r\n\r\nexport const TabResult = ({troop, canvasResult}) => {\r\n  const classes = useStyles();\r\n\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  const updateDownloadURL = () => {\r\n    // Get the data URL of the canvas.\r\n    setDownloadUrl(canvasResult.current.toDataURL(\"image/png\"));\r\n  };\r\n  // Perform when component first renders.\r\n  useEffect(updateDownloadURL, [canvasResult]);\r\n  // Perform when troop changes.\r\n  useEffect(updateDownloadURL, [troop]);\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h2\">Result</Typography>\r\n        <Grid container>\r\n          <Grid item container justify=\"center\" xs={12}>\r\n            <Grid item>\r\n              <Box className={classes.canvas}>\r\n                <canvas ref={canvasResult} width={1440} height={757} />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justify=\"center\" xs={12}>\r\n            <Grid item>\r\n              <Tooltip title=\"Download\" aria-label=\"download\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  href={downloadUrl}\r\n                  download={`${troop.troop.name}.png`}>\r\n                  <Icon className={classes.buttonIcon} icon={\"nf-mdi-download\"}/>\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react'\r\nimport { Typography, CardContent, Grid, Card, TextField, InputAdornment, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { Image } from \"./Icon\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\" \r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    menuColor: {\r\n      width: 400,\r\n    },\r\n    spellPower: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '50%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    dropzone: {\r\n      backgroundColor: \"#1f1f1f\"\r\n    }\r\n  };\r\n });\r\n\r\nexport const FormSpell = ({spellData, setSpellData, ...other}) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleChange = name => event => {\r\n    setSpellData({ ...spellData, [name]: event.target.value });\r\n  };\r\n\r\n  const handleChangeCheckbox = name => event => {\r\n    setSpellData({ ...spellData, [name]: event.target.checked });\r\n  };\r\n\r\n  const handleChangeFiles = files => {\r\n    if (files.length === 0) {\r\n      setSpellData({ ...spellData, spellimage: null });\r\n    } else {\r\n      setSpellData({ ...spellData, spellimage: files[0] });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid xs={12} lg={8} spacing={3} container item direction=\"row\" {...other}>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Spell Name</Typography>\r\n            <TextField\r\n              id=\"form-spellname\"\r\n              value={spellData.spellname}\r\n              onChange={handleChange('spellname')}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              label=\"Spell Name\"\r\n              style={{width: '100%'}}\r\n              variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Spell Description</Typography>\r\n            <TextField\r\n              id=\"form-spelldesc\"\r\n              value={spellData.spelldesc}\r\n              onChange={handleChange('spelldesc')}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              multiline\r\n              helperText=\"{magic} specifies spell power\"\r\n              label=\"Spell Description\"\r\n              style={{width: '100%'}}\r\n              variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Magic</Typography>\r\n            <TextField\r\n                id=\"form-magic\"\r\n                value={spellData.magic}\r\n                type=\"number\"\r\n                label=\"Magic\"\r\n                onChange={handleChange('magic')}\r\n                margin=\"normal\"\r\n                style={{width: '100%'}}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Image source={`./assets/graphics/troopcard/magic.png`}/>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Spell Power</Typography>\r\n            <TextField\r\n              id=\"form-spellmult\"\r\n              value={spellData.spellmult}\r\n              type=\"number\"\r\n              label=\"Multiplier\"\r\n              onChange={handleChange('spellmult')}\r\n              margin=\"normal\"\r\n              className={classes.spellPower}\r\n              variant=\"outlined\" />\r\n            <TextField\r\n              id=\"form-spellbase\"\r\n              value={spellData.spellbase}\r\n              type=\"number\"\r\n              label=\"Base\"\r\n              onChange={handleChange('spellbase')}\r\n              margin=\"normal\"\r\n              className={classes.spellPower}\r\n              variant=\"outlined\" />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox checked={spellData.spellrange} onChange={handleChangeCheckbox('spellrange')} value=\"spellrange\" />\r\n              }\r\n              label=\"Range?\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Image</Typography>\r\n            <Typography variant=\"subtitle2\" gutterBottom>Preferred Size: 460x340</Typography>\r\n            <DropzoneArea\r\n                dropzoneClass={classes.dropzone}\r\n                acceptedFiles={['image/*']}\r\n                filesLimit={1}\r\n                showAlerts\r\n                onChange={handleChangeFiles} />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport WebFontLoader from \"webfontloader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardBox: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    margin: '0px auto',\r\n    display: 'table'\r\n  }\r\n}));\r\n\r\nconst core_sources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/divider.png\", // 2 - SpellDivider\r\n  './assets/graphics/troopcard/spellbg.png', // 3 - SpellBackground\r\n  './assets/graphics/troopcard/magic.png', // 4 - Magic\r\n]\r\n\r\nconst rarities = {\r\n  \"Common\":     { color: \"#FEFEFE\", pips: 1 },\r\n  \"Rare\":       { color: \"#54A721\", pips: 2 },\r\n  \"Ultra-Rare\": { color: \"#1D71FF\", pips: 3 },\r\n  \"Epic\":       { color: \"#9635E7\", pips: 4 },\r\n  \"Legendary\":  { color: \"#F3A120\", pips: 5 },\r\n  \"Mythic\":     { color: \"#13E3F6\", pips: 6 },\r\n  \"Doomed\":     { color: \"#B90000\", pips: 6 },\r\n}\r\n\r\n// Ensure all images are loaded before rendering the canvas itself.\r\nfunction loadImages(canvas, temp, troop, troop_sources, callback, setDownloadUrl, canvasResult) {\r\n  var images = {};\r\n  var loadedImages = 0;\r\n  var countImages = core_sources.length + troop_sources.length;\r\n  for (var src in core_sources) {\r\n      images[src] = new Image();\r\n      images[src].onload = function() {\r\n        if (++loadedImages >= countImages) {\r\n          callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n        }\r\n      };\r\n      images[src].src = core_sources[src];\r\n  }\r\n  for (src in troop_sources) {\r\n    var index = parseInt(src) + core_sources.length;\r\n    images[index] = new Image();\r\n    images[index].onload = function() {\r\n      if (++loadedImages >= countImages) {\r\n        callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n      }\r\n    };\r\n    images[index].src = troop_sources[src];\r\n}\r\n};\r\n\r\n// https://gist.github.com/mrcoles/0dfaab93a1c899e5f46690676c8c29e5\r\nconst fillMixedText = (ctx, args, x, y) => {\r\n  let defaultFillStyle = ctx.fillStyle;\r\n  let defaultFont = ctx.font;\r\n\r\n  ctx.save();\r\n  args.forEach(({ text, fillStyle, font }) => {\r\n    ctx.fillStyle = fillStyle || defaultFillStyle;\r\n    ctx.font = font || defaultFont;\r\n    ctx.fillText(text, x, y);\r\n    x += ctx.measureText(text).width;\r\n  });\r\n  ctx.restore();\r\n};\r\n\r\nconst writeSpellDescriptionLines = (context, x, y, maxWidth, maxHeight, baseLineHeight, troop, text) => {\r\n  //\r\n  // DEATH TO ALL YE WHO ENTER HERE\r\n  // This function is a nightmare of confusing logic, combining word wrapping\r\n  // with the code that colors the magic formatting text.\r\n  //\r\n\r\n  var lineHeight = baseLineHeight;\r\n\r\n  const fillStyle = \"#000000\";\r\n  const altFillStyle = \"#680b7c\";\r\n\r\n  while(lineHeight > 0) {\r\n    var words = text.split(\" \");\r\n    var lines = [];\r\n    var lineIndexes = [0]\r\n    var currentLine = words[0];\r\n    var magicFillWordIndex = -1;\r\n\r\n    context.font = '600 {}px \"Open Sans\"'.replace(\"{}\", lineHeight);\r\n\r\n    // Build an array of lines, starting a new line if the current one is too long.\r\n    for (var i = 1; i < words.length; i++) {\r\n      var word = words[i];\r\n      if (word === \"{magic}\") {\r\n        magicFillWordIndex = i;\r\n        const magicDamage = parseInt(troop.spell.spellbase) + (parseInt(troop.spell.spellmult) * parseInt(troop.spell.magic));\r\n        if (troop.spell.spellrange) {\r\n          word = Math.floor(magicDamage/2) + \" - \" + (magicDamage);\r\n        } else {\r\n          word = magicDamage;\r\n        }\r\n      }\r\n      var width = context.measureText(currentLine + \" \" + word).width;\r\n      if (width < maxWidth) {\r\n        currentLine += \" \" + word;\r\n      } else {\r\n        lines.push(currentLine);\r\n        lineIndexes.push(i);\r\n        currentLine = word;\r\n      }\r\n    }\r\n    // Finish up.\r\n    lines.push(currentLine);\r\n    lineIndexes.push(i);\r\n    if (lines.length * lineHeight > maxHeight) {\r\n      // Make things shorter and start over.\r\n      lineHeight -= 2;\r\n    } else {\r\n      // Actually use this size.\r\n      const newY = y - (lines.length * lineHeight / 2);\r\n\r\n      for (var j = 0; j < lines.length; j++) {\r\n        if (magicFillWordIndex !== -1 &&\r\n          (magicFillWordIndex <= lineIndexes[j+1] && (lineIndexes[j] < magicFillWordIndex))) {\r\n          context.textAlign = 'left';\r\n          var newX = x - (context.measureText(lines[j]).width / 2);\r\n          context.fillStyle = altFillStyle;\r\n          const magicFillWordLocalIndex = magicFillWordIndex - lineIndexes[j];\r\n\r\n          const lineWords = lines[j].split(\" \");\r\n          const magicWords = lineWords.splice(magicFillWordLocalIndex, troop.spell.spellrange ? 3 : 1);\r\n\r\n          const lineFirstPart = lines[j].split(magicWords.join(' '))[0];\r\n          const lineLastPart = lines[j].split(magicWords.join(' '))[1];\r\n          var textParts = []\r\n          const boldFont = 'bold {}px \"Open Sans\"'.replace(\"{}\", lineHeight);\r\n          if (troop.spell.spellrange) {\r\n            textParts = [\r\n              { text: lineFirstPart, fillStyle: fillStyle    },\r\n              { text: magicWords[0] + ' ', fillStyle: altFillStyle, font: boldFont },\r\n              { text: magicWords[1], fillStyle: fillStyle    },\r\n              { text: ' ' + magicWords[2], fillStyle: altFillStyle, font: boldFont },\r\n              { text: lineLastPart,  fillStyle: fillStyle    }\r\n            ]\r\n          } else {\r\n            textParts = [\r\n              { text: lineFirstPart, fillStyle: fillStyle    },\r\n              { text: magicWords[0], fillStyle: altFillStyle, font: boldFont },\r\n              { text: lineLastPart,  fillStyle: fillStyle    }\r\n            ]\r\n          }\r\n          fillMixedText(context, textParts, newX, newY + lineHeight * j);\r\n        } else {\r\n          context.textAlign = 'center';\r\n          context.fillStyle = fillStyle;\r\n          context.fillText(lines[j], x, newY + lineHeight * j);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n// Render the canvas itself.\r\nfunction draw(canvas, temp, troop, images, setDownloadUrl, canvasResult) {\r\n  // Set the canvas size.\r\n  canvas.width = 460;\r\n  canvas.height = 727;\r\n  var ctx = canvas.getContext('2d');\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  var ctemp = temp.getContext('2d');\r\n\r\n  const rarity_color = rarities[troop.troop.rarity].color;\r\n  \r\n  // CardTop and CardBottom, TraitDivider1, 2, and 3\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 689, 460, 34);\r\n  // SpellDivider\r\n  ctemp.drawImage(images[2], 0, 427, 460, 14);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Name Plate\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.fillRect(0, 16, 460, 71);\r\n\r\n  // Spell Name\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'center';\r\n  ctx.fillText(troop.spell.spellname, 215, 66);\r\n\r\n  // Spell Image\r\n  ctx.drawImage(images[5], 0, 87, 460, 340);\r\n\r\n  // Spell Card\r\n  ctx.drawImage(images[3], 0, 441, 460, 248);\r\n\r\n  // Magic Icon\r\n  ctx.drawImage(images[4], 185, 454, 34, 42);\r\n\r\n  // Magic Value\r\n  ctx.font = '600 40px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'left';\r\n  ctx.fillText(troop.spell.magic, 235, 488);\r\n\r\n  // SpellDesc\r\n  writeSpellDescriptionLines(ctx, 230, 623, 430, 150, 36, troop, troop.spell.spelldesc);\r\n\r\n  // Add the spell to the results.\r\n  const cresult = canvasResult.getContext('2d');\r\n  cresult.clearRect(5, 15, canvas.width, canvas.height);\r\n  cresult.drawImage(canvas, 5, 15, canvas.width, canvas.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n}\r\n\r\nconst drawInactive = (canvas) => {\r\n  // Set the canvas size.\r\n  canvas.width = 491;\r\n  canvas.height = 727;\r\n}\r\n\r\nconst getImageURL = (troop) => {\r\n  if (troop.spell.spellimage !== null) {\r\n    return URL.createObjectURL(troop.spell.spellimage);\r\n  } else {\r\n    // Else, use the default.\r\n    return `./assets/graphics/troopcard/eruption.png`;\r\n  }\r\n}\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardSpell = ({troop, canvasResult, setDownloadUrl}) => {\r\n  const classes = useStyles();\r\n\r\n  const troopCard = React.useRef(null);\r\n  const temp = React.useRef(null);\r\n\r\n  const [isFontReady, setFontReady] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      google: {\r\n        families: [ 'Open Sans:400,600,700', 'Roboto', 'Raleway'],\r\n      },\r\n      fontactive: () => { setFontReady(true) },\r\n    })\r\n  }, []);\r\n\r\n  // Perform when troop changes.\r\n  useEffect(() => {\r\n    // Draw the canvas.\r\n    if (isFontReady) {\r\n      loadImages(troopCard.current, temp.current, troop, [\r\n        getImageURL(troop), // 5 - Spell icon\r\n      ], draw, setDownloadUrl, canvasResult.current);\r\n    } else {\r\n      drawInactive(troopCard.current);\r\n    }\r\n  }, [troop, isFontReady]);\r\n\r\n  return (\r\n    <Box height={1} className={classes.cardBox}>\r\n        <canvas ref={troopCard} className={classes.card} />\r\n        <canvas ref={temp} style={{display: 'none'}} />\r\n    </Box>\r\n  );\r\n}","import React from \"react\";\r\nimport { Typography, CardContent, Grid, Card, Button, Tooltip} from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { CardSpell } from \"./CardSpell\";\r\nimport { Icon } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonGrid: {\r\n    paddingTop: '6px'\r\n  },\r\n  buttonIcon: {\r\n    fontSize: '2em'\r\n  },\r\n  card: {\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const PreviewSpell = ({troop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <Grid item xs={12} lg={4} {...other}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography align=\"center\" variant=\"h2\">Preview</Typography>\r\n          <CardSpell troop={troop} canvasResult={canvasResult} setDownloadUrl={setDownloadUrl} />\r\n          <Grid container justify=\"center\" className={classes.buttonGrid} spacing={3}>\r\n            <Grid item>\r\n              <Tooltip title=\"Download\" aria-label=\"download\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  href={downloadUrl}\r\n                  download={`${troop.troop.name}.png`}>\r\n                  <Icon className={classes.buttonIcon} icon={\"nf-mdi-download\"}/>\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { FormSpell } from \"./FormSpell\";\r\nimport { PreviewSpell } from \"./PreviewSpell\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardGridItem: {\r\n    order: 2,\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    order: 1\r\n  }\r\n}));\r\n\r\nexport const TabSpell = ({spellData, debouncedTroop, setSpellData, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} direction=\"row\" {...other}>\r\n      <FormSpell\r\n        spellData={spellData}\r\n        className={classes.formGridItem}\r\n        setSpellData={setSpellData} />\r\n      <PreviewSpell\r\n        troop={debouncedTroop}\r\n        canvasResult={canvasResult} \r\n        className={classes.cardGridItem} />\r\n    </Grid>\r\n  )\r\n}","export const colors = [\r\n    { value: 'Blue', label: 'Blue' },\r\n    { value: 'Green', label: 'Green' },\r\n    { value: 'Red', label: 'Red' },\r\n    { value: 'Yellow', label: 'Yellow' },\r\n    { value: 'Purple', label: 'Purple' },\r\n    { value: 'Orange', label: 'Brown' },\r\n    { value: 'BlueGreen', label: 'Blue / Green' },\r\n    { value: 'BlueRed', label: 'Blue / Red' },\r\n    { value: 'BlueYellow', label: 'Blue / Yellow' },\r\n    { value: 'BluePurple', label: 'Blue / Purple' },\r\n    { value: 'BlueOrange', label: 'Blue / Brown' },\r\n    { value: 'GreenRed', label: 'Green / Red' },\r\n    { value: 'GreenYellow', label: 'Green / Yellow' },\r\n    { value: 'GreenPurple', label: 'Green / Purple' },\r\n    { value: 'GreenOrange', label: 'Green / Brown' },\r\n    { value: 'RedYellow', label: 'Red / Yellow' },\r\n    { value: 'RedPurple', label: 'Red / Purple' },\r\n    { value: 'RedOrange', label: 'Red / Brown' },\r\n    { value: 'YellowPurple', label: 'Yellow / Purple' },\r\n    { value: 'YellowOrange', label: 'Yellow / Brown' },\r\n    { value: 'PurpleOrange', label: 'Purple / Brown' },\r\n    { value: 'BlueGreenRed', label: 'Blue / Green / Red' },\r\n    { value: 'BlueGreenYellow', label: 'Blue / Green / Yellow' },\r\n    { value: 'BlueGreenPurple', label: 'Blue / Green / Purple' },\r\n    { value: 'BlueGreenOrange', label: 'Blue / Green / Brown' },\r\n    { value: 'BlueRedYellow', label: 'Blue / Red / Yellow' },\r\n    { value: 'BlueRedPurple', label: 'Blue / Red / Purple' },\r\n    { value: 'BlueRedOrange', label: 'Blue / Red / Brown' },\r\n    { value: 'BlueYellowPurple', label: 'Blue / Yellow / Purple' },\r\n    { value: 'BlueYellowOrange', label: 'Blue / Yellow / Brown' },\r\n    { value: 'BluePurpleOrange', label: 'Blue / Purple / Brown' },\r\n    { value: 'GreenRedYellow', label: 'Green / Red / Yellow' },\r\n    { value: 'GreenRedPurple', label: 'Green / Red / Purple' },\r\n    { value: 'GreenRedOrange', label: 'Green / Red / Brown' },\r\n    { value: 'GreenYellowPurple', label: 'Green / Yellow / Purple' },\r\n    { value: 'GreenYellowOrange', label: 'Green / Yellow / Brown' },\r\n    { value: 'GreenPurpleOrange', label: 'Green / Purple / Brown' },\r\n    { value: 'RedYellowPurple', label: 'Red / Yellow / Purple' },\r\n    { value: 'RedYellowOrange', label: 'Red / Yellow / Brown' },\r\n    { value: 'RedPurpleOrange', label: 'Red / Purple / Brown' },\r\n    { value: 'YellowPurpleOrange', label: 'Yellow / Purple / Brown' },\r\n    { value: 'All', label: 'All' }\r\n];\r\n\r\nexport const rarities = [\r\n  'Common',\r\n  'Rare',\r\n  'Ultra-Rare',\r\n  'Epic',\r\n  'Legendary',\r\n  'Mythic',\r\n  'Doomed',\r\n]\r\n\r\nexport const roles = [\r\n  'Assassin',\r\n  'Defender',\r\n  'Generator',\r\n  'Mage',\r\n  'Striker',\r\n  'Support',\r\n  'Warlock',\r\n  'Warmaster',\r\n  'Warrior'\r\n]\r\n\r\nexport const trait_codes = [\r\n  'aflame',\r\n  'agile',\r\n  'airbrand',\r\n  'airheart',\r\n  'airlink',\r\n  'airspirit',\r\n  'alert',\r\n  'arcane',\r\n  'armored',\r\n  'armorpiercing',\r\n  'aspectofdeath',\r\n  'aspectoffamine',\r\n  'aspectofplague',\r\n  'aspectofwar',\r\n  'assassinate',\r\n  'avenger',\r\n  'beastbond',\r\n  'beastslayer',\r\n  'big',\r\n  'blessed',\r\n  'bloodsucking',\r\n  'bullseye',\r\n  'centaurbond',\r\n  'centaurslayer',\r\n  'chill',\r\n  'chilltouch',\r\n  'clobber',\r\n  'clockwork',\r\n  'cocoon',\r\n  'compassion',\r\n  'constructbond',\r\n  'constructslayer',\r\n  'cunning',\r\n  'cursed',\r\n  'daemonbond',\r\n  'daemonicpact',\r\n  'daemonslayer',\r\n  'darkchannel',\r\n  'darkfall',\r\n  'deathtouch',\r\n  'defender',\r\n  'divineaura',\r\n  'divinebond',\r\n  'divineshield',\r\n  'divineslayer',\r\n  'doom',\r\n  'dragonbond',\r\n  'dragonslayer',\r\n  'dragonvines',\r\n  'dwarfbond',\r\n  'dwarfslayer',\r\n  'elementalbond',\r\n  'elementalslayer',\r\n  'elfbond',\r\n  'elfslayer',\r\n  'empowered',\r\n  'ensoul',\r\n  'eyeofkhetar',\r\n  'fall',\r\n  'fast',\r\n  'feybond',\r\n  'feyslayer',\r\n  'fierycloak',\r\n  'firebrand',\r\n  'fireheart',\r\n  'firelink',\r\n  'fireproof',\r\n  'firespirit',\r\n  'flying',\r\n  'frenzy',\r\n  'frozensoul',\r\n  'fullplate',\r\n  'gardswrath',\r\n  'gateguardian',\r\n  'giantbond',\r\n  'giantslayer',\r\n  'goblinbond',\r\n  'goblinslayer',\r\n  'goblord',\r\n  'graniteskin',\r\n  'greedy',\r\n  'grudge',\r\n  'hacknslash',\r\n  'huge',\r\n  'humanbond',\r\n  'humanslayer',\r\n  'hunger',\r\n  'icycloak',\r\n  'immense',\r\n  'immortal',\r\n  'immune',\r\n  'impervious',\r\n  'indigestible',\r\n  'inscribed',\r\n  'insulated',\r\n  'jinx',\r\n  'kingswill',\r\n  'knightbond',\r\n  'knightslayer',\r\n  'knockout',\r\n  'leader',\r\n  'lethaltoxin',\r\n  'lifedrain',\r\n  'lionstrength',\r\n  'magicbrand',\r\n  'magicheart',\r\n  'magiclink',\r\n  'magicspirit',\r\n  'manashield',\r\n  'manyheads',\r\n  'marauderbond',\r\n  'marauderslayer',\r\n  'mechbond',\r\n  'mechslayer',\r\n  'merchant',\r\n  'merfolkbond',\r\n  'merfolkslayer',\r\n  'miasma',\r\n  'molten',\r\n  'monsterbond',\r\n  'monsterslayer',\r\n  'mysticbond',\r\n  'mysticslayer',\r\n  'nagabond',\r\n  'nagaslayer',\r\n  'nastyteeth',\r\n  'naturebrand',\r\n  'natureheart',\r\n  'naturelink',\r\n  'naturespirit',\r\n  'necromancy',\r\n  'orcbond',\r\n  'orclord',\r\n  'orcslayer',\r\n  'plaguetouch',\r\n  'pyromania',\r\n  'queensgrace',\r\n  'rakshabond',\r\n  'rakshaslayer',\r\n  'regeneration',\r\n  'reinforced',\r\n  'roguebond',\r\n  'rogueslayer',\r\n  'sacrifice',\r\n  'seedling',\r\n  'shatter',\r\n  'siege',\r\n  'silence',\r\n  'siphon',\r\n  'slippery',\r\n  'snare',\r\n  'soullegion',\r\n  'spikearmor',\r\n  'spiritfire',\r\n  'stalker',\r\n  'stealthy',\r\n  'stonebrand',\r\n  'stoneheart',\r\n  'stonelink',\r\n  'stoneskin',\r\n  'stonespirit',\r\n  'stryxbond',\r\n  'stryxslayer',\r\n  'sturdy',\r\n  'sunshine',\r\n  'suppression',\r\n  'taurosbond',\r\n  'taurosslayer',\r\n  'technomancy',\r\n  'thickhead',\r\n  'thorns',\r\n  'trueshot',\r\n  'undeadbond',\r\n  'undeadslayer',\r\n  'venomous',\r\n  'virulence',\r\n  'ward',\r\n  'warded',\r\n  'wargarebond',\r\n  'wargareslayer',\r\n  'waterbrand',\r\n  'waterheart',\r\n  'waterlink',\r\n  'waterspirit',\r\n  'wildfolkbond',\r\n  'wildfolkslayer',\r\n  'winterveil',\r\n];","import React from 'react'\r\nimport { Typography, CardContent, Grid, Card, TextField, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { trait_codes } from \"./Values\";\r\nimport { Image } from \"./Icon\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\" \r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    menuColor: {\r\n      width: 400,\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '66%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '50%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    traitcode: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '80px',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    traitname: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        width: `calc(100% - 80px)`,\r\n        padding: '4px'\r\n      }\r\n    }\r\n  };\r\n });\r\n\r\nexport const FormTraits = ({traitData, setTraitData, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = name => event => {\r\n    setTraitData({ ...traitData, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Grid xs={12} lg={8} spacing={3} container item direction=\"row\" {...other}>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Trait 1</Typography>\r\n            <TextField\r\n              id=\"form-trait1code\"\r\n              value={traitData.trait1code}\r\n              select\r\n              label=\"Trait Icon\"\r\n              onChange={handleChange(\"trait1code\")}\r\n              margin=\"normal\"\r\n              className={classes.traitcode}\r\n              variant=\"outlined\">\r\n              {trait_codes.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  <Image source={`./assets/graphics/troopcard/traits/${code}.png`}/>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              id=\"form-trait1name\"\r\n              value={traitData.trait1name}\r\n              onChange={handleChange('trait1name')}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              label=\"Trait Name\"\r\n              className={classes.traitname}\r\n              variant=\"outlined\" />\r\n            <TextField\r\n              id=\"form-trait1desc\"\r\n              value={traitData.trait1desc}\r\n              onChange={handleChange('trait1desc')}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              multiline\r\n              label=\"Trait Description\"\r\n              style={{width: '100%'}}\r\n              variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Trait 2</Typography>\r\n            <TextField\r\n              id=\"form-trait2code\"\r\n              value={traitData.trait2code}\r\n              select\r\n              label=\"Trait Icon\"\r\n              onChange={handleChange(\"trait2code\")}\r\n              margin=\"normal\"\r\n              className={classes.traitcode}\r\n              variant=\"outlined\">\r\n              {trait_codes.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  <Image source={`./assets/graphics/troopcard/traits/${code}.png`}/>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n                id=\"form-trait2name\"\r\n                value={traitData.trait2name}\r\n                onChange={handleChange('trait2name')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Trait Name\"\r\n                className={classes.traitname}\r\n                variant=\"outlined\" />\r\n            <TextField\r\n                id=\"form-trait2desc\"\r\n                value={traitData.trait2desc}\r\n                onChange={handleChange('trait2desc')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                multiline\r\n                label=\"Trait Description\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Trait 3</Typography>\r\n            <TextField\r\n              id=\"form-trait3code\"\r\n              value={traitData.trait3code}\r\n              select\r\n              label=\"Trait Icon\"\r\n              onChange={handleChange(\"trait3code\")}\r\n              margin=\"normal\"\r\n              className={classes.traitcode}\r\n              variant=\"outlined\">\r\n              {trait_codes.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  <Image source={`./assets/graphics/troopcard/traits/${code}.png`}/>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n                id=\"form-trait3name\"\r\n                value={traitData.trait3name}\r\n                onChange={handleChange('trait3name')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Trait Name\"\r\n                className={classes.traitname}\r\n                variant=\"outlined\" />\r\n            <TextField\r\n                id=\"form-trait3desc\"\r\n                value={traitData.trait3desc}\r\n                onChange={handleChange('trait3desc')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                multiline\r\n                label=\"Trait Description\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport WebFontLoader from \"webfontloader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardBox: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    margin: '0px auto',\r\n    display: 'table'\r\n  }\r\n}));\r\n\r\nconst core_sources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/divider.png\", // 2 - TraitDivider\r\n  './assets/graphics/troopcard/ascension.png', // 3 - Trait Pip\r\n  './assets/graphics/troopcard/traitbg.png', // 4 - Trait background\r\n]\r\n\r\nconst rarities = {\r\n  \"Common\":     { color: \"#FEFEFE\", pips: 1 },\r\n  \"Rare\":       { color: \"#54A721\", pips: 2 },\r\n  \"Ultra-Rare\": { color: \"#1D71FF\", pips: 3 },\r\n  \"Epic\":       { color: \"#9635E7\", pips: 4 },\r\n  \"Legendary\":  { color: \"#F3A120\", pips: 5 },\r\n  \"Mythic\":     { color: \"#13E3F6\", pips: 6 },\r\n  \"Doomed\":     { color: \"#B90000\", pips: 6 },\r\n}\r\n\r\n// Ensure all images are loaded before rendering the canvas itself.\r\nfunction loadImages(canvas, temp, troop, troop_sources, callback, setDownloadUrl, canvasResult) {\r\n  var images = {};\r\n  var loadedImages = 0;\r\n  var countImages = core_sources.length + troop_sources.length;\r\n  for (var src in core_sources) {\r\n      images[src] = new Image();\r\n      images[src].onload = function() {\r\n        if (++loadedImages >= countImages) {\r\n          callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n        }\r\n      };\r\n      images[src].src = core_sources[src];\r\n  }\r\n  for (src in troop_sources) {\r\n    var index = parseInt(src) + core_sources.length;\r\n    images[index] = new Image();\r\n    images[index].onload = function() {\r\n      if (++loadedImages >= countImages) {\r\n        callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n      }\r\n    };\r\n    images[index].src = troop_sources[src];\r\n}\r\n};\r\n\r\nfunction writeLines(context, x, y, maxWidth, lineHeight, text) {\r\n  var words = text.split(\" \");\r\n  var lines = [];\r\n  var currentLine = words[0];\r\n\r\n  // Build an array of lines, starting a new line if the current one is too long.\r\n  for (var i = 1; i < words.length; i++) {\r\n    var word = words[i];\r\n    var width = context.measureText(currentLine + \" \" + word).width;\r\n    if (width < maxWidth) {\r\n      currentLine += \" \" + word;\r\n    } else {\r\n      lines.push(currentLine);\r\n      currentLine = word;\r\n    }\r\n  }\r\n  // Finish up.\r\n  lines.push(currentLine);\r\n\r\n  const newY = y - (lines.length * lineHeight / 2);\r\n\r\n  for (var j = 0; j < lines.length; j++) {\r\n    context.fillText(lines[j], x, newY + lineHeight * j);\r\n  }\r\n}\r\n\r\n// Render the canvas itself.\r\nfunction draw(canvas, temp, troop, images, setDownloadUrl, canvasResult) {\r\n  // Set the canvas size.\r\n  canvas.width = 460;\r\n  canvas.height = 727;\r\n  var ctx = canvas.getContext('2d');\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  var ctemp = temp.getContext('2d');\r\n\r\n  const rarity_color = rarities[troop.troop.rarity].color;\r\n  \r\n  // CardTop and CardBottom, TraitDivider1, 2, and 3\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 693, 460, 34);\r\n  // TraitDivider1\r\n  ctemp.drawImage(images[2], 0, 281, 460, 14);\r\n  // TraitDivider2\r\n  ctemp.drawImage(images[2], 0, 487, 460, 14);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Name Plate\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.fillRect(0, 16, 460, 73);\r\n\r\n  // \"Traits\" Label\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'center';\r\n  ctx.fillText(\"Traits\", 215, 66);\r\n\r\n  // TraitCard1\r\n  ctx.drawImage(images[4], 0, 89, 460, 192);\r\n  // TraitCard2\r\n  ctx.drawImage(images[4], 0, 295, 460, 192);\r\n  // TraitCard3\r\n  ctx.drawImage(images[4], 0, 501, 460, 192);\r\n\r\n  // TraitIcon1, TraitPip1\r\n  // To color Epic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 104, 36, 36);\r\n  ctemp.drawImage(images[5], 404, 104, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Epic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 1;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon2, TraitPip2\r\n  // To color Legendary, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 310, 36, 36);\r\n  ctemp.drawImage(images[6], 404, 310, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Legendary'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon3, TraitPip3\r\n  // To color Mythic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 516, 36, 36);\r\n  ctemp.drawImage(images[7], 404, 516, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Mythic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitName1\r\n  ctx.font = '600 32px \"Open Sans\"';\r\n  ctx.textAlign = 'left';\r\n  ctx.fillStyle = rarities['Epic'].color;\r\n  ctx.fillText(troop.trait.trait1name, 60, 104 + 30);\r\n\r\n  // TraitName2\r\n  ctx.fillStyle = rarities['Legendary'].color;\r\n  ctx.fillText(troop.trait.trait2name, 60, 310 + 30);\r\n\r\n  // TraitName3\r\n  ctx.fillStyle = rarities['Mythic'].color;\r\n  ctx.fillText(troop.trait.trait3name, 60, 516 + 30);\r\n\r\n  // TraitDesc1\r\n  ctx.font = '600 32px \"Open Sans\"';\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.textAlign = 'center';\r\n  writeLines(ctx, 230, 246, 400, 32, troop.trait.trait1desc);\r\n\r\n  // TraitDesc2\r\n  writeLines(ctx, 230, 452, 400, 32, troop.trait.trait2desc);\r\n\r\n  // TraitDesc3\r\n  writeLines(ctx, 230, 658, 400, 32, troop.trait.trait3desc);\r\n\r\n  // Add the traits to the results.\r\n  const cresult = canvasResult.getContext('2d');\r\n  cresult.clearRect(975, 10, canvas.width, canvas.height);\r\n  cresult.drawImage(canvas, 975, 10, canvas.width, canvas.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n}\r\n\r\nconst drawInactive = (canvas) => {\r\n  // Set the canvas size.\r\n  canvas.width = 460;\r\n  canvas.height = 727;\r\n}\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardTraits = ({troop, canvasResult, setDownloadUrl}) => {\r\n  const classes = useStyles();\r\n\r\n  const troopCard = React.useRef(null);\r\n  const temp = React.useRef(null);\r\n\r\n  const [isFontReady, setFontReady] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      google: {\r\n        families: [ 'Open Sans:400,600,700', 'Roboto', 'Raleway'],\r\n      },\r\n      fontactive: () => { setFontReady(true) },\r\n    })\r\n  }, []);\r\n\r\n  // Perform when troop changes.\r\n  useEffect(() => {\r\n    // Draw the canvas.\r\n    if (isFontReady) {\r\n      loadImages(troopCard.current, temp.current, troop, [\r\n        `./assets/graphics/troopcard/traits/${troop.trait.trait1code}.png`, // 5 - Trait Icon 1\r\n        `./assets/graphics/troopcard/traits/${troop.trait.trait2code}.png`, // 6 - Trait Icon 2\r\n        `./assets/graphics/troopcard/traits/${troop.trait.trait3code}.png`, // 7 - Trait Icon 3\r\n      ], draw, setDownloadUrl, canvasResult.current);\r\n    } else {\r\n      drawInactive(troopCard.current);\r\n    }\r\n  }, [troop, isFontReady]);\r\n\r\n  return (\r\n    <Box height={1} className={classes.cardBox}>\r\n        <canvas ref={troopCard} className={classes.card} />\r\n        <canvas ref={temp} style={{display: 'none'}} />\r\n    </Box>\r\n  );\r\n}","import React from \"react\";\r\nimport { Typography, CardContent, Grid, Card, Button, Tooltip} from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { CardTraits } from \"./CardTraits\";\r\nimport { Icon } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonGrid: {\r\n    paddingTop: '6px'\r\n  },\r\n  buttonIcon: {\r\n    fontSize: '2em'\r\n  },\r\n  card: {\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const PreviewTraits = ({troop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <Grid item xs={12} lg={4} {...other}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography align=\"center\" variant=\"h2\">Preview</Typography>\r\n          <CardTraits troop={troop} canvasResult={canvasResult} setDownloadUrl={setDownloadUrl} />\r\n          <Grid container justify=\"center\" className={classes.buttonGrid} spacing={3}>\r\n            <Grid item>\r\n              <Tooltip title=\"Download\" aria-label=\"download\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  href={downloadUrl}\r\n                  download={`${troop.troop.name}.png`}>\r\n                  <Icon className={classes.buttonIcon} icon={\"nf-mdi-download\"}/>\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { FormTraits } from \"./FormTraits\";\r\nimport { PreviewTraits } from \"./PreviewTraits\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardGridItem: {\r\n    order: 2,\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    order: 1\r\n  }\r\n}));\r\n\r\nexport const TabTraits = ({traitData, debouncedTroop, setTraitData, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} direction=\"row\" {...other}>\r\n      <FormTraits\r\n        traitData={traitData}\r\n        className={classes.formGridItem}\r\n        setTraitData={setTraitData} />\r\n      <PreviewTraits\r\n        troop={debouncedTroop}\r\n        canvasResult={canvasResult} \r\n        className={classes.cardGridItem} />\r\n    </Grid>\r\n  )\r\n}","import React from 'react'\r\nimport { Typography, CardContent, Grid, Card, TextField, MenuItem, InputAdornment } from '@material-ui/core';\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { colors, roles, rarities } from \"./Values\";\r\nimport { Image } from \"./Icon\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\" \r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    menuColor: {\r\n      width: 400,\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '66%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '50%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    trait: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    dropzone: {\r\n      backgroundColor: \"#1f1f1f\"\r\n    }\r\n  };\r\n });\r\n\r\nexport const FormTroop = ({troopData, setTroopData, ...other}) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleChange = name => event => {\r\n    setTroopData({ ...troopData, [name]: event.target.value });\r\n  };\r\n\r\n  const handleChangeFiles = files => {\r\n    if (files.length === 0) {\r\n      setTroopData({ ...troopData, troopimage: null });\r\n    } else {\r\n      setTroopData({ ...troopData, troopimage: files[0] });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid xs={12} lg={8} spacing={3} container item direction=\"row\" {...other}>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Name</Typography>\r\n              <TextField\r\n                id=\"form-name\"\r\n                value={troopData.name}\r\n                onChange={handleChange('name')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Kingdom</Typography>\r\n              <TextField\r\n                id=\"form-kingdom\"\r\n                value={troopData.kingdom}\r\n                onChange={handleChange('kingdom')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Kingdom\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Rarity</Typography>\r\n              <TextField\r\n                id=\"form-rarity\"\r\n                value={troopData.rarity}\r\n                select\r\n                label=\"Rarity\"\r\n                onChange={handleChange('rarity')}\r\n                margin=\"normal\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\">\r\n                {rarities.map(option => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={3} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Level</Typography>\r\n              <TextField\r\n                id=\"form-level\"\r\n                value={troopData.level}\r\n                type=\"number\"\r\n                onChange={handleChange('level')}\r\n                margin=\"normal\"\r\n                label=\"Level\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={3} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Role</Typography>\r\n              <TextField\r\n                id=\"form-role\"\r\n                value={troopData.role}\r\n                select\r\n                label=\"Role\"\r\n                onChange={handleChange('role')}\r\n                margin=\"normal\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\">\r\n                {roles.map(option => (\r\n                  <MenuItem key={option} value={option}>\r\n                    <Image source={`./assets/graphics/troopcard/roles/${option}.png`}/> {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={5}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Mana Cost</Typography>\r\n              <TextField\r\n                id=\"form-cost\"\r\n                value={troopData.cost}\r\n                type=\"number\"\r\n                label=\"Cost\"\r\n                onChange={handleChange('cost')}\r\n                margin=\"normal\"\r\n                className={classes.manaCost}\r\n                variant=\"outlined\" />\r\n              <TextField\r\n                id=\"form-colors\"\r\n                value={troopData.colors}\r\n                select\r\n                label=\"Colors\"\r\n                onChange={handleChange('colors')}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes.menuColor,\r\n                  },\r\n                }}\r\n                margin=\"normal\"\r\n                className={classes.manaColors}\r\n                variant=\"outlined\">\r\n                {colors.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    <Image source={`./assets/graphics/troopcard/colors/${option.value}.png`}/> {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Types</Typography>\r\n              <TextField\r\n                id=\"form-type1\"\r\n                value={troopData.type1}\r\n                onChange={handleChange('type1')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Type 1\"\r\n                className={classes.typeField}\r\n                variant=\"outlined\" />\r\n              <TextField\r\n                id=\"form-type2\"\r\n                value={troopData.type2}\r\n                onChange={handleChange('type2')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Type 2 (Optional)\"\r\n                className={classes.typeField}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={5} xl={5}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Skills</Typography>\r\n              <TextField\r\n                id=\"form-attack\"\r\n                value={troopData.attack}\r\n                type=\"number\"\r\n                label=\"Attack\"\r\n                onChange={handleChange('attack')}\r\n                margin=\"normal\"\r\n                className={classes.skill}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Image source={`./assets/graphics/troopcard/attack.png`}/>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\" />\r\n              <TextField\r\n                id=\"form-armor\"\r\n                value={troopData.armor}\r\n                type=\"number\"\r\n                label=\"Armor\"\r\n                onChange={handleChange('armor')}\r\n                margin=\"normal\"\r\n                className={classes.skill}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Image source={`./assets/graphics/troopcard/armor.png`}/>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\" />\r\n              <TextField\r\n                id=\"form-life\"\r\n                value={troopData.life}\r\n                type=\"number\"\r\n                label=\"Life\"\r\n                onChange={handleChange('life')}\r\n                margin=\"normal\"\r\n                className={classes.skill}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Image source={`./assets/graphics/troopcard/life.png`}/>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Image</Typography>\r\n              <Typography variant=\"subtitle2\" gutterBottom>Preferred Size: 460x652</Typography>\r\n              <DropzoneArea\r\n                dropzoneClass={classes.dropzone}\r\n                acceptedFiles={['image/*']}\r\n                filesLimit={1}\r\n                showAlerts\r\n                onChange={handleChangeFiles} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n    </Grid>\r\n  );\r\n};","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport WebFontLoader from \"webfontloader\";\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardBox: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  card: {\r\n    width: '100%',\r\n    margin: '0px auto',\r\n    display: 'table'\r\n  }\r\n}));\r\n\r\nconst core_sources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/attack.png\", // 2 - Attack Skill\r\n  \"./assets/graphics/troopcard/armor.png\", // 3 - Armor Skil\r\n  \"./assets/graphics/troopcard/life.png\", // 4 - Life Skill\r\n  \"./assets/graphics/troopcard/trait_flag.png\", // 5 - Trait Flag\r\n  \"./assets/graphics/troopcard/ascension.png\", // 6 - Rarity Pip without Spikes\r\n  \"./assets/graphics/troopcard/ascension_spike.png\", // 7 - Rarity Pip with Spikes\r\n  \"./assets/graphics/troopcard/shading_horizontal.png\", // 8 - Horizontal Gradient\r\n  \"./assets/graphics/troopcard/shading_vertical.png\", // 9 - Vertical Gradient\r\n]\r\n\r\nconst rarities = {\r\n  \"Common\":     { color: \"#FEFEFE\", pips: 1 },\r\n  \"Rare\":       { color: \"#54A721\", pips: 2 },\r\n  \"Ultra-Rare\": { color: \"#1D71FF\", pips: 3 },\r\n  \"Epic\":       { color: \"#9635E7\", pips: 4 },\r\n  \"Legendary\":  { color: \"#F3A120\", pips: 5 },\r\n  \"Mythic\":     { color: \"#13E3F6\", pips: 6 },\r\n  \"Doomed\":     { color: \"#B90000\", pips: 6 },\r\n}\r\n\r\n// Ensure all images are loaded before rendering the canvas itself.\r\nfunction loadImages(canvas, temp, troop, troop_sources, callback, setDownloadUrl, canvasResult) {\r\n  var images = {};\r\n  var loadedImages = 0;\r\n  var countImages = core_sources.length + troop_sources.length;\r\n  for (var src in core_sources) {\r\n      images[src] = new Image();\r\n      images[src].onload = function() {\r\n        if (++loadedImages >= countImages) {\r\n          callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n        }\r\n      };\r\n      images[src].src = core_sources[src];\r\n  }\r\n  for (src in troop_sources) {\r\n    var index = parseInt(src) + core_sources.length;\r\n    images[index] = new Image();\r\n    images[index].onload = function() {\r\n      if (++loadedImages >= countImages) {\r\n        callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n      }\r\n    };\r\n    images[index].src = troop_sources[src];\r\n  }\r\n};\r\n\r\nfunction writeLines(context, x, y, maxWidth, lineHeight, text) {\r\n  var words = text.split(\" \");\r\n  var lines = [];\r\n  var currentLine = words[0];\r\n\r\n  // Build an array of lines, starting a new line if the current one is too long.\r\n  for (var i = 1; i < words.length; i++) {\r\n    var word = words[i];\r\n    var width = context.measureText(currentLine + \" \" + word).width;\r\n    if (width < maxWidth) {\r\n      currentLine += \" \" + word;\r\n    } else {\r\n      lines.push(currentLine);\r\n      currentLine = word;\r\n    }\r\n  }\r\n  // Finish up.\r\n  lines.push(currentLine);\r\n\r\n  const newY = y - (lines.length * lineHeight);\r\n\r\n  for (var j = 0; j < lines.length; j++) {\r\n    context.fillText(lines[j], x, newY + lineHeight * j);\r\n  }\r\n}\r\n\r\n// Render the canvas itself.\r\nfunction draw(canvas, temp, troop, images, setDownloadUrl, canvasResult) {\r\n  // Set the canvas size.\r\n  canvas.width = 490;\r\n  canvas.height = 746;\r\n  var ctx = canvas.getContext('2d');\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  var ctemp = temp.getContext('2d');\r\n\r\n  const rarity_color = rarities[troop.troop.rarity].color;\r\n  const rarity_pips = rarities[troop.troop.rarity].pips;\r\n\r\n  // TroopImage\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  ctx.drawImage(images[10], 30, 37, 460, 652);\r\n  ctx.restore();\r\n\r\n  // TopGradient, behind the ascension pips\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  // Set transparency\r\n  ctx.globalAlpha = 0.8235\r\n  ctx.drawImage(images[9], 30, 37, 460, 107);\r\n  ctx.restore();\r\n\r\n  // LevelGradient, behind the troop level\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  // Set transparency\r\n  ctx.globalAlpha = 0.7843\r\n  // Flip horizontally\r\n  ctx.translate(460, 0);\r\n  ctx.scale(-1, 1);\r\n  ctx.drawImage(images[8], -30, 45, 195, 107);\r\n  ctx.restore();\r\n  \r\n  // CardTop and CardBottom\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 659, 460, 50);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 30, 30, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // LevelLabel\r\n  ctx.font = '500 40px \"Raleway\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'right';\r\n  ctx.fillText(\"Level\", canvas.width - 8, 56 + 30);\r\n\r\n  // LevelValue\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  // Same fillStyle and textAlign\r\n  ctx.fillText(troop.troop.level, canvas.width - 8, 108 + 30);\r\n\r\n  // ManaColor\r\n  ctx.drawImage(images[15], 0, 0, 100, 100);\r\n\r\n  // ManaCost\r\n  ctx.save();\r\n  ctx.font = '600 60px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'center';\r\n  // 2px Black shadow\r\n  ctx.shadowOffsetX = 2;\r\n  ctx.shadowOffsetY = 2;\r\n  ctx.shadowColor = '#000';\r\n  ctx.fillText(troop.troop.cost, 50, 70);\r\n  ctx.restore();\r\n\r\n  // Ascension Pips\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  for (const i of Array(rarity_pips).keys()) {\r\n    ctemp.drawImage(images[7], 105 + 30 * i, 60, 30, 30);\r\n  }\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Unascended Pips\r\n  // To color gray, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  for (const i of Array(6 - rarity_pips).keys()) {\r\n    ctemp.drawImage(images[6], 255 - 30 * i, 60, 30, 30);\r\n  }\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = \"#AFAFAF\";\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Skill Background\r\n  ctx.fillStyle = \"#000000B2\";\r\n  ctx.fillRect(30, 618, 460, 71);\r\n\r\n  // Attack Icon\r\n  ctx.drawImage(images[2], 49, 630, 50, 50);\r\n  // Armor Icon\r\n  ctx.drawImage(images[3], 216, 630, 44, 50);\r\n  // Life Icon\r\n  ctx.drawImage(images[4], 368, 630, 50, 50);\r\n\r\n  ctx.font = '600 40px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'left';\r\n  // Attack Value\r\n  ctx.fillText(troop.troop.attack, 104, 667);\r\n  // Armor Value\r\n  ctx.fillText(troop.troop.armor, 268, 667);\r\n  // Life Value\r\n  ctx.fillText(troop.troop.life, 423, 667);\r\n\r\n  // Troop Name\r\n  ctx.font = '500 57px \"Raleway\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'left';\r\n  writeLines(ctx, 50, 630, 380, 57, troop.troop.name);\r\n\r\n  // Troop Kingdom\r\n  ctx.font = '600 30px \"Open Sans\"';\r\n  ctx.fillStyle = \"#CCCCCCFF\";\r\n  ctx.fillText(troop.troop.kingdom, 50, 608);\r\n\r\n  // Type\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.textAlign = 'center';\r\n  const type = troop.troop.type2 !== \"\" ? `${troop.troop.type1} / ${troop.troop.type2}` : troop.troop.type1;\r\n  const txtSize = ctx.measureText(type).width;\r\n  ctx.fillText(type, 260, 722);\r\n\r\n  // Role Icons\r\n  // To color black, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  const leftRoleX = 210 - (txtSize / 2);\r\n  const rightRoleX = 266 + (txtSize / 2);\r\n  ctemp.drawImage(images[11], leftRoleX, 692, 44, 44);\r\n  ctemp.drawImage(images[11], rightRoleX, 692, 44, 44);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = \"#000000\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // Trait Flags\r\n  // To color black/transparent, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[5], 30, 238, 120, 60);\r\n  ctemp.drawImage(images[5], 30, 303, 120, 60);\r\n  ctemp.drawImage(images[5], 30, 368, 120, 60);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = \"#000000\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 0.706;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon1\r\n  // To color Epic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[12], 45, 243, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Epic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 1;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon2\r\n  // To color Legendary, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[13], 45, 313, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Legendary'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon3\r\n  // To color Mythic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[14], 45, 373, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Mythic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // Add the troop to the results.\r\n  const cresult = canvasResult.getContext('2d');\r\n  cresult.clearRect(475, 0, canvas.width, canvas.height);\r\n  cresult.drawImage(canvas, 475, 0, canvas.width, canvas.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n}\r\n\r\nconst drawInactive = (canvas) => {\r\n  canvas.width = 490;\r\n  canvas.height = 746;\r\n  var ctx = canvas.getContext('2d');\r\n\r\n  var loadingImage = new Image();\r\n  loadingImage.onload = function() {\r\n    ctx.drawImage(loadingImage, 180, 308, 100, 100);\r\n  };\r\n  loadingImage.src = './assets/graphics/troopcard/loading.png'\r\n}\r\n\r\nconst getImageURL = (troop) => {\r\n  if (troop.troop.troopimage !== null) {\r\n    return URL.createObjectURL(troop.troop.troopimage);\r\n  } else {\r\n    // Else, use the default.\r\n    return `./assets/graphics/troopcard/infernus.png`;\r\n  }\r\n}\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardTroop = ({troop, canvasResult, setDownloadUrl}) => {\r\n  const classes = useStyles();\r\n\r\n  const troopCard = React.useRef(null);\r\n  const temp = React.useRef(null);\r\n\r\n  const [isFontReady, setFontReady] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      google: {\r\n        families: [ 'Open Sans:400,600,700', 'Roboto', 'Raleway'],\r\n      },\r\n      fontactive: () => { setFontReady(true) },\r\n    });\r\n    drawInactive(troopCard.current);\r\n  }, []);\r\n\r\n  // Perform when troop changes.\r\n  useEffect(() => {\r\n    // Draw the canvas.\r\n    if (isFontReady) {\r\n      loadImages(troopCard.current, temp.current, troop, [\r\n        getImageURL(troop), // 10 - Troop Image\r\n        `./assets/graphics/troopcard/roles/${troop.troop.role}.png`, // 11 - Role Icon\r\n        `./assets/graphics/troopcard/traits/${troop.trait.trait1code}.png`, // 12 - Trait Icon 1\r\n        `./assets/graphics/troopcard/traits/${troop.trait.trait2code}.png`, // 13 - Trait Icon 2\r\n        `./assets/graphics/troopcard/traits/${troop.trait.trait3code}.png`, // 14 - Trait Icon 3\r\n        `./assets/graphics/troopcard/colors/${troop.troop.colors}.png`, // 15 - Mana Colors\r\n      ], draw, setDownloadUrl, canvasResult.current);\r\n    } else {\r\n      drawInactive(troopCard.current);\r\n    }\r\n  }, [troop, isFontReady]);\r\n\r\n  return (\r\n    <Box height={1} className={classes.cardBox}>\r\n        <canvas ref={troopCard} className={classes.card} />\r\n        <canvas ref={temp} style={{display: 'none'}} />\r\n    </Box>\r\n  );\r\n}","import React from \"react\";\r\nimport { Typography, CardContent, Grid, Card, Button, Tooltip} from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { CardTroop } from \"./CardTroop\";\r\nimport { Icon } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonGrid: {\r\n    paddingTop: '6px'\r\n  },\r\n  buttonIcon: {\r\n    fontSize: '2em'\r\n  },\r\n  card: {\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const PreviewTroop = ({troop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <Grid item xs={12} lg={4} {...other}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography align=\"center\" variant=\"h2\">Preview</Typography>\r\n          <CardTroop troop={troop} canvasResult={canvasResult} setDownloadUrl={setDownloadUrl} />\r\n          <Grid container justify=\"center\" className={classes.buttonGrid} spacing={3}>\r\n            <Grid item>\r\n              <Tooltip title=\"Download\" aria-label=\"download\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  href={downloadUrl}\r\n                  download={`${troop.troop.name}.png`}>\r\n                  <Icon className={classes.buttonIcon} icon={\"nf-mdi-download\"}/>\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { FormTroop } from \"./FormTroop\";\r\nimport { PreviewTroop } from \"./PreviewTroop\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardGridItem: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 2,\r\n    },\r\n    order: 2,\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      order: 2,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 1,\r\n    }\r\n  }\r\n}));\r\n\r\nexport const TabTroop = ({troopData, debouncedTroop, setTroopData, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} direction=\"row\" {...other}>\r\n      <FormTroop\r\n        troopData={troopData}\r\n        className={classes.formGridItem}\r\n        setTroopData={setTroopData} />\r\n      <PreviewTroop\r\n        troop={debouncedTroop}\r\n        canvasResult={canvasResult} \r\n        className={classes.cardGridItem} />\r\n    </Grid>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { CssBaseline, Container, Toolbar, Tabs, Tab, Typography, Box } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport { NavBar } from \"./NavBar\";\r\nimport { TabResult } from \"./TabResult\";\r\nimport { TabSpell } from \"./TabSpell\";\r\nimport { TabTraits } from \"./TabTraits\";\r\nimport { TabTroop } from \"./TabTroop\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100vw - 240px)`,\r\n    maxHeight: `calc(100vh - 64px)`,\r\n  },\r\n  grid: {\r\n    display: 'flex'\r\n  },\r\n  tabView: {\r\n  }\r\n}));\r\n\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={3}>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nfunction useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value] \r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport const App = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [troop, setTroop] = React.useState({\r\n    troop: {\r\n      name: \"Infernus\",\r\n      kingdom: \"Broken Spire\",\r\n      rarity: \"Mythic\",\r\n      level: \"20\",\r\n  \r\n      role: \"Mage\",\r\n      cost: \"24\",\r\n      colors: \"RedYellowPurple\",\r\n  \r\n      type1: \"Divine\",\r\n      type2: \"Elemental\",\r\n  \r\n      attack: \"40\",\r\n      armor: \"40\",\r\n      life: \"40\",\r\n\r\n      troopimage: null,\r\n    },\r\n    spell: {\r\n      magic: \"25\",\r\n\r\n      spellname: \"Eruption\",\r\n      spelldesc: \"Deal {magic} damage to 2 random enemies, and half of that damage to adjacent enemies. Explode 5 random Gems.\",\r\n      spellmult: \"1\",\r\n      spellbase: \"10\",\r\n      spellrange: false,\r\n\r\n      spellimage: null,\r\n    },\r\n    trait: {\r\n      trait1name: 'Elemental Shield',\r\n      trait1desc: 'Allied Elementals gain 2 Armor.',\r\n      trait1code: 'elementalbond',\r\n      trait2name: 'Fiery Death',\r\n      trait2desc: 'Summon a Firestorm when an enemy dies.',\r\n      trait2code: 'firebrand',\r\n      trait3name: 'Conflagration',\r\n      trait3desc: 'Burn all enemies on 4 or 5 Gem matches.',\r\n      trait3code: 'molten',\r\n    }\r\n  });\r\n\r\n\r\n  const setTraitData = (value) => {\r\n    setTroop({ ...troop, trait: value });\r\n  }\r\n\r\n  const setSpellData = (value) => {\r\n    setTroop({ ...troop, spell: value });\r\n  }\r\n\r\n  const setTroopData = (value) => {\r\n    setTroop({ ...troop, troop: value });\r\n  }\r\n\r\n  const [currentTab, setCurrentTab] = React.useState(1);\r\n\r\n  const debouncedTroop = useDebounce(troop, 100);\r\n\r\n  const handleTabEvent = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  }\r\n\r\n  const canvasResult = React.createRef();\r\n\r\n  return (\r\n    <CssBaseline>\r\n      <NavBar />\r\n      <Toolbar />\r\n      <Container maxWidth=\"xl\" className={classes.content}>\r\n        <Tabs\r\n          value={currentTab}\r\n          onChange={handleTabEvent}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered>\r\n          <Tab label=\"Spell\" {...a11yProps(0)} />\r\n          <Tab label=\"Troop\" {...a11yProps(1)} />\r\n          <Tab label=\"Traits\" {...a11yProps(2)} />\r\n          <Tab label=\"Result\" {...a11yProps(3)} />\r\n        </Tabs>\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={currentTab}\r\n          onChangeIndex={setCurrentTab}>\r\n          <TabPanel value={currentTab} index={0} dir={theme.direction}>\r\n            <TabSpell\r\n              className={classes.tabView}\r\n              canvasResult={canvasResult}\r\n              spellData={troop.spell}\r\n              setSpellData={setSpellData} \r\n              debouncedTroop={debouncedTroop} />\r\n          </TabPanel>\r\n          <TabPanel value={currentTab} index={1} dir={theme.direction}>\r\n            <TabTroop\r\n              className={classes.tabView}\r\n              canvasResult={canvasResult}\r\n              troopData={troop.troop}\r\n              setTroopData={setTroopData} \r\n              debouncedTroop={debouncedTroop} />\r\n          </TabPanel>\r\n          <TabPanel value={currentTab} index={2} dir={theme.direction}>\r\n            <TabTraits\r\n              className={classes.tabView}\r\n              canvasResult={canvasResult}\r\n              traitData={troop.trait}\r\n              setTraitData={setTraitData} \r\n              debouncedTroop={debouncedTroop} />\r\n          </TabPanel>\r\n          <TabPanel value={currentTab} index={3} dir={theme.direction}>\r\n            <TabResult\r\n              className={classes.tabView}\r\n              canvasResult={canvasResult}\r\n              troop={troop} />\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </Container>\r\n    </CssBaseline>\r\n  );  \r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport { App } from \"./components/App\";\nimport { orange, blueGrey } from \"@material-ui/core/colors\";\n\n// CSS\nimport './css/style.css'\nimport './css/google-fonts.css'\nimport './css/nerd-fonts.min.css'\n\nconst theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: blueGrey,\n      secondary: orange,\n    },\n    zIndex: {\n        appBar: 1\n    }\n});\n\nfunction Index() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  );\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));"],"sourceRoot":""}