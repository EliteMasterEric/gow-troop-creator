{"version":3,"sources":["components/NavBar.js","components/CardTroop.js","components/CardTraits.js","components/CardSpell.js","components/Icon.js","components/TabResult.js","components/Values.js","components/FormSpell.js","components/PreviewSpell.js","components/TabSpell.js","components/FormTraits.js","components/PreviewTraits.js","components/TabTraits.js","components/FormTroop.js","components/PreviewTroop.js","components/TabTroop.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","appbar","elevation","position","toolbar","paddingLeft","paddingRight","appbarText","alignSelf","marginRight","input","marginLeft","NavBar","classes","AppBar","color","className","Toolbar","Typography","variant","card","width","margin","display","core_sources","rarities","pips","draw","canvas","temp","troop","images","setDownloadUrl","canvasResult","height","ctx","getContext","ctemp","rarity_color","rarity","rarity_pips","save","rect","clip","drawImage","restore","globalAlpha","translate","scale","fillStyle","globalCompositeOperation","fillRect","clearRect","font","textAlign","fillText","level","shadowOffsetX","shadowOffsetY","shadowColor","cost","Array","keys","i","attack","armor","life","name","kingdom","type","type2","type1","txtSize","measureText","leftRoleX","rightRoleX","cresult","toDataURL","CardTroop","troopCard","React","useRef","useState","isFontReady","setFontReady","useEffect","WebFontLoader","load","google","families","fontactive","troop_sources","callback","loadedImages","countImages","length","src","Image","onload","index","parseInt","loadImages","current","role","trait1code","trait2code","trait3code","colors","Box","ref","style","writeLines","context","x","y","maxWidth","lineHeight","text","words","split","lines","currentLine","word","push","newY","trait1name","trait2name","trait3name","trait1desc","trait2desc","trait3desc","CardTraits","image","Icon","icon","source","alt","buttonGrid","paddingTop","buttonIcon","fontSize","TabResult","Grid","container","item","xs","Card","CardContent","align","justify","spacing","Tooltip","title","aria-label","Button","size","href","download","value","label","roles","trait_codes","menu","menuColor","skill","breakpoints","up","padding","manaCost","manaColors","typeField","trait","cardGridItem","order","formGridItem","traitcode","traitname","FormTraits","setTroop","other","handleChange","event","target","lg","direction","sm","md","xl","TextField","id","select","onChange","map","code","MenuItem","key","multiline","PreviewTraits","downloadUrl","TabTraits","FormTroop","option","SelectProps","MenuProps","InputProps","startAdornment","InputAdornment","gutterBottom","backgroundColor","PreviewTroop","TabTroop","content","flexGrow","maxHeight","grid","tabView","TabPanel","children","component","hidden","aria-labelledby","p","a11yProps","App","useTheme","file_base","files","currentTab","setCurrentTab","createRef","CssBaseline","Container","Tabs","newValue","indicatorColor","textColor","centered","Tab","axis","onChangeIndex","dir","createMuiTheme","palette","primary","blueGrey","secondary","orange","zIndex","appBar","ReactDOM","render","MuiThemeProvider","document","getElementById"],"mappings":"yXAMMA,EAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLC,OAAQ,CACNC,UAAW,EACXC,SAAU,SAEZC,QAAS,CACPC,YAAa,MACbC,aAAc,OAEhBC,WAAY,CACVC,UAAW,SACXC,YAAa,QAEfC,MAAO,CACLC,WAAY,WAKLC,EAAS,WACpB,IAAMC,EAAUf,IAEhB,OACE,kBAACgB,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWH,EAAQZ,QACzC,kBAACgB,EAAA,EAAD,CAASD,UAAWH,EAAQT,SAC1B,kBAACc,EAAA,EAAD,CAAYF,UAAWH,EAAQN,WAAYY,QAAQ,KAAKJ,MAAM,WAA9D,gC,8DC3BFjB,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoB,KAAM,CACJC,MAAO,OACPC,OAAQ,WACRC,QAAS,YAIPC,EAAe,CACnB,sCACA,yCACA,yCACA,wCACA,uCACA,6CACA,4CACA,kDACA,qDACA,oDAGIC,EAAW,CACf,OAAc,CAAEV,MAAO,UAAWW,KAAM,GACxC,KAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,aAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,KAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,UAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,OAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,OAAc,CAAEX,MAAO,UAAWW,KAAM,IA8B1C,SAASC,EAAKC,EAAQC,EAAMC,EAAOC,EAAQC,EAAgBC,GAEzDL,EAAOP,MAAQ,IACfO,EAAOM,OAAS,IAChB,IAAIC,EAAMP,EAAOQ,WAAW,MAC5BP,EAAKR,MAAQO,EAAOP,MACpBQ,EAAKK,OAASN,EAAOM,OACrB,IAAIG,EAAQR,EAAKO,WAAW,MAEtBE,EAAeb,EAASK,EAAMS,QAAQxB,MACtCyB,EAAcf,EAASK,EAAMS,QAAQb,KAK3CS,EAAIM,OACJN,EAAIO,KAAK,EAAG,GAAId,EAAOP,MAAOO,EAAOM,QACrCC,EAAIQ,OACJR,EAAIS,UAAUb,EAAO,IAAK,GAAI,GAAI,IAAK,KACvCI,EAAIU,UAKJV,EAAIM,OACJN,EAAIO,KAAK,EAAG,GAAId,EAAOP,MAAOO,EAAOM,QACrCC,EAAIQ,OAEJR,EAAIW,YAAc,MAClBX,EAAIS,UAAUb,EAAO,GAAI,GAAI,GAAI,IAAK,KACtCI,EAAIU,UAKJV,EAAIM,OACJN,EAAIO,KAAK,EAAG,GAAId,EAAOP,MAAOO,EAAOM,QACrCC,EAAIQ,OAEJR,EAAIW,YAAc,MAElBX,EAAIY,UAAU,IAAK,GACnBZ,EAAIa,OAAO,EAAG,GACdb,EAAIS,UAAUb,EAAO,IAAK,GAAI,GAAI,IAAK,KACvCI,EAAIU,UAKJR,EAAMI,OAENJ,EAAMO,UAAUb,EAAO,GAAI,EAAG,EAAG,IAAK,IAEtCM,EAAMO,UAAUb,EAAO,GAAI,EAAG,IAAK,IAAK,IAExCM,EAAMY,UAAYX,EAClBD,EAAMa,yBAA2B,YACjCb,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QAEtCC,EAAIS,UAAUf,EAAM,GAAI,GAAID,EAAOP,MAAOO,EAAOM,QACjDG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAGNV,EAAIkB,KAAO,qBACXlB,EAAIc,UAAY,OAChBd,EAAImB,UAAY,QAChBnB,EAAIoB,SAAS,QAAS3B,EAAOP,MAAQ,EAAG,IAGxCc,EAAIkB,KAAO,uBAEXlB,EAAIoB,SAASzB,EAAM0B,MAAO5B,EAAOP,MAAQ,EAAG,KAG5Cc,EAAIS,UAAUb,EAAO,IAAK,EAAG,EAAG,IAAK,KAGrCI,EAAIM,OACJN,EAAIkB,KAAO,uBACXlB,EAAIc,UAAY,OAChBd,EAAImB,UAAY,SAEhBnB,EAAIsB,cAAgB,EACpBtB,EAAIuB,cAAgB,EACpBvB,EAAIwB,YAAc,OAClBxB,EAAIoB,SAASzB,EAAM8B,KAAM,GAAI,IAC7BzB,EAAIU,UAKJR,EAAMI,OA5FiE,2BA6FvE,YAAgBoB,MAAMrB,GAAasB,OAAnC,+CAA2C,CAAC,IAAjCC,EAAgC,QACzC1B,EAAMO,UAAUb,EAAO,GAAI,IAAM,GAAKgC,EAAG,GAAI,GAAI,KA9FoB,kFAiGvE1B,EAAMY,UAAYX,EAClBD,EAAMa,yBAA2B,YACjCb,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QAEtCC,EAAIS,UAAUf,EAAM,EAAG,EAAGD,EAAOP,MAAOO,EAAOM,QAC/CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAKNR,EAAMI,OA5GiE,2BA6GvE,YAAgBoB,MAAM,EAAIrB,GAAasB,OAAvC,+CAA+C,CAAC,IAArCC,EAAoC,QAC7C1B,EAAMO,UAAUb,EAAO,GAAI,IAAM,GAAKgC,EAAG,GAAI,GAAI,KA9GoB,kFAiHvE1B,EAAMY,UAAY,UAClBZ,EAAMa,yBAA2B,YACjCb,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QAEtCC,EAAIS,UAAUf,EAAM,EAAG,EAAGD,EAAOP,MAAOO,EAAOM,QAC/CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAGNV,EAAIc,UAAY,YAChBd,EAAIgB,SAAS,GAAI,IAAK,IAAK,IAG3BhB,EAAIS,UAAUb,EAAO,GAAI,GAAI,IAAK,GAAI,IAEtCI,EAAIS,UAAUb,EAAO,GAAI,IAAK,IAAK,GAAI,IAEvCI,EAAIS,UAAUb,EAAO,GAAI,IAAK,IAAK,GAAI,IAEvCI,EAAIkB,KAAO,uBACXlB,EAAIc,UAAY,OAChBd,EAAImB,UAAY,OAEhBnB,EAAIoB,SAASzB,EAAMkC,OAAQ,IAAK,KAEhC7B,EAAIoB,SAASzB,EAAMmC,MAAO,IAAK,KAE/B9B,EAAIoB,SAASzB,EAAMoC,KAAM,IAAK,KAG9B/B,EAAIkB,KAAO,qBACXlB,EAAIc,UAAY,OAChBd,EAAImB,UAAY,OAChBnB,EAAIoB,SAASzB,EAAMqC,KAAM,GAAI,KAG7BhC,EAAIkB,KAAO,uBACXlB,EAAIc,UAAY,YAChBd,EAAIoB,SAASzB,EAAMsC,QAAS,GAAI,KAGhCjC,EAAIc,UAAY,OAChBd,EAAImB,UAAY,SAChB,IAAMe,EAAuB,KAAhBvC,EAAMwC,MAAN,UAAwBxC,EAAMyC,MAA9B,cAAyCzC,EAAMwC,OAAUxC,EAAMyC,MACtEC,EAAUrC,EAAIsC,YAAYJ,GAAMhD,MACtCc,EAAIoB,SAASc,EAAM,IAAK,KAKxBhC,EAAMI,OACNJ,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvC,IAAMwC,EAAY,IAAOF,EAAU,EAC7BG,EAAa,IAAOH,EAAU,EACpCnC,EAAMO,UAAUb,EAAO,IAAK2C,EAAW,IAAK,GAAI,IAChDrC,EAAMO,UAAUb,EAAO,IAAK4C,EAAY,IAAK,GAAI,IACjDtC,EAAMa,yBAA2B,YACjCb,EAAMY,UAAY,UAClBZ,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QACtCC,EAAIS,UAAUf,EAAM,EAAG,EAAGA,EAAKR,MAAOQ,EAAKK,QAC3CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAKNR,EAAMI,OACNJ,EAAMO,UAAUb,EAAO,GAAI,GAAI,IAAK,IAAK,IACzCM,EAAMO,UAAUb,EAAO,GAAI,GAAI,IAAK,IAAK,IACzCM,EAAMO,UAAUb,EAAO,GAAI,GAAI,IAAK,IAAK,IACzCM,EAAMa,yBAA2B,YACjCb,EAAMY,UAAY,UAClBZ,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QACtCC,EAAIW,YAAc,KAClBX,EAAIS,UAAUf,EAAM,EAAG,EAAGA,EAAKR,MAAOQ,EAAKK,QAC3CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAKNR,EAAMI,OACNJ,EAAMO,UAAUb,EAAO,IAAK,GAAI,IAAK,GAAI,IACzCM,EAAMa,yBAA2B,YACjCb,EAAMY,UAAYxB,EAAQ,KAASV,MACnCsB,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QACtCC,EAAIW,YAAc,EAClBX,EAAIS,UAAUf,EAAM,EAAG,EAAGA,EAAKR,MAAOQ,EAAKK,QAC3CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAKNR,EAAMI,OACNJ,EAAMO,UAAUb,EAAO,IAAK,GAAI,IAAK,GAAI,IACzCM,EAAMa,yBAA2B,YACjCb,EAAMY,UAAYxB,EAAQ,UAAcV,MACxCsB,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QACtCC,EAAIS,UAAUf,EAAM,EAAG,EAAGA,EAAKR,MAAOQ,EAAKK,QAC3CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAKNR,EAAMI,OACNJ,EAAMO,UAAUb,EAAO,IAAK,GAAI,IAAK,GAAI,IACzCM,EAAMa,yBAA2B,YACjCb,EAAMY,UAAYxB,EAAQ,OAAWV,MACrCsB,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QACtCC,EAAIS,UAAUf,EAAM,EAAG,EAAGA,EAAKR,MAAOQ,EAAKK,QAC3CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAGN,IAAM+B,EAAU3C,EAAaG,WAAW,MACxCwC,EAAQxB,UAAU,IAAS,EAAGjB,EAAId,MAAOc,EAAID,QAC7C0C,EAAQhC,UAAUhB,EAAQ,IAAS,EAAGO,EAAId,MAAOc,EAAID,QAGrDF,EAAeJ,EAAOiD,UAAU,cAGlC,IAOaC,EAAY,SAAC,GAA2C,IAA1ChD,EAAyC,EAAzCA,MAAOG,EAAkC,EAAlCA,aAAcD,EAAoB,EAApBA,eACxCnB,EAAUf,IAEViF,EAAYC,IAAMC,OAAO,MACzBpD,EAAOmD,IAAMC,OAAO,MAJwC,EAM9BD,IAAME,UAAS,GANe,mBAM3DC,EAN2D,KAM9CC,EAN8C,KAmClE,OA3BAC,oBAAU,WAERC,IAAcC,KAAK,CACjBC,OAAQ,CACNC,SAAU,CAAE,YAAa,SAAU,YAErCC,WAAY,WAAQN,GAAa,OAElC,IAGHC,oBAAU,WA1BS,IAACzD,EA4BduD,EAnSR,SAAoBvD,EAAQC,EAAMC,EAAO6D,EAAeC,EAAU5D,EAAgBC,GAChF,IAAIF,EAAS,GACT8D,EAAe,EACfC,EAActE,EAAauE,OAASJ,EAAcI,OACtD,IAAK,IAAIC,KAAOxE,EACZO,EAAOiE,GAAO,IAAIC,MAClBlE,EAAOiE,GAAKE,OAAS,aACbL,GAAgBC,GACpBF,EAAShE,EAAQC,EAAMC,EAAOC,EAAQC,EAAgBC,IAG1DF,EAAOiE,GAAKA,IAAMxE,EAAawE,GAEnC,IAAKA,KAAOL,EAAe,CACzB,IAAIQ,EAAQC,SAASJ,GAAOxE,EAAauE,OACzChE,EAAOoE,GAAS,IAAIF,MACpBlE,EAAOoE,GAAOD,OAAS,aACfL,GAAgBC,GACpBF,EAAShE,EAAQC,EAAMC,EAAOC,EAAQC,EAAgBC,IAG1DF,EAAOoE,GAAOH,IAAML,EAAcK,IA+QhCK,CAAWtB,EAAUuB,QAASzE,EAAKyE,QAASxE,EAAO,CAAC,2CAAD,4CAEZA,EAAMyE,KAFM,qDAGXzE,EAAM0E,WAHK,qDAIX1E,EAAM2E,WAJK,qDAKX3E,EAAM4E,WALK,qDAMX5E,EAAM6E,OANK,SAOhDhF,EAAMK,EAAgBC,EAAaqE,WApCtB1E,EAsCHmD,EAAUuB,SApCpBjF,MAAQ,IACfO,EAAOM,OAAS,MAqCb,CAACJ,EAAOqD,IAGT,kBAACyB,EAAA,EAAD,CAAK1E,OAAQ,GACT,4BAAQ2E,IAAK9B,EAAW/D,UAAWH,EAAQO,OAC3C,4BAAQyF,IAAKhF,EAAMiF,MAAO,CAACvF,QAAS,YCpVtCzB,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoB,KAAM,CACJC,MAAO,OACPC,OAAQ,WACRC,QAAS,YAIPC,EAAe,CACnB,sCACA,yCACA,0CACA,4CACA,2CAGIC,EAAW,CACf,OAAc,CAAEV,MAAO,UAAWW,KAAM,GACxC,KAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,aAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,KAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,UAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,OAAc,CAAEX,MAAO,UAAWW,KAAM,GACxC,OAAc,CAAEX,MAAO,UAAWW,KAAM,IA6B1C,SAASqF,EAAWC,EAASC,EAAGC,EAAGC,EAAUC,EAAYC,GAMvD,IALA,IAAIC,EAAQD,EAAKE,MAAM,KACnBC,EAAQ,GACRC,EAAcH,EAAM,GAGfvD,EAAI,EAAGA,EAAIuD,EAAMvB,OAAQhC,IAAK,CACrC,IAAI2D,EAAOJ,EAAMvD,GACLiD,EAAQvC,YAAYgD,EAAc,IAAMC,GAAMrG,MAC9C8F,EACVM,GAAe,IAAMC,GAErBF,EAAMG,KAAKF,GACXA,EAAcC,GAIlBF,EAAMG,KAAKF,GAEX,IAAMG,EAAOV,EAAKM,EAAMzB,OAASqB,EAAa,EAE9C,IAASrD,EAAI,EAAGA,EAAIyD,EAAMzB,OAAQhC,IAChCiD,EAAQzD,SAASiE,EAAMzD,GAAIkD,EAAGW,EAAOR,EAAarD,GAOtD,SAASpC,EAAKC,EAAQC,EAAMC,EAAOC,EAAQC,EAAgBC,GAEzDL,EAAOP,MAAQ,IACfO,EAAOM,OAAS,IAChB,IAAIC,EAAMP,EAAOQ,WAAW,MAC5BP,EAAKR,MAAQO,EAAOP,MACpBQ,EAAKK,OAASN,EAAOM,OACrB,IAAIG,EAAQR,EAAKO,WAAW,MAEtBE,EAAeb,EAASK,EAAMS,QAAQxB,MAK5CsB,EAAMI,OAENJ,EAAMO,UAAUb,EAAO,GAAI,EAAG,EAAG,IAAK,IAEtCM,EAAMO,UAAUb,EAAO,GAAI,EAAG,IAAK,IAAK,IAExCM,EAAMO,UAAUb,EAAO,GAAI,EAAG,IAAK,IAAK,IAExCM,EAAMO,UAAUb,EAAO,GAAI,EAAG,IAAK,IAAK,IAExCM,EAAMY,UAAYX,EAClBD,EAAMa,yBAA2B,YACjCb,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QAEtCC,EAAIS,UAAUf,EAAM,EAAG,EAAGD,EAAOP,MAAOO,EAAOM,QAC/CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAGNV,EAAIc,UAAY,OAChBd,EAAIgB,SAAS,EAAG,GAAI,IAAK,IAGzBhB,EAAIkB,KAAO,uBACXlB,EAAIc,UAAY,OAChBd,EAAImB,UAAY,SAChBnB,EAAIoB,SAAS,SAAU,IAAK,IAG5BpB,EAAIS,UAAUb,EAAO,GAAI,EAAG,GAAI,IAAK,KAErCI,EAAIS,UAAUb,EAAO,GAAI,EAAG,IAAK,IAAK,KAEtCI,EAAIS,UAAUb,EAAO,GAAI,EAAG,IAAK,IAAK,KAKtCM,EAAMI,OACNJ,EAAMO,UAAUb,EAAO,GAAI,GAAI,IAAK,GAAI,IACxCM,EAAMO,UAAUb,EAAO,GAAI,IAAK,IAAK,GAAI,IACzCM,EAAMa,yBAA2B,YACjCb,EAAMY,UAAYxB,EAAQ,KAASV,MACnCsB,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QACtCC,EAAIW,YAAc,EAClBX,EAAIS,UAAUf,EAAM,EAAG,EAAGA,EAAKR,MAAOQ,EAAKK,QAC3CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAKNR,EAAMI,OACNJ,EAAMO,UAAUb,EAAO,GAAI,GAAI,IAAK,GAAI,IACxCM,EAAMO,UAAUb,EAAO,GAAI,IAAK,IAAK,GAAI,IACzCM,EAAMa,yBAA2B,YACjCb,EAAMY,UAAYxB,EAAQ,UAAcV,MACxCsB,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QACtCC,EAAIS,UAAUf,EAAM,EAAG,EAAGA,EAAKR,MAAOQ,EAAKK,QAC3CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAKNR,EAAMI,OACNJ,EAAMO,UAAUb,EAAO,GAAI,GAAI,IAAK,GAAI,IACxCM,EAAMO,UAAUb,EAAO,GAAI,IAAK,IAAK,GAAI,IACzCM,EAAMa,yBAA2B,YACjCb,EAAMY,UAAYxB,EAAQ,OAAWV,MACrCsB,EAAMc,SAAS,EAAG,EAAGtB,EAAKR,MAAOQ,EAAKK,QACtCC,EAAIS,UAAUf,EAAM,EAAG,EAAGA,EAAKR,MAAOQ,EAAKK,QAC3CG,EAAMe,UAAU,EAAG,EAAGvB,EAAKR,MAAOQ,EAAKK,QACvCG,EAAMQ,UAGNV,EAAIkB,KAAO,uBACXlB,EAAIc,UAAY,OAChBd,EAAImB,UAAY,OAChBnB,EAAIoB,SAASzB,EAAM+F,WAAY,GAAI,KAGnC1F,EAAIoB,SAASzB,EAAMgG,WAAY,GAAI,KAGnC3F,EAAIoB,SAASzB,EAAMiG,WAAY,GAAI,KAGnC5F,EAAIkB,KAAO,uBACXlB,EAAIc,UAAY,UAChBd,EAAImB,UAAY,SAChByD,EAAW5E,EAAK,IAAK,IAAK,IAAK,GAAIL,EAAMkG,YAGzCjB,EAAW5E,EAAK,IAAK,IAAK,IAAK,GAAIL,EAAMmG,YAGzClB,EAAW5E,EAAK,IAAK,IAAK,IAAK,GAAIL,EAAMoG,YAGzC,IAAMtD,EAAU3C,EAAaG,WAAW,MACxCwC,EAAQxB,UAAU,IAAe,EAAGjB,EAAId,MAAOc,EAAID,QACnD0C,EAAQhC,UAAUhB,EAAQ,IAAe,EAAGO,EAAId,MAAOc,EAAID,QAG3DF,EAAeJ,EAAOiD,UAAU,cAGlC,IAOasD,EAAa,SAAC,GAA2C,IAA1CrG,EAAyC,EAAzCA,MAAOG,EAAkC,EAAlCA,aAAcD,EAAoB,EAApBA,eACzCnB,EAAUf,IAEViF,EAAYC,IAAMC,OAAO,MACzBpD,EAAOmD,IAAMC,OAAO,MAJyC,EAM/BD,IAAME,UAAS,GANgB,mBAM5DC,EAN4D,KAM/CC,EAN+C,KAgCnE,OAxBAC,oBAAU,WAERC,IAAcC,KAAK,CACjBC,OAAQ,CACNC,SAAU,CAAE,YAAa,SAAU,YAErCC,WAAY,WAAQN,GAAa,OAElC,IAGHC,oBAAU,WA1BS,IAACzD,EA4BduD,EA5MR,SAAoBvD,EAAQC,EAAMC,EAAO6D,EAAeC,EAAU5D,EAAgBC,GAChF,IAAIF,EAAS,GACT8D,EAAe,EACfC,EAActE,EAAauE,OAASJ,EAAcI,OACtD,IAAK,IAAIC,KAAOxE,EACZO,EAAOiE,GAAO,IAAIC,MAClBlE,EAAOiE,GAAKE,OAAS,aACbL,GAAgBC,GACpBF,EAAShE,EAAQC,EAAMC,EAAOC,EAAQC,EAAgBC,IAG1DF,EAAOiE,GAAKA,IAAMxE,EAAawE,GAEnC,IAAKA,KAAOL,EAAe,CACzB,IAAIQ,EAAQC,SAASJ,GAAOxE,EAAauE,OACzChE,EAAOoE,GAAS,IAAIF,MACpBlE,EAAOoE,GAAOD,OAAS,aACfL,GAAgBC,GACpBF,EAAShE,EAAQC,EAAMC,EAAOC,EAAQC,EAAgBC,IAG1DF,EAAOoE,GAAOH,IAAML,EAAcK,IAwLhCK,CAAWtB,EAAUuB,QAASzE,EAAKyE,QAASxE,EAAO,CAAC,sCAAD,OACXA,EAAM0E,WADK,qDAEX1E,EAAM2E,WAFK,qDAGX3E,EAAM4E,WAHK,SAIhD/E,EAAMK,EAAgBC,EAAaqE,WAjCtB1E,EAmCHmD,EAAUuB,SAjCpBjF,MAAQ,IACfO,EAAOM,OAAS,MAkCb,CAACJ,EAAOqD,IAGT,kBAACyB,EAAA,EAAD,CAAK1E,OAAQ,GACT,4BAAQ2E,IAAK9B,EAAW/D,UAAWH,EAAQO,OAC3C,4BAAQyF,IAAKhF,EAAMiF,MAAO,CAACvF,QAAS,YCrP1BxB,YAAW,SAAAC,GAAK,MAAK,CACrCoB,KAAM,CACJC,MAAO,OACPC,OAAQ,WACRC,QAAS,YAmSb,ICzSMzB,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoI,MAAO,CACL/G,MAAO,OACPa,OAAQ,OACR5B,aAAc,UASL+H,EAAO,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMtH,EAAe,EAAfA,UAC1B,OACE,6BACE,uBAAGA,UAAS,aAASsH,GAAQ,eAAjB,YAAoCtH,GAAa,QAMtDiF,EAAQ,SAAC,GAAyB,IAAxBsC,EAAuB,EAAvBA,OAAQvH,EAAe,EAAfA,UACvBH,EAAUf,IAChB,OACE,yBAAK0I,IAAI,GAAGxC,IAAKuC,EAAQvH,UAAWA,GAAaH,EAAQuH,SCnBvDtI,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCyI,WAAY,CACVC,WAAY,OAEdC,WAAY,CACVC,SAAU,UAIDC,EAAY,SAAC,GAA2B,IAA1B/G,EAAyB,EAAzBA,MAAOG,EAAkB,EAAlBA,aAC1BpB,EAAUf,IAShB,OAPAuF,oBAAU,WACY,MAAhBpD,IACFA,EAAaqE,QAAQjF,MAAQ,IAC7BY,EAAaqE,QAAQpE,OAAS,MAE/B,CAACD,IAGF,kBAAC6G,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACjI,EAAA,EAAD,CAAYkI,MAAM,SAASjI,QAAQ,MAAnC,UACA,4BAAQ0F,IAAK5E,IACb,kBAAC6G,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACM,QAAQ,SAASrI,UAAWH,EAAQ4H,WAAYa,QAAS,GAC5E,kBAACR,EAAA,EAAD,CAAME,MAAI,GACR,kBAACO,EAAA,EAAD,CAASC,MAAM,WAAWC,aAAW,YACnC,kBAACC,EAAA,EAAD,CACEvI,QAAQ,WACRwI,KAAK,QACLC,KAAM,OACNC,SAAQ,UAAK/H,EAAMqC,KAAX,SACR,kBAAC,EAAD,CAAMnD,UAAWH,EAAQ8H,WAAYL,KAAM,6B,eC3ClD3B,EAAS,CAClB,CAAEmD,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,SAAUC,MAAO,SAC1B,CAAED,MAAO,YAAaC,MAAO,gBAC7B,CAAED,MAAO,UAAWC,MAAO,cAC3B,CAAED,MAAO,aAAcC,MAAO,iBAC9B,CAAED,MAAO,aAAcC,MAAO,iBAC9B,CAAED,MAAO,aAAcC,MAAO,gBAC9B,CAAED,MAAO,WAAYC,MAAO,eAC5B,CAAED,MAAO,cAAeC,MAAO,kBAC/B,CAAED,MAAO,cAAeC,MAAO,kBAC/B,CAAED,MAAO,cAAeC,MAAO,iBAC/B,CAAED,MAAO,YAAaC,MAAO,gBAC7B,CAAED,MAAO,YAAaC,MAAO,gBAC7B,CAAED,MAAO,YAAaC,MAAO,eAC7B,CAAED,MAAO,eAAgBC,MAAO,mBAChC,CAAED,MAAO,eAAgBC,MAAO,kBAChC,CAAED,MAAO,eAAgBC,MAAO,kBAChC,CAAED,MAAO,eAAgBC,MAAO,sBAChC,CAAED,MAAO,kBAAmBC,MAAO,yBACnC,CAAED,MAAO,kBAAmBC,MAAO,yBACnC,CAAED,MAAO,kBAAmBC,MAAO,wBACnC,CAAED,MAAO,gBAAiBC,MAAO,uBACjC,CAAED,MAAO,gBAAiBC,MAAO,uBACjC,CAAED,MAAO,gBAAiBC,MAAO,sBACjC,CAAED,MAAO,mBAAoBC,MAAO,0BACpC,CAAED,MAAO,mBAAoBC,MAAO,yBACpC,CAAED,MAAO,mBAAoBC,MAAO,yBACpC,CAAED,MAAO,iBAAkBC,MAAO,wBAClC,CAAED,MAAO,iBAAkBC,MAAO,wBAClC,CAAED,MAAO,iBAAkBC,MAAO,uBAClC,CAAED,MAAO,oBAAqBC,MAAO,2BACrC,CAAED,MAAO,oBAAqBC,MAAO,0BACrC,CAAED,MAAO,oBAAqBC,MAAO,0BACrC,CAAED,MAAO,kBAAmBC,MAAO,yBACnC,CAAED,MAAO,kBAAmBC,MAAO,wBACnC,CAAED,MAAO,kBAAmBC,MAAO,wBACnC,CAAED,MAAO,qBAAsBC,MAAO,2BACtC,CAAED,MAAO,MAAOC,MAAO,QAGdtI,EAAW,CACtB,SACA,OACA,aACA,OACA,YACA,SACA,UAGWuI,EAAQ,CACnB,WACA,WACA,YACA,OACA,UACA,UACA,UACA,YACA,WAGWC,EAAc,CACzB,SACA,QACA,WACA,WACA,UACA,YACA,QACA,SACA,UACA,gBACA,gBACA,iBACA,iBACA,cACA,cACA,UACA,YACA,cACA,MACA,UACA,eACA,WACA,cACA,gBACA,QACA,aACA,UACA,YACA,SACA,aACA,gBACA,kBACA,UACA,SACA,aACA,eACA,eACA,cACA,WACA,aACA,WACA,aACA,aACA,eACA,eACA,OACA,aACA,eACA,cACA,YACA,cACA,gBACA,kBACA,UACA,YACA,YACA,SACA,wBACA,cACA,OACA,OACA,UACA,YACA,aACA,YACA,YACA,WACA,YACA,aACA,SACA,SACA,aACA,YACA,aACA,eACA,YACA,cACA,aACA,eACA,UACA,cACA,SACA,SACA,aACA,OACA,YACA,cACA,SACA,WACA,UACA,WACA,SACA,aACA,eACA,YACA,YACA,OACA,YACA,aACA,eACA,WACA,SACA,cACA,YACA,eACA,YACA,aACA,aACA,YACA,cACA,aACA,YACA,eACA,iBACA,WACA,aACA,WACA,cACA,gBACA,SACA,SACA,cACA,gBACA,aACA,eACA,WACA,aACA,aACA,cACA,cACA,aACA,eACA,aACA,UACA,UACA,YACA,cACA,YACA,cACA,aACA,eACA,eACA,aACA,YACA,cACA,YACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,aACA,aACA,aACA,UACA,WACA,aACA,aACA,YACA,YACA,cACA,YACA,cACA,SACA,WACA,cACA,aACA,eACA,cACA,YACA,SACA,WACA,aACA,eACA,WACA,YACA,OACA,SACA,cACA,gBACA,aACA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","file":"static/js/main.3d84abdd.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\" \r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n  };\r\n });\r\n\r\nexport const NavBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar color=\"primary\" className={classes.appbar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography className={classes.appbarText} variant=\"h4\" color=\"inherit\">\r\n          Gems of War Troop Creator\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport WebFontLoader from \"webfontloader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    width: 'auto',\r\n    margin: '0px auto',\r\n    display: 'table'\r\n  }\r\n}));\r\n\r\nconst core_sources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/attack.png\", // 2 - Attack Skill\r\n  \"./assets/graphics/troopcard/armor.png\", // 3 - Armor Skil\r\n  \"./assets/graphics/troopcard/life.png\", // 4 - Life Skill\r\n  \"./assets/graphics/troopcard/trait_flag.png\", // 5 - Trait Flag\r\n  \"./assets/graphics/troopcard/ascension.png\", // 6 - Rarity Pip without Spikes\r\n  \"./assets/graphics/troopcard/ascension_spike.png\", // 7 - Rarity Pip with Spikes\r\n  \"./assets/graphics/troopcard/shading_horizontal.png\", // 8 - Horizontal Gradient\r\n  \"./assets/graphics/troopcard/shading_vertical.png\", // 9 - Vertical Gradient\r\n]\r\n\r\nconst rarities = {\r\n  \"Common\":     { color: \"#FEFEFE\", pips: 1 },\r\n  \"Rare\":       { color: \"#54A721\", pips: 2 },\r\n  \"Ultra-Rare\": { color: \"#1D71FF\", pips: 3 },\r\n  \"Epic\":       { color: \"#9635E7\", pips: 4 },\r\n  \"Legendary\":  { color: \"#F3A120\", pips: 5 },\r\n  \"Mythic\":     { color: \"#13E3F6\", pips: 6 },\r\n  \"Doomed\":     { color: \"#B90000\", pips: 6 },\r\n}\r\n\r\n// Ensure all images are loaded before rendering the canvas itself.\r\nfunction loadImages(canvas, temp, troop, troop_sources, callback, setDownloadUrl, canvasResult) {\r\n  var images = {};\r\n  var loadedImages = 0;\r\n  var countImages = core_sources.length + troop_sources.length;\r\n  for (var src in core_sources) {\r\n      images[src] = new Image();\r\n      images[src].onload = function() {\r\n        if (++loadedImages >= countImages) {\r\n          callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n        }\r\n      };\r\n      images[src].src = core_sources[src];\r\n  }\r\n  for (src in troop_sources) {\r\n    var index = parseInt(src) + core_sources.length;\r\n    images[index] = new Image();\r\n    images[index].onload = function() {\r\n      if (++loadedImages >= countImages) {\r\n        callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n      }\r\n    };\r\n    images[index].src = troop_sources[src];\r\n}\r\n};\r\n\r\n// Render the canvas itself.\r\nfunction draw(canvas, temp, troop, images, setDownloadUrl, canvasResult) {\r\n  // Set the canvas size.\r\n  canvas.width = 491;\r\n  canvas.height = 746;\r\n  var ctx = canvas.getContext('2d');\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  var ctemp = temp.getContext('2d');\r\n\r\n  const rarity_color = rarities[troop.rarity].color;\r\n  const rarity_pips = rarities[troop.rarity].pips;\r\n\r\n  // TroopImage\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  ctx.drawImage(images[10], 30, 37, 460, 652);\r\n  ctx.restore();\r\n\r\n  // TopGradient, behind the ascension pips\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  // Set transparency\r\n  ctx.globalAlpha = 0.8235\r\n  ctx.drawImage(images[9], 30, 37, 460, 107);\r\n  ctx.restore();\r\n\r\n  // LevelGradient, behind the troop level\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  // Set transparency\r\n  ctx.globalAlpha = 0.7843\r\n  // Flip horizontally\r\n  ctx.translate(460, 0);\r\n  ctx.scale(-1, 1);\r\n  ctx.drawImage(images[8], -30, 45, 195, 107);\r\n  ctx.restore();\r\n  \r\n  // CardTop and CardBottom\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 659, 460, 50);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 30, 30, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // LevelLabel\r\n  ctx.font = '500 40px \"Raleway\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'right';\r\n  ctx.fillText(\"Level\", canvas.width - 8, 56 + 30);\r\n\r\n  // LevelValue\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  // Same fillStyle and textAlign\r\n  ctx.fillText(troop.level, canvas.width - 8, 108 + 30);\r\n\r\n  // ManaColor\r\n  ctx.drawImage(images[15], 0, 0, 100, 100);\r\n\r\n  // ManaCost\r\n  ctx.save();\r\n  ctx.font = '600 60px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'center';\r\n  // 2px Black shadow\r\n  ctx.shadowOffsetX = 2;\r\n  ctx.shadowOffsetY = 2;\r\n  ctx.shadowColor = '#000';\r\n  ctx.fillText(troop.cost, 50, 70);\r\n  ctx.restore();\r\n\r\n  // Ascension Pips\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  for (const i of Array(rarity_pips).keys()) {\r\n    ctemp.drawImage(images[7], 105 + 30 * i, 60, 30, 30);\r\n  }\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Unascended Pips\r\n  // To color gray, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  for (const i of Array(6 - rarity_pips).keys()) {\r\n    ctemp.drawImage(images[6], 255 - 30 * i, 60, 30, 30);\r\n  }\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = \"#AFAFAF\";\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Skill Background\r\n  ctx.fillStyle = \"#000000B2\";\r\n  ctx.fillRect(30, 618, 460, 71);\r\n\r\n  // Attack Icon\r\n  ctx.drawImage(images[2], 49, 630, 50, 50);\r\n  // Armor Icon\r\n  ctx.drawImage(images[3], 213, 630, 50, 50);\r\n  // Life Icon\r\n  ctx.drawImage(images[4], 368, 630, 50, 50);\r\n\r\n  ctx.font = '700 40px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'left';\r\n  // Attack Value\r\n  ctx.fillText(troop.attack, 104, 667);\r\n  // Armor Value\r\n  ctx.fillText(troop.armor, 268, 667);\r\n  // Life Value\r\n  ctx.fillText(troop.life, 423, 667);\r\n\r\n  // Troop Name\r\n  ctx.font = '500 57px \"Raleway\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'left';\r\n  ctx.fillText(troop.name, 50, 573);\r\n\r\n  // Troop Kingdom\r\n  ctx.font = '600 30px \"Open Sans\"';\r\n  ctx.fillStyle = \"#CCCCCCFF\";\r\n  ctx.fillText(troop.kingdom, 50, 608);\r\n\r\n  // Type\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.textAlign = 'center';\r\n  const type = troop.type2 !== \"\" ? `${troop.type1} / ${troop.type2}` : troop.type1;\r\n  const txtSize = ctx.measureText(type).width;\r\n  ctx.fillText(type, 260, 722);\r\n\r\n  // Role Icons\r\n  // To color black, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  const leftRoleX = 210 - (txtSize / 2);\r\n  const rightRoleX = 266 + (txtSize / 2);\r\n  ctemp.drawImage(images[11], leftRoleX, 692, 44, 44);\r\n  ctemp.drawImage(images[11], rightRoleX, 692, 44, 44);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = \"#000000\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // Trait Flags\r\n  // To color black/transparent, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[5], 30, 238, 120, 60);\r\n  ctemp.drawImage(images[5], 30, 303, 120, 60);\r\n  ctemp.drawImage(images[5], 30, 368, 120, 60);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = \"#000000\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 0.706;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon1\r\n  // To color Epic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[12], 45, 243, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Epic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 1;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon2\r\n  // To color Legendary, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[13], 45, 313, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Legendary'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon3\r\n  // To color Mythic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[14], 45, 373, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Mythic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // Add the troop to the results.\r\n  const cresult = canvasResult.getContext('2d');\r\n  cresult.clearRect(460 + 5, 0, ctx.width, ctx.height);\r\n  cresult.drawImage(canvas, 460 + 5, 0, ctx.width, ctx.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n}\r\n\r\nconst drawInactive = (canvas) => {\r\n  // Set the canvas size.\r\n  canvas.width = 490;\r\n  canvas.height = 746;\r\n}\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardTroop = ({troop, canvasResult, setDownloadUrl}) => {\r\n  const classes = useStyles();\r\n\r\n  const troopCard = React.useRef(null);\r\n  const temp = React.useRef(null);\r\n\r\n  const [isFontReady, setFontReady] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      google: {\r\n        families: [ 'Open Sans', 'Roboto', 'Raleway'],\r\n      },\r\n      fontactive: () => { setFontReady(true) },\r\n    })\r\n  }, []);\r\n\r\n  // Perform when troop changes.\r\n  useEffect(() => {\r\n    // Draw the canvas.\r\n    if (isFontReady) {\r\n      loadImages(troopCard.current, temp.current, troop, [\r\n        `./assets/graphics/troopcard/infernus.png`, // 10 - Troop Image\r\n        `./assets/graphics/troopcard/roles/${troop.role}.png`, // 11 - Role Icon\r\n        `./assets/graphics/troopcard/traits/${troop.trait1code}.png`, // 12 - Trait Icon 1\r\n        `./assets/graphics/troopcard/traits/${troop.trait2code}.png`, // 13 - Trait Icon 2\r\n        `./assets/graphics/troopcard/traits/${troop.trait3code}.png`, // 14 - Trait Icon 3\r\n        `./assets/graphics/troopcard/colors/${troop.colors}.png`, // 15 - Mana Colors\r\n      ], draw, setDownloadUrl, canvasResult.current);\r\n    } else {\r\n      drawInactive(troopCard.current);\r\n    }\r\n  }, [troop, isFontReady]);\r\n\r\n  return (\r\n    <Box height={1}>\r\n        <canvas ref={troopCard} className={classes.card} />\r\n        <canvas ref={temp} style={{display: 'none'}} />\r\n    </Box>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport WebFontLoader from \"webfontloader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    width: 'auto',\r\n    margin: '0px auto',\r\n    display: 'table'\r\n  }\r\n}));\r\n\r\nconst core_sources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/divider.png\", // 2 - TraitDivider\r\n  './assets/graphics/troopcard/ascension.png', // 3 - Trait Pip\r\n  './assets/graphics/troopcard/traitbg.png', // 4 - Trait background\r\n]\r\n\r\nconst rarities = {\r\n  \"Common\":     { color: \"#FEFEFE\", pips: 1 },\r\n  \"Rare\":       { color: \"#54A721\", pips: 2 },\r\n  \"Ultra-Rare\": { color: \"#1D71FF\", pips: 3 },\r\n  \"Epic\":       { color: \"#9635E7\", pips: 4 },\r\n  \"Legendary\":  { color: \"#F3A120\", pips: 5 },\r\n  \"Mythic\":     { color: \"#13E3F6\", pips: 6 },\r\n  \"Doomed\":     { color: \"#B90000\", pips: 6 },\r\n}\r\n\r\n// Ensure all images are loaded before rendering the canvas itself.\r\nfunction loadImages(canvas, temp, troop, troop_sources, callback, setDownloadUrl, canvasResult) {\r\n  var images = {};\r\n  var loadedImages = 0;\r\n  var countImages = core_sources.length + troop_sources.length;\r\n  for (var src in core_sources) {\r\n      images[src] = new Image();\r\n      images[src].onload = function() {\r\n        if (++loadedImages >= countImages) {\r\n          callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n        }\r\n      };\r\n      images[src].src = core_sources[src];\r\n  }\r\n  for (src in troop_sources) {\r\n    var index = parseInt(src) + core_sources.length;\r\n    images[index] = new Image();\r\n    images[index].onload = function() {\r\n      if (++loadedImages >= countImages) {\r\n        callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n      }\r\n    };\r\n    images[index].src = troop_sources[src];\r\n}\r\n};\r\n\r\nfunction writeLines(context, x, y, maxWidth, lineHeight, text) {\r\n  var words = text.split(\" \");\r\n  var lines = [];\r\n  var currentLine = words[0];\r\n\r\n  // Build an array of lines, starting a new line if the current one is too long.\r\n  for (var i = 1; i < words.length; i++) {\r\n    var word = words[i];\r\n    var width = context.measureText(currentLine + \" \" + word).width;\r\n    if (width < maxWidth) {\r\n      currentLine += \" \" + word;\r\n    } else {\r\n      lines.push(currentLine);\r\n      currentLine = word;\r\n    }\r\n  }\r\n  // Finish up.\r\n  lines.push(currentLine);\r\n\r\n  const newY = y - (lines.length * lineHeight / 2);\r\n\r\n  for (var i = 0; i < lines.length; i++) {\r\n    context.fillText(lines[i], x, newY + lineHeight * i);\r\n  }\r\n  \r\n  \r\n}\r\n\r\n// Render the canvas itself.\r\nfunction draw(canvas, temp, troop, images, setDownloadUrl, canvasResult) {\r\n  // Set the canvas size.\r\n  canvas.width = 460;\r\n  canvas.height = 727;\r\n  var ctx = canvas.getContext('2d');\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  var ctemp = temp.getContext('2d');\r\n\r\n  const rarity_color = rarities[troop.rarity].color;\r\n  \r\n  // CardTop and CardBottom, TraitDivider1, 2, and 3\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 693, 460, 34);\r\n  // TraitDivider1\r\n  ctemp.drawImage(images[2], 0, 281, 460, 14);\r\n  // TraitDivider2\r\n  ctemp.drawImage(images[2], 0, 487, 460, 14);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Name Plate\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.fillRect(0, 16, 460, 73);\r\n\r\n  // \"Traits\" Label\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'center';\r\n  ctx.fillText(\"Traits\", 215, 66);\r\n\r\n  // TraitCard1\r\n  ctx.drawImage(images[4], 0, 89, 460, 192);\r\n  // TraitCard2\r\n  ctx.drawImage(images[4], 0, 295, 460, 192);\r\n  // TraitCard3\r\n  ctx.drawImage(images[4], 0, 501, 460, 192);\r\n\r\n  // TraitIcon1, TraitPip1\r\n  // To color Epic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 104, 36, 36);\r\n  ctemp.drawImage(images[5], 404, 104, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Epic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 1;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon2, TraitPip2\r\n  // To color Legendary, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 310, 36, 36);\r\n  ctemp.drawImage(images[6], 404, 310, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Legendary'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitIcon3, TraitPip3\r\n  // To color Mythic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 516, 36, 36);\r\n  ctemp.drawImage(images[7], 404, 516, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Mythic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitName1\r\n  ctx.font = '600 32px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'left';\r\n  ctx.fillText(troop.trait1name, 60, 104 + 30);\r\n\r\n  // TraitName2\r\n  ctx.fillText(troop.trait2name, 60, 310 + 30);\r\n\r\n  // TraitName3\r\n  ctx.fillText(troop.trait3name, 60, 516 + 30);\r\n\r\n  // TraitDesc1\r\n  ctx.font = '600 32px \"Open Sans\"';\r\n  ctx.fillStyle = \"#646464\";\r\n  ctx.textAlign = 'center';\r\n  writeLines(ctx, 230, 246, 400, 32, troop.trait1desc);\r\n\r\n  // TraitDesc2\r\n  writeLines(ctx, 230, 452, 400, 32, troop.trait2desc);\r\n\r\n  // TraitDesc3\r\n  writeLines(ctx, 230, 658, 400, 32, troop.trait3desc);\r\n\r\n  // Add the traits to the results.\r\n  const cresult = canvasResult.getContext('2d');\r\n  cresult.clearRect(460 + 5 + 490, 0, ctx.width, ctx.height);\r\n  cresult.drawImage(canvas, 460 + 5 + 490, 0, ctx.width, ctx.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n}\r\n\r\nconst drawInactive = (canvas) => {\r\n  // Set the canvas size.\r\n  canvas.width = 491;\r\n  canvas.height = 746;\r\n}\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardTraits = ({troop, canvasResult, setDownloadUrl}) => {\r\n  const classes = useStyles();\r\n\r\n  const troopCard = React.useRef(null);\r\n  const temp = React.useRef(null);\r\n\r\n  const [isFontReady, setFontReady] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      google: {\r\n        families: [ 'Open Sans', 'Roboto', 'Raleway'],\r\n      },\r\n      fontactive: () => { setFontReady(true) },\r\n    })\r\n  }, []);\r\n\r\n  // Perform when troop changes.\r\n  useEffect(() => {\r\n    // Draw the canvas.\r\n    if (isFontReady) {\r\n      loadImages(troopCard.current, temp.current, troop, [\r\n        `./assets/graphics/troopcard/traits/${troop.trait1code}.png`, // 5 - Trait Icon 1\r\n        `./assets/graphics/troopcard/traits/${troop.trait2code}.png`, // 6 - Trait Icon 2\r\n        `./assets/graphics/troopcard/traits/${troop.trait3code}.png`, // 7 - Trait Icon 3\r\n      ], draw, setDownloadUrl, canvasResult.current);\r\n    } else {\r\n      drawInactive(troopCard.current);\r\n    }\r\n  }, [troop, isFontReady]);\r\n\r\n  return (\r\n    <Box height={1}>\r\n        <canvas ref={troopCard} className={classes.card} />\r\n        <canvas ref={temp} style={{display: 'none'}} />\r\n    </Box>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport WebFontLoader from \"webfontloader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    width: 'auto',\r\n    margin: '0px auto',\r\n    display: 'table'\r\n  }\r\n}));\r\n\r\nconst core_sources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/attack.png\", // 2 - Attack Skill\r\n  \"./assets/graphics/troopcard/armor.png\", // 3 - Armor Skil\r\n  \"./assets/graphics/troopcard/life.png\", // 4 - Life Skill\r\n  \"./assets/graphics/troopcard/trait_flag.png\", // 5 - Trait Flag\r\n  \"./assets/graphics/troopcard/ascension.png\", // 6 - Rarity Pip without Spikes\r\n  \"./assets/graphics/troopcard/ascension_spike.png\", // 7 - Rarity Pip with Spikes\r\n  \"./assets/graphics/troopcard/shading_horizontal.png\", // 8 - Horizontal Gradient\r\n  \"./assets/graphics/troopcard/shading_vertical.png\", // 9 - Vertical Gradient\r\n]\r\n\r\nconst rarities = {\r\n  \"Common\":     { color: \"#FEFEFE\", pips: 1 },\r\n  \"Rare\":       { color: \"#54A721\", pips: 2 },\r\n  \"Ultra-Rare\": { color: \"#1D71FF\", pips: 3 },\r\n  \"Epic\":       { color: \"#9635E7\", pips: 4 },\r\n  \"Legendary\":  { color: \"#F3A120\", pips: 5 },\r\n  \"Mythic\":     { color: \"#13E3F6\", pips: 6 },\r\n  \"Doomed\":     { color: \"#B90000\", pips: 6 },\r\n}\r\n\r\n// Ensure all images are loaded before rendering the canvas itself.\r\nfunction loadImages(canvas, temp, troop, troop_sources, callback, setDownloadUrl, canvasResult) {\r\n  var images = {};\r\n  var loadedImages = 0;\r\n  var countImages = core_sources.length + troop_sources.length;\r\n  for (var src in core_sources) {\r\n      images[src] = new Image();\r\n      images[src].onload = function() {\r\n        if (++loadedImages >= countImages) {\r\n          callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n        }\r\n      };\r\n      images[src].src = core_sources[src];\r\n  }\r\n  for (src in troop_sources) {\r\n    var index = parseInt(src) + core_sources.length;\r\n    images[index] = new Image();\r\n    images[index].onload = function() {\r\n      if (++loadedImages >= countImages) {\r\n        callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n      }\r\n    };\r\n    images[index].src = troop_sources[src];\r\n}\r\n};\r\n\r\n// Render the canvas itself.\r\nfunction draw(canvas, temp, troop, images, setDownloadUrl, canvasResult) {\r\n  // Set the canvas size.\r\n  canvas.width = 491;\r\n  canvas.height = 746;\r\n  var ctx = canvas.getContext('2d');\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  var ctemp = temp.getContext('2d');\r\n\r\n  const rarity_color = rarities[troop.rarity].color;\r\n  const rarity_pips = rarities[troop.rarity].pips;\r\n\r\n  // TroopImage\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  ctx.drawImage(images[10], 30, 37, 460, 652);\r\n  ctx.restore();\r\n\r\n  // TopGradient, behind the ascension pips\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  // Set transparency\r\n  ctx.globalAlpha = 0.8235\r\n  ctx.drawImage(images[9], 30, 37, 460, 107);\r\n  ctx.restore();\r\n\r\n  // LevelGradient, behind the troop level\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  // Set transparency\r\n  ctx.globalAlpha = 0.7843\r\n  // Flip horizontally\r\n  ctx.translate(460, 0);\r\n  ctx.scale(-1, 1);\r\n  ctx.drawImage(images[8], -30, 45, 195, 107);\r\n  ctx.restore();\r\n  \r\n  // CardTop and CardBottom\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 659, 460, 50);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 30, 30, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // LevelLabel\r\n  ctx.font = '500 40px \"Raleway\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'right';\r\n  ctx.fillText(\"Level\", canvas.width - 8, 56 + 30);\r\n\r\n  // LevelValue\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  // Same fillStyle and textAlign\r\n  ctx.fillText(troop.level, canvas.width - 8, 108 + 30);\r\n\r\n  // ManaColor\r\n  ctx.drawImage(images[15], 0, 0, 100, 100);\r\n\r\n  // ManaCost\r\n  ctx.save();\r\n  ctx.font = '600 60px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'center';\r\n  // 2px Black shadow\r\n  ctx.shadowOffsetX = 2;\r\n  ctx.shadowOffsetY = 2;\r\n  ctx.shadowColor = '#000';\r\n  ctx.fillText(troop.cost, 50, 70);\r\n  ctx.restore();\r\n\r\n  // Ascension Pips\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  for (const i of Array(rarity_pips).keys()) {\r\n    ctemp.drawImage(images[7], 105 + 30 * i, 60, 30, 30);\r\n  }\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarity_color;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Unascended Pips\r\n  // To color gray, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  for (const i of Array(6 - rarity_pips).keys()) {\r\n    ctemp.drawImage(images[6], 255 - 30 * i, 60, 30, 30);\r\n  }\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = \"#AFAFAF\";\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Skill Background\r\n  ctx.fillStyle = \"#000000B2\";\r\n  ctx.fillRect(30, 618, 460, 71);\r\n\r\n  // Attack Icon\r\n  ctx.drawImage(images[2], 49, 630, 50, 50);\r\n  // Armor Icon\r\n  ctx.drawImage(images[3], 213, 630, 50, 50);\r\n  // Life Icon\r\n  ctx.drawImage(images[4], 368, 630, 50, 50);\r\n\r\n  ctx.font = '700 40px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'left';\r\n  // Attack Value\r\n  ctx.fillText(troop.attack, 104, 667);\r\n  // Armor Value\r\n  ctx.fillText(troop.armor, 268, 667);\r\n  // Life Value\r\n  ctx.fillText(troop.life, 423, 667);\r\n\r\n  // Troop Name\r\n  ctx.font = '500 57px \"Raleway\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = 'left';\r\n  ctx.fillText(troop.name, 50, 573);\r\n\r\n  // Troop Kingdom\r\n  ctx.font = '600 30px \"Open Sans\"';\r\n  ctx.fillStyle = \"#CCCCCCFF\";\r\n  ctx.fillText(troop.kingdom, 50, 608);\r\n\r\n  // Type\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.textAlign = 'center';\r\n  const type = troop.type2 !== \"\" ? `${troop.type1} / ${troop.type2}` : troop.type1;\r\n  const txtSize = ctx.measureText(type).width;\r\n  ctx.fillText(type, 260, 722);\r\n\r\n  // Role Icons\r\n  // To color black, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  const leftRoleX = 210 - (txtSize / 2);\r\n  const rightRoleX = 266 + (txtSize / 2);\r\n  ctemp.drawImage(images[11], leftRoleX, 692, 44, 44);\r\n  ctemp.drawImage(images[11], rightRoleX, 692, 44, 44);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = \"#000000\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // Trait Flags\r\n  // To color black/transparent, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[5], 30, 238, 120, 60);\r\n  ctemp.drawImage(images[5], 30, 303, 120, 60);\r\n  ctemp.drawImage(images[5], 30, 368, 120, 60);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = \"#000000\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 0.706;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitFlag1\r\n  // To color Epic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[12], 45, 243, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Epic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 1;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitFlag2\r\n  // To color Legendary, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[13], 45, 313, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Legendary'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // TraitFlag3\r\n  // To color Mythic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[14], 45, 373, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities['Mythic'].color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height)\r\n  ctemp.restore();\r\n\r\n  // Add the spell to the results.\r\n  const cresult = canvasResult.getContext('2d');\r\n  cresult.clearRect(0, 0, ctx.width, ctx.height);\r\n  cresult.drawImage(canvas, 0, 0, ctx.width, ctx.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n}\r\n\r\nconst drawInactive = (canvas) => {\r\n  // Set the canvas size.\r\n  canvas.width = 491;\r\n  canvas.height = 746;\r\n}\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardSpell = ({troop, canvasResult, setDownloadUrl}) => {\r\n  const classes = useStyles();\r\n\r\n  const troopCard = React.useRef(null);\r\n  const temp = React.useRef(null);\r\n\r\n  const [isFontReady, setFontReady] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      google: {\r\n        families: [ 'Open Sans', 'Roboto', 'Raleway'],\r\n      },\r\n      fontactive: () => { setFontReady(true) },\r\n    })\r\n  }, []);\r\n\r\n  // Perform when troop changes.\r\n  useEffect(() => {\r\n    // Draw the canvas.\r\n    if (isFontReady) {\r\n      loadImages(troopCard.current, temp.current, troop, [\r\n        `./assets/graphics/troopcard/infernus.png`, // 10 - Troop Image\r\n        `./assets/graphics/troopcard/roles/${troop.role}.png`, // 11 - Role Icon\r\n        `./assets/graphics/troopcard/traits/${troop.trait1code}.png`, // 12 - Trait Icon 1\r\n        `./assets/graphics/troopcard/traits/${troop.trait2code}.png`, // 13 - Trait Icon 2\r\n        `./assets/graphics/troopcard/traits/${troop.trait3code}.png`, // 14 - Trait Icon 3\r\n        `./assets/graphics/troopcard/colors/${troop.colors}.png`, // 15 - Mana Colors\r\n      ], draw, setDownloadUrl, canvasResult.current);\r\n    } else {\r\n      drawInactive(troopCard.current);\r\n    }\r\n  }, [troop, isFontReady]);\r\n\r\n  return (\r\n    <Box height={1}>\r\n        <canvas ref={troopCard} className={classes.card} />\r\n        <canvas ref={temp} style={{display: 'none'}} />\r\n    </Box>\r\n  );\r\n}","import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  image: {\r\n    width: 'auto',\r\n    height: '24px',\r\n    paddingRight: '4px'\r\n  }\r\n}));\r\n\r\n/*\r\n  Renders font icons. Great for buttons!\r\n  Powered by Nerd Fonts. Find class names on https://www.nerdfonts.com/cheat-sheet\r\n  Example: <Icon icon=\"nf-mdi-login\" />\r\n */\r\nexport const Icon = ({icon, className}) => {\r\n  return (\r\n    <div>\r\n      <i className={`nf ${(icon || \"nf-fa-amazon\")} ${className || ''}`}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const Image = ({source, className}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <img alt=\"\" src={source} className={className || classes.image}></img>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { Typography, CardContent, Grid, Card, Button, Tooltip} from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { CardTroop } from \"./CardTroop\";\r\nimport { CardTraits } from \"./CardTraits\";\r\nimport { CardSpell } from \"./CardSpell\";\r\nimport { Icon } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonGrid: {\r\n    paddingTop: '6px'\r\n  },\r\n  buttonIcon: {\r\n    fontSize: '2em'\r\n  }\r\n}));\r\n\r\nexport const TabResult = ({troop, canvasResult}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (canvasResult != null) {\r\n      canvasResult.current.width = 490 + 10 + 460;\r\n      canvasResult.current.height = 746;  \r\n    }\r\n  }, [canvasResult]);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h2\">Result</Typography>\r\n            <canvas ref={canvasResult} />\r\n            <Grid item container justify=\"center\" className={classes.buttonGrid} spacing={3}>\r\n              <Grid item>\r\n                <Tooltip title=\"Download\" aria-label=\"download\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"large\"\r\n                    href={\"Test\"}\r\n                    download={`${troop.name}.png`}>\r\n                    <Icon className={classes.buttonIcon} icon={\"nf-mdi-download\"}/>\r\n                  </Button>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","export const colors = [\r\n    { value: 'Blue', label: 'Blue' },\r\n    { value: 'Green', label: 'Green' },\r\n    { value: 'Red', label: 'Red' },\r\n    { value: 'Yellow', label: 'Yellow' },\r\n    { value: 'Purple', label: 'Purple' },\r\n    { value: 'Orange', label: 'Brown' },\r\n    { value: 'BlueGreen', label: 'Blue / Green' },\r\n    { value: 'BlueRed', label: 'Blue / Red' },\r\n    { value: 'BlueYellow', label: 'Blue / Yellow' },\r\n    { value: 'BluePurple', label: 'Blue / Purple' },\r\n    { value: 'BlueOrange', label: 'Blue / Brown' },\r\n    { value: 'GreenRed', label: 'Green / Red' },\r\n    { value: 'GreenYellow', label: 'Green / Yellow' },\r\n    { value: 'GreenPurple', label: 'Green / Purple' },\r\n    { value: 'GreenOrange', label: 'Green / Brown' },\r\n    { value: 'RedYellow', label: 'Red / Yellow' },\r\n    { value: 'RedPurple', label: 'Red / Purple' },\r\n    { value: 'RedOrange', label: 'Red / Brown' },\r\n    { value: 'YellowPurple', label: 'Yellow / Purple' },\r\n    { value: 'YellowOrange', label: 'Yellow / Brown' },\r\n    { value: 'PurpleOrange', label: 'Purple / Brown' },\r\n    { value: 'BlueGreenRed', label: 'Blue / Green / Red' },\r\n    { value: 'BlueGreenYellow', label: 'Blue / Green / Yellow' },\r\n    { value: 'BlueGreenPurple', label: 'Blue / Green / Purple' },\r\n    { value: 'BlueGreenOrange', label: 'Blue / Green / Brown' },\r\n    { value: 'BlueRedYellow', label: 'Blue / Red / Yellow' },\r\n    { value: 'BlueRedPurple', label: 'Blue / Red / Purple' },\r\n    { value: 'BlueRedOrange', label: 'Blue / Red / Brown' },\r\n    { value: 'BlueYellowPurple', label: 'Blue / Yellow / Purple' },\r\n    { value: 'BlueYellowOrange', label: 'Blue / Yellow / Brown' },\r\n    { value: 'BluePurpleOrange', label: 'Blue / Purple / Brown' },\r\n    { value: 'GreenRedYellow', label: 'Green / Red / Yellow' },\r\n    { value: 'GreenRedPurple', label: 'Green / Red / Purple' },\r\n    { value: 'GreenRedOrange', label: 'Green / Red / Brown' },\r\n    { value: 'GreenYellowPurple', label: 'Green / Yellow / Purple' },\r\n    { value: 'GreenYellowOrange', label: 'Green / Yellow / Brown' },\r\n    { value: 'GreenPurpleOrange', label: 'Green / Purple / Brown' },\r\n    { value: 'RedYellowPurple', label: 'Red / Yellow / Purple' },\r\n    { value: 'RedYellowOrange', label: 'Red / Yellow / Brown' },\r\n    { value: 'RedPurpleOrange', label: 'Red / Purple / Brown' },\r\n    { value: 'YellowPurpleOrange', label: 'Yellow / Purple / Brown' },\r\n    { value: 'All', label: 'All' }\r\n];\r\n\r\nexport const rarities = [\r\n  'Common',\r\n  'Rare',\r\n  'Ultra-Rare',\r\n  'Epic',\r\n  'Legendary',\r\n  'Mythic',\r\n  'Doomed',\r\n]\r\n\r\nexport const roles = [\r\n  'Assassin',\r\n  'Defender',\r\n  'Generator',\r\n  'Mage',\r\n  'Striker',\r\n  'Support',\r\n  'Warlock',\r\n  'Warmaster',\r\n  'Warrior'\r\n]\r\n\r\nexport const trait_codes = [\r\n  'aflame',\r\n  'agile',\r\n  'airbrand',\r\n  'airheart',\r\n  'airlink',\r\n  'airspirit',\r\n  'alert',\r\n  'arcane',\r\n  'armored',\r\n  'armorpiercing',\r\n  'aspectofdeath',\r\n  'aspectoffamine',\r\n  'aspectofplague',\r\n  'aspectofwar',\r\n  'assassinate',\r\n  'avenger',\r\n  'beastbond',\r\n  'beastslayer',\r\n  'big',\r\n  'blessed',\r\n  'bloodsucking',\r\n  'bullseye',\r\n  'centaurbond',\r\n  'centaurslayer',\r\n  'chill',\r\n  'chilltouch',\r\n  'clobber',\r\n  'clockwork',\r\n  'cocoon',\r\n  'compassion',\r\n  'constructbond',\r\n  'constructslayer',\r\n  'cunning',\r\n  'cursed',\r\n  'daemonbond',\r\n  'daemonicpact',\r\n  'daemonslayer',\r\n  'darkchannel',\r\n  'darkfall',\r\n  'deathtouch',\r\n  'defender',\r\n  'divineaura',\r\n  'divinebond',\r\n  'divineshield',\r\n  'divineslayer',\r\n  'doom',\r\n  'dragonbond',\r\n  'dragonslayer',\r\n  'dragonvines',\r\n  'dwarfbond',\r\n  'dwarfslayer',\r\n  'elementalbond',\r\n  'elementalslayer',\r\n  'elfbond',\r\n  'elfslayer',\r\n  'empowered',\r\n  'ensoul',\r\n  'exchangeattacktomagic',\r\n  'eyeofkhetar',\r\n  'fall',\r\n  'fast',\r\n  'feybond',\r\n  'feyslayer',\r\n  'fierycloak',\r\n  'firebrand',\r\n  'fireheart',\r\n  'firelink',\r\n  'fireproof',\r\n  'firespirit',\r\n  'flying',\r\n  'frenzy',\r\n  'frozensoul',\r\n  'fullplate',\r\n  'gardswrath',\r\n  'gateguardian',\r\n  'giantbond',\r\n  'giantslayer',\r\n  'goblinbond',\r\n  'goblinslayer',\r\n  'goblord',\r\n  'graniteskin',\r\n  'greedy',\r\n  'grudge',\r\n  'hacknslash',\r\n  'huge',\r\n  'humanbond',\r\n  'humanslayer',\r\n  'hunger',\r\n  'icycloak',\r\n  'immense',\r\n  'immortal',\r\n  'immune',\r\n  'impervious',\r\n  'indigestible',\r\n  'inscribed',\r\n  'insulated',\r\n  'jinx',\r\n  'kingswill',\r\n  'knightbond',\r\n  'knightslayer',\r\n  'knockout',\r\n  'leader',\r\n  'lethaltoxin',\r\n  'lifedrain',\r\n  'lionstrength',\r\n  'magearmor',\r\n  'magicbrand',\r\n  'magicheart',\r\n  'magiclink',\r\n  'magicspirit',\r\n  'manashield',\r\n  'manyheads',\r\n  'marauderbond',\r\n  'marauderslayer',\r\n  'mechbond',\r\n  'mechslayer',\r\n  'merchant',\r\n  'merfolkbond',\r\n  'merfolkslayer',\r\n  'miasma',\r\n  'molten',\r\n  'monsterbond',\r\n  'monsterslayer',\r\n  'mysticbond',\r\n  'mysticslayer',\r\n  'nagabond',\r\n  'nagaslayer',\r\n  'nastyteeth',\r\n  'naturebrand',\r\n  'natureheart',\r\n  'naturelink',\r\n  'naturespirit',\r\n  'necromancy',\r\n  'orcbond',\r\n  'orclord',\r\n  'orcslayer',\r\n  'plaguetouch',\r\n  'pyromania',\r\n  'queensgrace',\r\n  'rakshabond',\r\n  'rakshaslayer',\r\n  'regeneration',\r\n  'reinforced',\r\n  'roguebond',\r\n  'rogueslayer',\r\n  'sacrifice',\r\n  'seedling',\r\n  'shatter',\r\n  'siege',\r\n  'silence',\r\n  'siphon',\r\n  'slippery',\r\n  'snare',\r\n  'soullegion',\r\n  'spikearmor',\r\n  'spiritfire',\r\n  'stalker',\r\n  'stealthy',\r\n  'stonebrand',\r\n  'stoneheart',\r\n  'stonelink',\r\n  'stoneskin',\r\n  'stonespirit',\r\n  'stryxbond',\r\n  'stryxslayer',\r\n  'sturdy',\r\n  'sunshine',\r\n  'suppression',\r\n  'taurosbond',\r\n  'taurosslayer',\r\n  'technomancy',\r\n  'thickhead',\r\n  'thorns',\r\n  'trueshot',\r\n  'undeadbond',\r\n  'undeadslayer',\r\n  'venomous',\r\n  'virulence',\r\n  'ward',\r\n  'warded',\r\n  'wargarebond',\r\n  'wargareslayer',\r\n  'waterbrand',\r\n  'waterheart',\r\n  'waterlink',\r\n  'waterspirit',\r\n  'wildfolkbond',\r\n  'wildfolkslayer',\r\n  'winterveil',\r\n];","import React from 'react'\r\nimport { Typography, CardContent, Grid, Card, TextField, MenuItem, InputAdornment } from '@material-ui/core';\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { colors, roles, rarities } from \"./Values\";\r\nimport { Image } from \"./Icon\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\" \r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    menuColor: {\r\n      width: 400,\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '66%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '50%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    trait: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    }\r\n  };\r\n });\r\n\r\nexport const FormSpell = ({troop, setTroop, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = name => event => {\r\n    setTroop({ ...troop, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Grid xs={12} lg={8} spacing={3} container item direction=\"row\" {...other}>\r\n    </Grid>\r\n  );\r\n};","import React from \"react\";\r\nimport { Typography, CardContent, Grid, Card, Button, Tooltip} from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { CardSpell } from \"./CardSpell\";\r\nimport { Icon } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonGrid: {\r\n    paddingTop: '6px'\r\n  },\r\n  buttonIcon: {\r\n    fontSize: '2em'\r\n  }\r\n}));\r\n\r\nexport const PreviewSpell = ({troop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <Grid item xs={12} lg={4} {...other}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography align=\"center\" variant=\"h2\">Preview</Typography>\r\n          <CardSpell troop={troop} canvasResult={canvasResult} setDownloadUrl={setDownloadUrl} />\r\n          <Grid container justify=\"center\" className={classes.buttonGrid} spacing={3}>\r\n            <Grid item>\r\n              <Tooltip title=\"Download\" aria-label=\"download\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  href={downloadUrl}\r\n                  download={`${troop.name}.png`}>\r\n                  <Icon className={classes.buttonIcon} icon={\"nf-mdi-download\"}/>\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { FormSpell } from \"./FormSpell\";\r\nimport { PreviewSpell } from \"./PreviewSpell\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardGridItem: {\r\n    order: 2,\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    order: 1\r\n  }\r\n}));\r\n\r\nexport const TabSpell = ({troop, setTroop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} direction=\"row\" {...other}>\r\n      <FormSpell\r\n        troop={troop}\r\n        className={classes.formGridItem}\r\n        setTroop={setTroop} />\r\n      <PreviewSpell\r\n        troop={troop}\r\n        canvasResult={canvasResult} \r\n        className={classes.cardGridItem} />\r\n    </Grid>\r\n  )\r\n}","import React from 'react'\r\nimport { Typography, CardContent, Grid, Card, TextField, MenuItem, InputAdornment } from '@material-ui/core';\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { colors, roles, trait_codes, rarities } from \"./Values\";\r\nimport { Image } from \"./Icon\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\" \r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    menuColor: {\r\n      width: 400,\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '66%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '50%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    traitcode: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '80px',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    traitname: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up('md')]: {\r\n        width: `calc(100% - 80px)`,\r\n        padding: '4px'\r\n      }\r\n    }\r\n  };\r\n });\r\n\r\nexport const FormTraits = ({troop, setTroop, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = name => event => {\r\n    setTroop({ ...troop, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Grid xs={12} lg={8} spacing={3} container item direction=\"row\" {...other}>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Trait 1</Typography>\r\n            <TextField\r\n              id=\"form-trait1code\"\r\n              value={troop.trait1code}\r\n              select\r\n              label=\"Trait Icon\"\r\n              onChange={handleChange(\"trait1code\")}\r\n              margin=\"normal\"\r\n              className={classes.traitcode}\r\n              variant=\"outlined\">\r\n              {trait_codes.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  <Image source={`./assets/graphics/troopcard/traits/${code}.png`}/>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n                id=\"form-trait1name\"\r\n                value={troop.trait1name}\r\n                onChange={handleChange('trait1name')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Trait Name\"\r\n                className={classes.traitname}\r\n                variant=\"outlined\" />\r\n            <TextField\r\n                id=\"form-trait1desc\"\r\n                value={troop.trait1desc}\r\n                onChange={handleChange('trait1desc')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                multiline\r\n                label=\"Trait Description\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Trait 2</Typography>\r\n            <TextField\r\n              id=\"form-trait2code\"\r\n              value={troop.trait2code}\r\n              select\r\n              label=\"Trait Icon\"\r\n              onChange={handleChange(\"trait2code\")}\r\n              margin=\"normal\"\r\n              className={classes.traitcode}\r\n              variant=\"outlined\">\r\n              {trait_codes.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  <Image source={`./assets/graphics/troopcard/traits/${code}.png`}/>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n                id=\"form-trait2name\"\r\n                value={troop.trait2name}\r\n                onChange={handleChange('trait2name')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Trait Name\"\r\n                className={classes.traitname}\r\n                variant=\"outlined\" />\r\n            <TextField\r\n                id=\"form-trait2desc\"\r\n                value={troop.trait2desc}\r\n                onChange={handleChange('trait2desc')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                multiline\r\n                label=\"Trait Description\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Trait 3</Typography>\r\n            <TextField\r\n              id=\"form-trait3code\"\r\n              value={troop.trait3code}\r\n              select\r\n              label=\"Trait Icon\"\r\n              onChange={handleChange(\"trait3code\")}\r\n              margin=\"normal\"\r\n              className={classes.traitcode}\r\n              variant=\"outlined\">\r\n              {trait_codes.map(code => (\r\n                <MenuItem key={code} value={code}>\r\n                  <Image source={`./assets/graphics/troopcard/traits/${code}.png`}/>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n                id=\"form-trait3name\"\r\n                value={troop.trait3name}\r\n                onChange={handleChange('trait3name')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Trait Name\"\r\n                className={classes.traitname}\r\n                variant=\"outlined\" />\r\n            <TextField\r\n                id=\"form-trait3desc\"\r\n                value={troop.trait3desc}\r\n                onChange={handleChange('trait3desc')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                multiline\r\n                label=\"Trait Description\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};","import React from \"react\";\r\nimport { Typography, CardContent, Grid, Card, Button, Tooltip} from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { CardTraits } from \"./CardTraits\";\r\nimport { Icon } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonGrid: {\r\n    paddingTop: '6px'\r\n  },\r\n  buttonIcon: {\r\n    fontSize: '2em'\r\n  }\r\n}));\r\n\r\nexport const PreviewTraits = ({troop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <Grid item xs={12} lg={4} {...other}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography align=\"center\" variant=\"h2\">Preview</Typography>\r\n          <CardTraits troop={troop} canvasResult={canvasResult} setDownloadUrl={setDownloadUrl} />\r\n          <Grid container justify=\"center\" className={classes.buttonGrid} spacing={3}>\r\n            <Grid item>\r\n              <Tooltip title=\"Download\" aria-label=\"download\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  href={downloadUrl}\r\n                  download={`${troop.name}.png`}>\r\n                  <Icon className={classes.buttonIcon} icon={\"nf-mdi-download\"}/>\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { FormTraits } from \"./FormTraits\";\r\nimport { PreviewTraits } from \"./PreviewTraits\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardGridItem: {\r\n    order: 2,\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    order: 1\r\n  }\r\n}));\r\n\r\nexport const TabTraits = ({troop, setTroop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} direction=\"row\" {...other}>\r\n      <FormTraits\r\n        troop={troop}\r\n        className={classes.formGridItem}\r\n        setTroop={setTroop} />\r\n      <PreviewTraits\r\n        troop={troop}\r\n        canvasResult={canvasResult} \r\n        className={classes.cardGridItem} />\r\n    </Grid>\r\n  )\r\n}","import React from 'react'\r\nimport { Typography, CardContent, Grid, Card, TextField, MenuItem, InputAdornment } from '@material-ui/core';\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { colors, roles, rarities } from \"./Values\";\r\nimport { Image } from \"./Icon\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\" \r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200,\r\n    },\r\n    menuColor: {\r\n      width: 400,\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '66%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: '50%',\r\n        padding: '4px'\r\n      }\r\n    },\r\n    trait: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        width: '33%',\r\n        padding: '4px'\r\n      }\r\n    }\r\n  };\r\n });\r\n\r\nexport const FormTroop = ({troop, setTroop, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = name => event => {\r\n    setTroop({ ...troop, [name]: event.target.value });\r\n  };\r\n\r\n  const handleNestedChange = name => event => {\r\n    setTroop({ ...troop, [name]: {\r\n      ...troop[name],\r\n      code: event.target.value,\r\n      name: event.target.label\r\n    }});\r\n  };\r\n\r\n  return (\r\n    <Grid xs={12} lg={8} spacing={3} container item direction=\"row\" {...other}>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Name</Typography>\r\n              <TextField\r\n                id=\"form-name\"\r\n                value={troop.name}\r\n                onChange={handleChange('name')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Name\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Kingdom</Typography>\r\n              <TextField\r\n                id=\"form-kingdom\"\r\n                value={troop.kingdom}\r\n                onChange={handleChange('kingdom')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Kingdom\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Rarity</Typography>\r\n              <TextField\r\n                id=\"form-rarity\"\r\n                value={troop.rarity}\r\n                select\r\n                label=\"Rarity\"\r\n                onChange={handleChange('rarity')}\r\n                margin=\"normal\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\">\r\n                {rarities.map(option => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={3} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Level</Typography>\r\n              <TextField\r\n                id=\"form-level\"\r\n                value={troop.level}\r\n                type=\"number\"\r\n                onChange={handleChange('level')}\r\n                margin=\"normal\"\r\n                label=\"Level\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={3} xl={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Role</Typography>\r\n              <TextField\r\n                id=\"form-role\"\r\n                value={troop.role}\r\n                select\r\n                label=\"Role\"\r\n                onChange={handleChange('role')}\r\n                margin=\"normal\"\r\n                style={{width: '100%'}}\r\n                variant=\"outlined\">\r\n                {roles.map(option => (\r\n                  <MenuItem key={option} value={option}>\r\n                    <Image source={`./assets/graphics/troopcard/roles/${option}.png`}/> {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6} xl={5}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Mana Cost</Typography>\r\n              <TextField\r\n                id=\"form-cost\"\r\n                value={troop.cost}\r\n                type=\"number\"\r\n                label=\"Cost\"\r\n                onChange={handleChange('cost')}\r\n                margin=\"normal\"\r\n                className={classes.manaCost}\r\n                variant=\"outlined\" />\r\n              <TextField\r\n                id=\"form-colors\"\r\n                value={troop.colors}\r\n                select\r\n                label=\"Colors\"\r\n                onChange={handleChange('colors')}\r\n                SelectProps={{\r\n                  MenuProps: {\r\n                    className: classes.menuColor,\r\n                  },\r\n                }}\r\n                margin=\"normal\"\r\n                className={classes.manaColors}\r\n                variant=\"outlined\">\r\n                {colors.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    <Image source={`./assets/graphics/troopcard/colors/${option.value}.png`}/> {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Types</Typography>\r\n              <TextField\r\n                id=\"form-type1\"\r\n                value={troop.type1}\r\n                onChange={handleChange('type1')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Type 1\"\r\n                className={classes.typeField}\r\n                variant=\"outlined\" />\r\n              <TextField\r\n                id=\"form-type2\"\r\n                value={troop.type2}\r\n                onChange={handleChange('type2')}\r\n                margin=\"normal\"\r\n                type=\"text\"\r\n                label=\"Type 2 (Optional)\"\r\n                className={classes.typeField}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={5} xl={5}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\">Skills</Typography>\r\n              <TextField\r\n                id=\"form-attack\"\r\n                value={troop.attack}\r\n                type=\"number\"\r\n                label=\"Attack\"\r\n                onChange={handleChange('attack')}\r\n                margin=\"normal\"\r\n                className={classes.skill}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Image source={`./assets/graphics/troopcard/attack.png`}/>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\" />\r\n              <TextField\r\n                id=\"form-armor\"\r\n                value={troop.armor}\r\n                type=\"number\"\r\n                label=\"Armor\"\r\n                onChange={handleChange('armor')}\r\n                margin=\"normal\"\r\n                className={classes.skill}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Image source={`./assets/graphics/troopcard/armor.png`}/>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\" />\r\n              <TextField\r\n                id=\"form-life\"\r\n                value={troop.life}\r\n                type=\"number\"\r\n                label=\"Life\"\r\n                onChange={handleChange('life')}\r\n                margin=\"normal\"\r\n                className={classes.skill}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Image source={`./assets/graphics/troopcard/life.png`}/>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                variant=\"outlined\" />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h4\" gutterBottom>Image</Typography>\r\n              <DropzoneArea\r\n                className={{ backgroundColor: \"#1f1f1f\" }}\r\n                onChange={handleChange('files')} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n    </Grid>\r\n  );\r\n};","import React from \"react\";\r\nimport { Typography, CardContent, Grid, Card, Button, Tooltip} from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { CardTroop } from \"./CardTroop\";\r\nimport { Icon } from './Icon';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonGrid: {\r\n    paddingTop: '6px'\r\n  },\r\n  buttonIcon: {\r\n    fontSize: '2em'\r\n  }\r\n}));\r\n\r\nexport const PreviewTroop = ({troop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <Grid item xs={12} lg={4} {...other}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography align=\"center\" variant=\"h2\">Preview</Typography>\r\n            <CardTroop troop={troop} canvasResult={canvasResult} setDownloadUrl={setDownloadUrl} />\r\n            <Grid container justify=\"center\" className={classes.buttonGrid} spacing={3}>\r\n              <Grid item>\r\n                <Tooltip title=\"Download\" aria-label=\"download\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"large\"\r\n                    href={downloadUrl}\r\n                    download={`${troop.name}.png`}>\r\n                    <Icon className={classes.buttonIcon} icon={\"nf-mdi-download\"}/>\r\n                  </Button>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n    </Grid>\r\n  )\r\n}","import React from \"react\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { FormTroop } from \"./FormTroop\";\r\nimport { PreviewTroop } from \"./PreviewTroop\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardGridItem: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      order: 1,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 2,\r\n    },\r\n    order: 2,\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      order: 2,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      order: 1,\r\n    }\r\n  }\r\n}));\r\n\r\nexport const TabTroop = ({troop, setTroop, canvasResult, ...other}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} direction=\"row\" {...other}>\r\n      <FormTroop\r\n        troop={troop}\r\n        className={classes.formGridItem}\r\n        setTroop={setTroop} />\r\n      <PreviewTroop\r\n        troop={troop}\r\n        canvasResult={canvasResult} \r\n        className={classes.cardGridItem} />\r\n    </Grid>\r\n  )\r\n}","import React from \"react\";\r\nimport { CssBaseline, Container, Toolbar, Tabs, Tab, Typography, Box } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport { NavBar } from \"./NavBar\";\r\nimport { TabResult } from \"./TabResult\";\r\nimport { TabSpell } from \"./TabSpell\";\r\nimport { TabTraits } from \"./TabTraits\";\r\nimport { TabTroop } from \"./TabTroop\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    width: `calc(100vw - 240px)`,\r\n    maxHeight: `calc(100vh - 64px)`,\r\n  },\r\n  grid: {\r\n    display: 'flex'\r\n  },\r\n  tabView: {\r\n  }\r\n}));\r\n\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      <Box p={3}>{children}</Box>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const App = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [troop, setTroop] = React.useState({\r\n    name: \"Infernus\",\r\n    kingdom: \"Broken Spire\",\r\n    rarity: \"Mythic\",\r\n    level: 20,\r\n\r\n    role: \"Mage\",\r\n    cost: 24,\r\n    colors: \"RedYellowPurple\",\r\n    attack: 40,\r\n    armor: 40,\r\n    life: 40,\r\n\r\n    type1: \"Divine\",\r\n    type2: \"Elemental\",\r\n\r\n    trait1name: 'Elemental Shield',\r\n    trait1desc: 'Allied Elementals gain 2 Armor.',\r\n    trait1code: 'elementalbond',\r\n    trait2name: 'Fiery Death',\r\n    trait2desc: 'Summon a Firestorm when an enemy dies.',\r\n    trait2code: 'firebrand',\r\n    trait3name: 'Conflagration',\r\n    trait3desc: 'Burn all enemies on 4 or 5 Gem matches.',\r\n    trait3code: 'molten',\r\n\r\n    file_base: \"Troop_K00_10\",\r\n    files: []\r\n  });\r\n\r\n  const [currentTab, setCurrentTab] = React.useState(2);\r\n\r\n  const handleTabEvent = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  }\r\n\r\n  const canvasResult = React.createRef();\r\n\r\n  return (\r\n    <CssBaseline>\r\n      <NavBar />\r\n      <Toolbar />\r\n      <Container maxWidth=\"xl\" className={classes.content}>\r\n        <Tabs\r\n          value={currentTab}\r\n          onChange={handleTabEvent}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered>\r\n          <Tab label=\"Troop\" {...a11yProps(0)} />\r\n          <Tab label=\"Spell\" {...a11yProps(1)} />\r\n          <Tab label=\"Traits\" {...a11yProps(2)} />\r\n          <Tab label=\"Result\" {...a11yProps(3)} />\r\n        </Tabs>\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={currentTab}\r\n          onChangeIndex={setCurrentTab}>\r\n          <TabPanel value={currentTab} index={0} dir={theme.direction}>\r\n            <TabTroop className={classes.tabView} canvasResult={canvasResult} troop={troop} setTroop={setTroop} />\r\n          </TabPanel>\r\n          <TabPanel value={currentTab} index={1} dir={theme.direction}>\r\n\r\n          </TabPanel>\r\n          <TabPanel value={currentTab} index={2} dir={theme.direction}>\r\n            <TabTraits className={classes.tabView} canvasResult={canvasResult} troop={troop} setTroop={setTroop} />\r\n          </TabPanel>\r\n          <TabPanel value={currentTab} index={3} dir={theme.direction}>\r\n            <TabResult className={classes.tabView} canvasResult={canvasResult} troop={troop} />\r\n          </TabPanel>\r\n        </SwipeableViews>\r\n      </Container>\r\n    </CssBaseline>\r\n  );  \r\n};\r\n            //<TabSpell canvasResult={canvasResult} troop={troop} setTroop={setTroop} />","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport { App } from \"./components/App\";\nimport { orange, blueGrey } from \"@material-ui/core/colors\";\n\n// CSS\nimport './css/style.css'\nimport './css/google-fonts.css'\nimport './css/nerd-fonts.min.css'\n\nconst theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: blueGrey,\n      secondary: orange,\n    },\n    zIndex: {\n        appBar: 1\n    }\n});\n\nfunction Index() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  );\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));"],"sourceRoot":""}