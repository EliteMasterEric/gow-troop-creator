{"version":3,"sources":["components/Icon.js","components/layout/NavBar.js","components/layout/TabResult.js","components/layout/TabBase.js","components/layout/areas/preview/cards/CardBase.js","components/Values.js","components/layout/areas/preview/cards/CardSpell.js","components/layout/areas/preview/PreviewButtonBar.js","components/layout/areas/preview/PreviewBase.js","components/layout/areas/preview/PreviewSpell.js","components/layout/areas/preview/cards/CardTraits.js","components/layout/areas/preview/PreviewTraits.js","components/layout/areas/preview/cards/CardTroop.js","components/layout/areas/preview/PreviewTroop.js","components/layout/areas/form/FormUploader.js","components/layout/areas/form/FormSpell.js","components/layout/areas/form/FormTrait.js","components/layout/areas/form/FormTraits.js","components/layout/areas/form/FormTroop.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","image","width","height","spacing","paddingRight","Icon","icon","className","Image","source","classes","alt","src","appbar","elevation","position","toolbar","paddingLeft","appbarText","alignSelf","marginRight","input","marginLeft","borderRadius","overflow","NavBar","useTheme","mediaQueryLg","useMediaQuery","breakpoints","up","AppBar","color","Toolbar","Typography","variant","buttonIcon","fontSize","canvas","margin","display","mainCard","padding","TabResult","troop","canvasResult","React","useState","downloadUrl","setDownloadUrl","updateDownloadURL","current","toDataURL","useEffect","Card","CardContent","align","Grid","container","item","justify","xs","Box","ref","Tooltip","title","aria-label","Button","size","href","download","name","TabBase","children","value","index","dir","component","role","hidden","id","aria-labelledby","direction","cardBox","card","fillMixedText","ctx","args","x","y","textXPos","defaultFillStyle","fillStyle","defaultFont","font","save","forEach","text","fillText","measureText","restore","writeLines","context","maxWidth","lineHeight","centerVertical","words","split","lines","currentLine","i","length","word","push","newY","j","CardBase","sources","renderFunction","useRef","temp","isFontReady","setFontReady","WebFontLoader","load","google","families","fontactive","loadFonts","callback","images","loadedImages","onload","loadImages","getContext","loadingImage","drawImage","drawInactive","style","colors","label","rarities","Common","pips","Rare","Epic","Legendary","Mythic","Doomed","roles","traitCodes","coreSources","renderSpell","ctemp","rarityColor","rarity","globalCompositeOperation","fillRect","clearRect","textAlign","spellname","magic","maxHeight","baseLineHeight","lineIndexes","magicFillWordIndex","replace","magicDamage","parseInt","spellbase","spellmult","spellrange","Math","floor","newX","magicFillWordLocalIndex","magicWords","splice","lineFirstPart","join","lineLastPart","textParts","boldFont","writeSpellDescriptionLines","spelldesc","cresult","getImageURL","spellimage","URL","createObjectURL","CardSpell","concat","buttonGrid","paddingTop","PreviewButtonBar","troopName","PreviewBase","lg","PreviewSpell","renderTraits","globalAlpha","trait1name","trait2name","trait3name","trait1desc","trait2desc","trait3desc","CardTraits","trait1code","trait2code","trait3code","PreviewTraits","renderTroop","rarityPips","rect","clip","translate","scale","level","shadowOffsetX","shadowOffsetY","shadowColor","cost","Array","attack","armor","life","kingdom","type","type2","type1","txtSize","leftRoleX","rightRoleX","troopimage","CardTroop","PreviewTroop","formElement","FormUploader","setTroop","gutterBottom","dropzoneClass","dropzone","acceptedFiles","filesLimit","showAlerts","onChange","files","menu","menuColor","spellPower","backgroundColor","FormSpell","handleChange","event","target","sm","md","xl","TextField","multiline","helperText","InputProps","startAdornment","InputAdornment","FormControlLabel","control","Checkbox","checked","skill","manaCost","manaColors","typeField","traitcode","traitname","FormTrait","select","map","code","MenuItem","key","FormTraits","trait","FormTroop","Object","keys","option","SelectProps","MenuProps","content","flexGrow","previewGridItem","order","formGridItem","grid","tabView","marginBottom","App","currentTab","setCurrentTab","debouncedTroop","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","createRef","Container","Tabs","newValue","indicatorColor","textColor","centered","Tab","axis","onChangeIndex","createMuiTheme","palette","primary","blueGrey","secondary","orange","zIndex","appBar","ReactDOM","render","MuiThemeProvider","CssBaseline","document","getElementById"],"mappings":"0YAGMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,MAAO,OACPC,OAAQH,EAAMI,QAAQ,GACtBC,aAAc,UASLC,EAAO,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC3B,OACE,6BACE,uBAAGA,UAAS,aAAQD,GAAQ,eAAhB,YAAkCC,GAAa,QAMpDC,EAAQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQF,EAAgB,EAAhBA,UACxBG,EAAUb,IAChB,OAAO,yBAAKc,IAAI,GAAGC,IAAKH,EAAQF,UAAWA,GAAaG,EAAQV,SCrB5DH,EAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLc,OAAQ,CACNC,UAAW,EACXC,SAAU,SAEZC,QAAS,CACPC,YAAa,MACbb,aAAc,OAEhBc,WAAY,CACVC,UAAW,SACXC,YAAa,QAEfC,MAAO,CACLC,WAAY,QAEdtB,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRE,aAAcL,EAAMI,QAAQ,GAC5BoB,aAAcxB,EAAMI,QAAQ,GAC5BqB,SAAU,aAuBDC,EAlBA,WACb,IAAMf,EAAUb,IACVE,EAAQ2B,cAERC,EAAeC,YAAc7B,EAAM8B,YAAYC,GAAG,OAExD,OACE,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAUzB,UAAWG,EAAQG,QACzC,kBAACoB,EAAA,EAAD,CAAS1B,UAAWG,EAAQM,SAC1B,kBAAC,EAAD,CAAOP,OAAO,gBAAgBF,UAAWG,EAAQV,QACjD,kBAACkC,EAAA,EAAD,CAAY3B,UAAWG,EAAQQ,WAAYiB,QAAQ,KAAKH,MAAM,WAC3DL,EAAe,4BAA8B,oB,sDC9BlD9B,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCqC,WAAY,CACVC,SAAU,OAEZC,OAAQ,CACNrC,MAAO,OACPsC,OAAQ,WACRC,QAAS,SAEXC,SAAU,CACRF,OAAQxC,EAAMI,QAAQ,GACtBuC,QAAS3C,EAAMI,QAAQ,OAoDZwC,EAhDG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACpBnC,EAAUb,IAD6B,EAGPiD,IAAMC,SAAS,IAHR,mBAGtCC,EAHsC,KAGzBC,EAHyB,KAKvCC,EAAoB,WAExBD,EAAeJ,EAAaM,QAAQC,UAAU,eAOhD,OAJAC,oBAAUH,EAAmB,CAACL,IAE9BQ,oBAAUH,EAAmB,CAACN,IAG5B,kBAACU,EAAA,EAAD,CAAM/C,UAAWG,EAAQ+B,UACvB,kBAACc,EAAA,EAAD,KACE,kBAACrB,EAAA,EAAD,CAAYsB,MAAM,SAASrB,QAAQ,MAAnC,UAGA,kBAACsB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,QAAQ,SAASC,GAAI,IACxC,kBAACJ,EAAA,EAAD,CAAME,MAAI,GACR,kBAACG,EAAA,EAAD,CAAKvD,UAAWG,EAAQ4B,QACtB,4BAAQyB,IAAKlB,EAAc5C,MAAO,KAAMC,OAAQ,SAItD,kBAACuD,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACE,QAAQ,SAASC,GAAI,IACxC,kBAACJ,EAAA,EAAD,CAAME,MAAI,GACR,kBAACK,EAAA,EAAD,CAASC,MAAM,WAAWC,aAAW,YACnC,kBAACC,EAAA,EAAD,CACEhC,QAAQ,WACRiC,KAAK,QACLC,KAAMrB,EACNsB,SAAQ,UAAK1B,EAAM2B,KAAX,SAER,kBAAC,EAAD,CAAMhE,UAAWG,EAAQ0B,WAAY9B,KAAK,4BCxC7CkE,EAtBC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC3BlD,cAEd,OACE,kBAACQ,EAAA,EAAD,CACE2C,UAAU,MACVC,KAAK,WACLC,OAAQL,IAAUC,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,GACnCC,IAAKA,GAEL,kBAACnB,EAAA,EAAD,CACEC,WAAS,EACTwB,UAAU,OAETT,K,iBCfH5E,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCoF,QAAS,CACPzC,QAAQ,GAAD,OAAK3C,EAAMI,QAAQ,GAAnB,SAETiF,KAAM,CACJnF,MAAO,OACPsC,OAAQ,WACRC,QAAS,YA0CA6C,EAAgB,SAACC,EAAKC,EAAMC,EAAGC,GAC1C,IAAIC,EAAWF,EACTG,EAAmBL,EAAIM,UACvBC,EAAcP,EAAIQ,KAExBR,EAAIS,OACJR,EAAKS,QAAQ,YAAgC,IAA7BC,EAA4B,EAA5BA,KAAML,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,KAC/BR,EAAIM,UAAYA,GAAaD,EAC7BL,EAAIQ,KAAOA,GAAQD,EACnBP,EAAIY,SAASD,EAAMP,EAAUD,GAC7BC,GAAYJ,EAAIa,YAAYF,GAAMhG,QAEpCqF,EAAIc,WAGOC,EAAa,SACxBC,EACAd,EACAC,EACAc,EACAC,EACAP,EACAQ,GAOA,IALA,IAAMC,EAAQT,EAAKU,MAAM,KACnBC,EAAQ,GACVC,EAAcH,EAAM,GAGfI,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,GAAK,EAAG,CACxC,IAAME,EAAON,EAAMI,GACDR,EAAQH,YAAR,UAAuBU,EAAvB,YAAsCG,IAAhD/G,MACIsG,EACVM,GAAW,WAAQG,IAEnBJ,EAAMK,KAAKJ,GACXA,EAAcG,GAIlBJ,EAAMK,KAAKJ,GAIX,IAFA,IAAMK,EAAOzB,EAAKmB,EAAMG,OAASP,GAAeC,EAAiB,EAAI,GAE5DU,EAAI,EAAGA,EAAIP,EAAMG,OAAQI,GAAK,EACrCb,EAAQJ,SAASU,EAAMO,GAAI3B,EAAG0B,EAAOV,EAAaW,IAmBzCC,EAAW,SAAC,GAMlB,IALLxE,EAKI,EALJA,MACAyE,EAII,EAJJA,QACAC,EAGI,EAHJA,eACArE,EAEI,EAFJA,eACAJ,EACI,EADJA,aAEMnC,EAAUb,IAEVuF,EAAOtC,IAAMyE,OAAO,MACpBC,EAAO1E,IAAMyE,OAAO,MAJtB,EAMgCzE,IAAMC,UAAS,GAN/C,mBAMG0E,EANH,KAMgBC,EANhB,KA8BJ,OAtBArE,oBAAU,YApHM,SAAAqE,GAEhBC,IAAcC,KAAK,CACjBC,OAAQ,CACNC,SAAU,CAAC,wBAAyB,SAAU,YAEhDC,WAAY,WACVL,GAAa,MA8GfM,CAAUN,IACT,IAGHrE,oBAAU,WAEJoE,EA9GW,SACjBnF,EACAkF,EACA5E,EACAyE,EACAY,EACAhF,EACAJ,GAEA,IAAMqF,EAAS,GACXC,EAAe,EAEnBd,EAAQrB,QAAQ,SAACpF,EAAK+D,GACpBuD,EAAOvD,GAAS,IAAInE,MACpB0H,EAAOvD,GAAOyD,OAAS,YACrBD,GAAgB,IACId,EAAQN,QAC1BkB,EAAS3F,EAAQkF,EAAM5E,EAAOsF,EAAQjF,EAAgBJ,IAG1DqF,EAAOvD,GAAO/D,IAAMA,IA2FlByH,CACEjD,EAAKjC,QACLqE,EAAKrE,QACLP,EACAyE,EACAC,EACArE,EACAJ,EAAaM,SA5CA,SAAAb,GAEnBA,EAAOrC,MAAQ,IACfqC,EAAOpC,OAAS,IAEhB,IAAMoF,EAAMhD,EAAOgG,WAAW,MAExBC,EAAe,IAAI/H,MACzB+H,EAAaH,OAAS,WACpB9C,EAAIkD,UAAUD,EAAc,IAAK,IAAK,IAAK,MAE7CA,EAAa3H,IAAM,0CAoCf6H,CAAarD,EAAKjC,UAEnB,CAACP,EAAO6E,IAGT,kBAAC3D,EAAA,EAAD,CAAK5D,OAAQ,EAAGK,UAAWG,EAAQyE,SACjC,4BAAQpB,IAAKqB,EAAM7E,UAAWG,EAAQ0E,OACtC,4BAAQrB,IAAKyD,EAAMkB,MAAO,CAAElG,QAAS,YC7J9BmG,EAAS,CACpB,CAAEjE,MAAO,OAAQkE,MAAO,QACxB,CAAElE,MAAO,QAASkE,MAAO,SACzB,CAAElE,MAAO,MAAOkE,MAAO,OACvB,CAAElE,MAAO,SAAUkE,MAAO,UAC1B,CAAElE,MAAO,SAAUkE,MAAO,UAC1B,CAAElE,MAAO,SAAUkE,MAAO,SAC1B,CAAElE,MAAO,YAAakE,MAAO,gBAC7B,CAAElE,MAAO,UAAWkE,MAAO,cAC3B,CAAElE,MAAO,aAAckE,MAAO,iBAC9B,CAAElE,MAAO,aAAckE,MAAO,iBAC9B,CAAElE,MAAO,aAAckE,MAAO,gBAC9B,CAAElE,MAAO,WAAYkE,MAAO,eAC5B,CAAElE,MAAO,cAAekE,MAAO,kBAC/B,CAAElE,MAAO,cAAekE,MAAO,kBAC/B,CAAElE,MAAO,cAAekE,MAAO,iBAC/B,CAAElE,MAAO,YAAakE,MAAO,gBAC7B,CAAElE,MAAO,YAAakE,MAAO,gBAC7B,CAAElE,MAAO,YAAakE,MAAO,eAC7B,CAAElE,MAAO,eAAgBkE,MAAO,mBAChC,CAAElE,MAAO,eAAgBkE,MAAO,kBAChC,CAAElE,MAAO,eAAgBkE,MAAO,kBAChC,CAAElE,MAAO,eAAgBkE,MAAO,sBAChC,CAAElE,MAAO,kBAAmBkE,MAAO,yBACnC,CAAElE,MAAO,kBAAmBkE,MAAO,yBACnC,CAAElE,MAAO,kBAAmBkE,MAAO,wBACnC,CAAElE,MAAO,gBAAiBkE,MAAO,uBACjC,CAAElE,MAAO,gBAAiBkE,MAAO,uBACjC,CAAElE,MAAO,gBAAiBkE,MAAO,sBACjC,CAAElE,MAAO,mBAAoBkE,MAAO,0BACpC,CAAElE,MAAO,mBAAoBkE,MAAO,yBACpC,CAAElE,MAAO,mBAAoBkE,MAAO,yBACpC,CAAElE,MAAO,iBAAkBkE,MAAO,wBAClC,CAAElE,MAAO,iBAAkBkE,MAAO,wBAClC,CAAElE,MAAO,iBAAkBkE,MAAO,uBAClC,CAAElE,MAAO,oBAAqBkE,MAAO,2BACrC,CAAElE,MAAO,oBAAqBkE,MAAO,0BACrC,CAAElE,MAAO,oBAAqBkE,MAAO,0BACrC,CAAElE,MAAO,kBAAmBkE,MAAO,yBACnC,CAAElE,MAAO,kBAAmBkE,MAAO,wBACnC,CAAElE,MAAO,kBAAmBkE,MAAO,wBACnC,CAAElE,MAAO,qBAAsBkE,MAAO,2BACtC,CAAElE,MAAO,MAAOkE,MAAO,QAGZC,EAAW,CACtBC,OAAQ,CAAE9G,MAAO,UAAW+G,KAAM,GAClCC,KAAM,CAAEhH,MAAO,UAAW+G,KAAM,GAChC,aAAc,CAAE/G,MAAO,UAAW+G,KAAM,GACxCE,KAAM,CAAEjH,MAAO,UAAW+G,KAAM,GAChCG,UAAW,CAAElH,MAAO,UAAW+G,KAAM,GACrCI,OAAQ,CAAEnH,MAAO,UAAW+G,KAAM,GAClCK,OAAQ,CAAEpH,MAAO,UAAW+G,KAAM,IAGvBM,EAAQ,CACnB,WACA,WACA,YACA,OACA,UACA,UACA,UACA,YACA,WAGWC,EAAa,CACxB,SACA,QACA,WACA,WACA,UACA,YACA,QACA,SACA,UACA,gBACA,gBACA,iBACA,iBACA,cACA,cACA,UACA,YACA,cACA,MACA,UACA,eACA,WACA,cACA,gBACA,QACA,aACA,UACA,YACA,SACA,aACA,gBACA,kBACA,UACA,SACA,aACA,eACA,eACA,cACA,WACA,aACA,WACA,aACA,aACA,eACA,eACA,OACA,aACA,eACA,cACA,YACA,cACA,gBACA,kBACA,UACA,YACA,YACA,SACA,cACA,OACA,OACA,UACA,YACA,aACA,YACA,YACA,WACA,YACA,aACA,SACA,SACA,aACA,YACA,aACA,eACA,YACA,cACA,aACA,eACA,UACA,cACA,SACA,SACA,aACA,OACA,YACA,cACA,SACA,WACA,UACA,WACA,SACA,aACA,eACA,YACA,YACA,OACA,YACA,aACA,eACA,WACA,SACA,cACA,YACA,eACA,aACA,aACA,YACA,cACA,aACA,YACA,eACA,iBACA,WACA,aACA,WACA,cACA,gBACA,SACA,SACA,cACA,gBACA,aACA,eACA,WACA,aACA,aACA,cACA,cACA,aACA,eACA,aACA,UACA,UACA,YACA,cACA,YACA,cACA,aACA,eACA,eACA,aACA,YACA,cACA,YACA,WACA,UACA,QACA,UACA,SACA,WACA,QACA,aACA,aACA,aACA,UACA,WACA,aACA,aACA,YACA,YACA,cACA,YACA,cACA,SACA,WACA,cACA,aACA,eACA,cACA,YACA,SACA,WACA,aACA,eACA,WACA,YACA,OACA,SACA,cACA,gBACA,aACA,aACA,YACA,cACA,eACA,iBACA,cCzPIC,EAAc,CAClB,sCACA,yCACA,0CACA,0CACA,yCA4HIC,EAAc,SAClBlH,EACAkF,EACA5E,EACAsF,EACAjF,EACAJ,GAGAP,EAAOrC,MAAQ,IACfqC,EAAOpC,OAAS,IAChB,IAAMoF,EAAMhD,EAAOgG,WAAW,MAC9Bd,EAAKvH,MAAQqC,EAAOrC,MACpBuH,EAAKtH,OAASoC,EAAOpC,OACrB,IAAMuJ,EAAQjC,EAAKc,WAAW,MAExBoB,EAAcb,EAASjG,EAAM+G,QAAQ3H,MAK3CyH,EAAM1D,OAEN0D,EAAMjB,UAAUN,EAAO,GAAI,EAAG,EAAG,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","file":"static/js/main.a7d02346.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  image: {\r\n    width: \"auto\",\r\n    height: theme.spacing(3),\r\n    paddingRight: \"4px\"\r\n  }\r\n}));\r\n\r\n/*\r\n  Renders font icons. Great for buttons!\r\n  Powered by Nerd Fonts. Find class names on https://www.nerdfonts.com/cheat-sheet\r\n  Example: <Icon icon=\"nf-mdi-login\" />\r\n */\r\nexport const Icon = ({ icon, className }) => {\r\n  return (\r\n    <div>\r\n      <i className={`nf ${icon || \"nf-fa-amazon\"} ${className || \"\"}`} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const Image = ({ source, className }) => {\r\n  const classes = useStyles();\r\n  return <img alt=\"\" src={source} className={className || classes.image} />;\r\n};\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { Image } from \"../Icon\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\"\r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    image: {\r\n      width: \"auto\",\r\n      height: \"36px\",\r\n      paddingRight: theme.spacing(1),\r\n      borderRadius: theme.spacing(3),\r\n      overflow: \"hidden\"\r\n    }\r\n  };\r\n});\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n  return (\r\n    <AppBar color=\"primary\" className={classes.appbar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Image source=\"./logo256.png\" className={classes.image} />\r\n        <Typography className={classes.appbarText} variant=\"h4\" color=\"inherit\">\r\n          {mediaQueryLg ? \"Gems of War Troop Creator\" : \"Troop Creator\"}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  Card,\r\n  Button,\r\n  Tooltip,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Icon } from \"../Icon\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonIcon: {\r\n    fontSize: \"2em\"\r\n  },\r\n  canvas: {\r\n    width: \"100%\",\r\n    margin: \"0px auto\",\r\n    display: \"table\"\r\n  },\r\n  mainCard: {\r\n    margin: theme.spacing(3),\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst TabResult = ({ troop, canvasResult }) => {\r\n  const classes = useStyles();\r\n\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  const updateDownloadURL = () => {\r\n    // Get the data URL of the canvas.\r\n    setDownloadUrl(canvasResult.current.toDataURL(\"image/png\"));\r\n  };\r\n  // Perform when component first renders.\r\n  useEffect(updateDownloadURL, [canvasResult]);\r\n  // Perform when troop changes.\r\n  useEffect(updateDownloadURL, [troop]);\r\n\r\n  return (\r\n    <Card className={classes.mainCard}>\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h2\">\r\n          Result\r\n        </Typography>\r\n        <Grid container>\r\n          <Grid item container justify=\"center\" xs={12}>\r\n            <Grid item>\r\n              <Box className={classes.canvas}>\r\n                <canvas ref={canvasResult} width={1440} height={757} />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container justify=\"center\" xs={12}>\r\n            <Grid item>\r\n              <Tooltip title=\"Download\" aria-label=\"download\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  href={downloadUrl}\r\n                  download={`${troop.name}.png`}\r\n                >\r\n                  <Icon className={classes.buttonIcon} icon=\"nf-mdi-download\" />\r\n                </Button>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TabResult;\r\n","import React from \"react\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst TabBase = ({ children, value, index, dir }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      dir={dir}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n      >\r\n        {children}\r\n      </Grid>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default TabBase;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport WebFontLoader from \"webfontloader\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardBox: {\r\n    padding: `${theme.spacing(3)}px 0`\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n    margin: \"0px auto\",\r\n    display: \"table\"\r\n  }\r\n}));\r\n\r\nconst loadFonts = setFontReady => {\r\n  // Fetch necessary fonts.\r\n  WebFontLoader.load({\r\n    google: {\r\n      families: [\"Open Sans:400,600,700\", \"Roboto\", \"Raleway\"]\r\n    },\r\n    fontactive: () => {\r\n      setFontReady(true);\r\n    }\r\n  });\r\n};\r\n\r\n// Ensure all images are loaded before rendering the canvas itself.\r\nconst loadImages = (\r\n  canvas,\r\n  temp,\r\n  troop,\r\n  sources,\r\n  callback,\r\n  setDownloadUrl,\r\n  canvasResult\r\n) => {\r\n  const images = {};\r\n  let loadedImages = 0;\r\n\r\n  sources.forEach((src, index) => {\r\n    images[index] = new Image();\r\n    images[index].onload = () => {\r\n      loadedImages += 1;\r\n      if (loadedImages >= sources.length) {\r\n        callback(canvas, temp, troop, images, setDownloadUrl, canvasResult);\r\n      }\r\n    };\r\n    images[index].src = src;\r\n  });\r\n};\r\n\r\n// https://gist.github.com/mrcoles/0dfaab93a1c899e5f46690676c8c29e5\r\nexport const fillMixedText = (ctx, args, x, y) => {\r\n  let textXPos = x;\r\n  const defaultFillStyle = ctx.fillStyle;\r\n  const defaultFont = ctx.font;\r\n\r\n  ctx.save();\r\n  args.forEach(({ text, fillStyle, font }) => {\r\n    ctx.fillStyle = fillStyle || defaultFillStyle;\r\n    ctx.font = font || defaultFont;\r\n    ctx.fillText(text, textXPos, y);\r\n    textXPos += ctx.measureText(text).width;\r\n  });\r\n  ctx.restore();\r\n};\r\n\r\nexport const writeLines = (\r\n  context,\r\n  x,\r\n  y,\r\n  maxWidth,\r\n  lineHeight,\r\n  text,\r\n  centerVertical\r\n) => {\r\n  const words = text.split(\" \");\r\n  const lines = [];\r\n  let currentLine = words[0];\r\n\r\n  // Build an array of lines, starting a new line if the current one is too long.\r\n  for (let i = 1; i < words.length; i += 1) {\r\n    const word = words[i];\r\n    const { width } = context.measureText(`${currentLine} ${word}`);\r\n    if (width < maxWidth) {\r\n      currentLine += ` ${word}`;\r\n    } else {\r\n      lines.push(currentLine);\r\n      currentLine = word;\r\n    }\r\n  }\r\n  // Finish up.\r\n  lines.push(currentLine);\r\n\r\n  const newY = y - (lines.length * lineHeight) / (centerVertical ? 2 : 1);\r\n\r\n  for (let j = 0; j < lines.length; j += 1) {\r\n    context.fillText(lines[j], x, newY + lineHeight * j);\r\n  }\r\n};\r\n\r\nconst drawInactive = canvas => {\r\n  // Set the canvas size.\r\n  canvas.width = 491;\r\n  canvas.height = 727;\r\n\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  const loadingImage = new Image();\r\n  loadingImage.onload = () => {\r\n    ctx.drawImage(loadingImage, 180, 308, 100, 100);\r\n  };\r\n  loadingImage.src = \"./assets/graphics/troopcard/loading.png\";\r\n};\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardBase = ({\r\n  troop,\r\n  sources,\r\n  renderFunction,\r\n  setDownloadUrl,\r\n  canvasResult\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const card = React.useRef(null);\r\n  const temp = React.useRef(null);\r\n\r\n  const [isFontReady, setFontReady] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    loadFonts(setFontReady);\r\n  }, []);\r\n\r\n  // Perform when troop changes.\r\n  useEffect(() => {\r\n    // Draw the canvas.\r\n    if (isFontReady) {\r\n      loadImages(\r\n        card.current,\r\n        temp.current,\r\n        troop,\r\n        sources,\r\n        renderFunction, // Pass a render function from the parent.\r\n        setDownloadUrl,\r\n        canvasResult.current\r\n      );\r\n    } else {\r\n      drawInactive(card.current);\r\n    }\r\n  }, [troop, isFontReady]);\r\n\r\n  return (\r\n    <Box height={1} className={classes.cardBox}>\r\n      <canvas ref={card} className={classes.card} />\r\n      <canvas ref={temp} style={{ display: \"none\" }} />\r\n    </Box>\r\n  );\r\n};\r\n","export const colors = [\r\n  { value: \"Blue\", label: \"Blue\" },\r\n  { value: \"Green\", label: \"Green\" },\r\n  { value: \"Red\", label: \"Red\" },\r\n  { value: \"Yellow\", label: \"Yellow\" },\r\n  { value: \"Purple\", label: \"Purple\" },\r\n  { value: \"Orange\", label: \"Brown\" },\r\n  { value: \"BlueGreen\", label: \"Blue / Green\" },\r\n  { value: \"BlueRed\", label: \"Blue / Red\" },\r\n  { value: \"BlueYellow\", label: \"Blue / Yellow\" },\r\n  { value: \"BluePurple\", label: \"Blue / Purple\" },\r\n  { value: \"BlueOrange\", label: \"Blue / Brown\" },\r\n  { value: \"GreenRed\", label: \"Green / Red\" },\r\n  { value: \"GreenYellow\", label: \"Green / Yellow\" },\r\n  { value: \"GreenPurple\", label: \"Green / Purple\" },\r\n  { value: \"GreenOrange\", label: \"Green / Brown\" },\r\n  { value: \"RedYellow\", label: \"Red / Yellow\" },\r\n  { value: \"RedPurple\", label: \"Red / Purple\" },\r\n  { value: \"RedOrange\", label: \"Red / Brown\" },\r\n  { value: \"YellowPurple\", label: \"Yellow / Purple\" },\r\n  { value: \"YellowOrange\", label: \"Yellow / Brown\" },\r\n  { value: \"PurpleOrange\", label: \"Purple / Brown\" },\r\n  { value: \"BlueGreenRed\", label: \"Blue / Green / Red\" },\r\n  { value: \"BlueGreenYellow\", label: \"Blue / Green / Yellow\" },\r\n  { value: \"BlueGreenPurple\", label: \"Blue / Green / Purple\" },\r\n  { value: \"BlueGreenOrange\", label: \"Blue / Green / Brown\" },\r\n  { value: \"BlueRedYellow\", label: \"Blue / Red / Yellow\" },\r\n  { value: \"BlueRedPurple\", label: \"Blue / Red / Purple\" },\r\n  { value: \"BlueRedOrange\", label: \"Blue / Red / Brown\" },\r\n  { value: \"BlueYellowPurple\", label: \"Blue / Yellow / Purple\" },\r\n  { value: \"BlueYellowOrange\", label: \"Blue / Yellow / Brown\" },\r\n  { value: \"BluePurpleOrange\", label: \"Blue / Purple / Brown\" },\r\n  { value: \"GreenRedYellow\", label: \"Green / Red / Yellow\" },\r\n  { value: \"GreenRedPurple\", label: \"Green / Red / Purple\" },\r\n  { value: \"GreenRedOrange\", label: \"Green / Red / Brown\" },\r\n  { value: \"GreenYellowPurple\", label: \"Green / Yellow / Purple\" },\r\n  { value: \"GreenYellowOrange\", label: \"Green / Yellow / Brown\" },\r\n  { value: \"GreenPurpleOrange\", label: \"Green / Purple / Brown\" },\r\n  { value: \"RedYellowPurple\", label: \"Red / Yellow / Purple\" },\r\n  { value: \"RedYellowOrange\", label: \"Red / Yellow / Brown\" },\r\n  { value: \"RedPurpleOrange\", label: \"Red / Purple / Brown\" },\r\n  { value: \"YellowPurpleOrange\", label: \"Yellow / Purple / Brown\" },\r\n  { value: \"All\", label: \"All\" }\r\n];\r\n\r\nexport const rarities = {\r\n  Common: { color: \"#FEFEFE\", pips: 1 },\r\n  Rare: { color: \"#54A721\", pips: 2 },\r\n  \"Ultra-Rare\": { color: \"#1D71FF\", pips: 3 },\r\n  Epic: { color: \"#9635E7\", pips: 4 },\r\n  Legendary: { color: \"#F3A120\", pips: 5 },\r\n  Mythic: { color: \"#13E3F6\", pips: 6 },\r\n  Doomed: { color: \"#B90000\", pips: 6 }\r\n};\r\n\r\nexport const roles = [\r\n  \"Assassin\",\r\n  \"Defender\",\r\n  \"Generator\",\r\n  \"Mage\",\r\n  \"Striker\",\r\n  \"Support\",\r\n  \"Warlock\",\r\n  \"Warmaster\",\r\n  \"Warrior\"\r\n];\r\n\r\nexport const traitCodes = [\r\n  \"aflame\",\r\n  \"agile\",\r\n  \"airbrand\",\r\n  \"airheart\",\r\n  \"airlink\",\r\n  \"airspirit\",\r\n  \"alert\",\r\n  \"arcane\",\r\n  \"armored\",\r\n  \"armorpiercing\",\r\n  \"aspectofdeath\",\r\n  \"aspectoffamine\",\r\n  \"aspectofplague\",\r\n  \"aspectofwar\",\r\n  \"assassinate\",\r\n  \"avenger\",\r\n  \"beastbond\",\r\n  \"beastslayer\",\r\n  \"big\",\r\n  \"blessed\",\r\n  \"bloodsucking\",\r\n  \"bullseye\",\r\n  \"centaurbond\",\r\n  \"centaurslayer\",\r\n  \"chill\",\r\n  \"chilltouch\",\r\n  \"clobber\",\r\n  \"clockwork\",\r\n  \"cocoon\",\r\n  \"compassion\",\r\n  \"constructbond\",\r\n  \"constructslayer\",\r\n  \"cunning\",\r\n  \"cursed\",\r\n  \"daemonbond\",\r\n  \"daemonicpact\",\r\n  \"daemonslayer\",\r\n  \"darkchannel\",\r\n  \"darkfall\",\r\n  \"deathtouch\",\r\n  \"defender\",\r\n  \"divineaura\",\r\n  \"divinebond\",\r\n  \"divineshield\",\r\n  \"divineslayer\",\r\n  \"doom\",\r\n  \"dragonbond\",\r\n  \"dragonslayer\",\r\n  \"dragonvines\",\r\n  \"dwarfbond\",\r\n  \"dwarfslayer\",\r\n  \"elementalbond\",\r\n  \"elementalslayer\",\r\n  \"elfbond\",\r\n  \"elfslayer\",\r\n  \"empowered\",\r\n  \"ensoul\",\r\n  \"eyeofkhetar\",\r\n  \"fall\",\r\n  \"fast\",\r\n  \"feybond\",\r\n  \"feyslayer\",\r\n  \"fierycloak\",\r\n  \"firebrand\",\r\n  \"fireheart\",\r\n  \"firelink\",\r\n  \"fireproof\",\r\n  \"firespirit\",\r\n  \"flying\",\r\n  \"frenzy\",\r\n  \"frozensoul\",\r\n  \"fullplate\",\r\n  \"gardswrath\",\r\n  \"gateguardian\",\r\n  \"giantbond\",\r\n  \"giantslayer\",\r\n  \"goblinbond\",\r\n  \"goblinslayer\",\r\n  \"goblord\",\r\n  \"graniteskin\",\r\n  \"greedy\",\r\n  \"grudge\",\r\n  \"hacknslash\",\r\n  \"huge\",\r\n  \"humanbond\",\r\n  \"humanslayer\",\r\n  \"hunger\",\r\n  \"icycloak\",\r\n  \"immense\",\r\n  \"immortal\",\r\n  \"immune\",\r\n  \"impervious\",\r\n  \"indigestible\",\r\n  \"inscribed\",\r\n  \"insulated\",\r\n  \"jinx\",\r\n  \"kingswill\",\r\n  \"knightbond\",\r\n  \"knightslayer\",\r\n  \"knockout\",\r\n  \"leader\",\r\n  \"lethaltoxin\",\r\n  \"lifedrain\",\r\n  \"lionstrength\",\r\n  \"magicbrand\",\r\n  \"magicheart\",\r\n  \"magiclink\",\r\n  \"magicspirit\",\r\n  \"manashield\",\r\n  \"manyheads\",\r\n  \"marauderbond\",\r\n  \"marauderslayer\",\r\n  \"mechbond\",\r\n  \"mechslayer\",\r\n  \"merchant\",\r\n  \"merfolkbond\",\r\n  \"merfolkslayer\",\r\n  \"miasma\",\r\n  \"molten\",\r\n  \"monsterbond\",\r\n  \"monsterslayer\",\r\n  \"mysticbond\",\r\n  \"mysticslayer\",\r\n  \"nagabond\",\r\n  \"nagaslayer\",\r\n  \"nastyteeth\",\r\n  \"naturebrand\",\r\n  \"natureheart\",\r\n  \"naturelink\",\r\n  \"naturespirit\",\r\n  \"necromancy\",\r\n  \"orcbond\",\r\n  \"orclord\",\r\n  \"orcslayer\",\r\n  \"plaguetouch\",\r\n  \"pyromania\",\r\n  \"queensgrace\",\r\n  \"rakshabond\",\r\n  \"rakshaslayer\",\r\n  \"regeneration\",\r\n  \"reinforced\",\r\n  \"roguebond\",\r\n  \"rogueslayer\",\r\n  \"sacrifice\",\r\n  \"seedling\",\r\n  \"shatter\",\r\n  \"siege\",\r\n  \"silence\",\r\n  \"siphon\",\r\n  \"slippery\",\r\n  \"snare\",\r\n  \"soullegion\",\r\n  \"spikearmor\",\r\n  \"spiritfire\",\r\n  \"stalker\",\r\n  \"stealthy\",\r\n  \"stonebrand\",\r\n  \"stoneheart\",\r\n  \"stonelink\",\r\n  \"stoneskin\",\r\n  \"stonespirit\",\r\n  \"stryxbond\",\r\n  \"stryxslayer\",\r\n  \"sturdy\",\r\n  \"sunshine\",\r\n  \"suppression\",\r\n  \"taurosbond\",\r\n  \"taurosslayer\",\r\n  \"technomancy\",\r\n  \"thickhead\",\r\n  \"thorns\",\r\n  \"trueshot\",\r\n  \"undeadbond\",\r\n  \"undeadslayer\",\r\n  \"venomous\",\r\n  \"virulence\",\r\n  \"ward\",\r\n  \"warded\",\r\n  \"wargarebond\",\r\n  \"wargareslayer\",\r\n  \"waterbrand\",\r\n  \"waterheart\",\r\n  \"waterlink\",\r\n  \"waterspirit\",\r\n  \"wildfolkbond\",\r\n  \"wildfolkslayer\",\r\n  \"winterveil\"\r\n];\r\n","import React from \"react\";\r\n\r\nimport { CardBase, fillMixedText } from \"./CardBase\";\r\nimport { rarities } from \"../../../../Values\";\r\n\r\nconst coreSources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/divider.png\", // 2 - SpellDivider\r\n  \"./assets/graphics/troopcard/spellbg.png\", // 3 - SpellBackground\r\n  \"./assets/graphics/troopcard/magic.png\" // 4 - Magic\r\n];\r\n\r\nconst writeSpellDescriptionLines = (\r\n  context,\r\n  x,\r\n  y,\r\n  maxWidth,\r\n  maxHeight,\r\n  baseLineHeight,\r\n  troop,\r\n  text\r\n) => {\r\n  //\r\n  // DEATH TO ALL YE WHO ENTER HERE\r\n  // This function is a nightmare of confusing logic, combining word wrapping\r\n  // with the code that colors the magic formatting text.\r\n  //\r\n\r\n  let lineHeight = baseLineHeight;\r\n\r\n  const fillStyle = \"#000000\";\r\n  const altFillStyle = \"#680b7c\";\r\n\r\n  while (lineHeight > 0) {\r\n    const words = text.split(\" \");\r\n    const lines = [];\r\n    const lineIndexes = [0];\r\n    let currentLine = words[0];\r\n    let magicFillWordIndex = -1;\r\n\r\n    context.font = '600 {}px \"Open Sans\"'.replace(\"{}\", lineHeight);\r\n\r\n    // Build an array of lines, starting a new line if the current one is too long.\r\n    let i = 1;\r\n    for (i = 1; i < words.length; i += 1) {\r\n      let word = words[i];\r\n      if (word === \"{magic}\") {\r\n        magicFillWordIndex = i;\r\n        const magicDamage =\r\n          parseInt(troop.spellbase, 10) +\r\n          parseInt(troop.spellmult, 10) * parseInt(troop.magic, 10);\r\n        if (troop.spellrange) {\r\n          word = `${Math.floor(magicDamage / 2)} - ${magicDamage}`;\r\n        } else {\r\n          word = magicDamage;\r\n        }\r\n      }\r\n      const { width } = context.measureText(`${currentLine} ${word}`);\r\n      if (width < maxWidth) {\r\n        currentLine += ` ${word}`;\r\n      } else {\r\n        lines.push(currentLine);\r\n        lineIndexes.push(i);\r\n        currentLine = word;\r\n      }\r\n    }\r\n    // Finish up.\r\n    lines.push(currentLine);\r\n    lineIndexes.push(i);\r\n    if (lines.length * lineHeight > maxHeight) {\r\n      // Make things shorter and start over.\r\n      lineHeight -= 2;\r\n    } else {\r\n      // Actually use this size.\r\n      const newY = y - (lines.length * lineHeight) / 2;\r\n\r\n      for (let j = 0; j < lines.length; j += 1) {\r\n        if (\r\n          magicFillWordIndex !== -1 &&\r\n          (magicFillWordIndex <= lineIndexes[j + 1] &&\r\n            lineIndexes[j] < magicFillWordIndex)\r\n        ) {\r\n          context.textAlign = \"left\";\r\n          const newX = x - context.measureText(lines[j]).width / 2;\r\n          context.fillStyle = altFillStyle;\r\n          const magicFillWordLocalIndex = magicFillWordIndex - lineIndexes[j];\r\n\r\n          const lineWords = lines[j].split(\" \");\r\n          const magicWords = lineWords.splice(\r\n            magicFillWordLocalIndex,\r\n            troop.spellrange ? 3 : 1\r\n          );\r\n\r\n          const lineFirstPart = lines[j].split(magicWords.join(\" \"))[0];\r\n          const lineLastPart = lines[j].split(magicWords.join(\" \"))[1];\r\n          let textParts = [];\r\n          const boldFont = 'bold {}px \"Open Sans\"'.replace(\"{}\", lineHeight);\r\n          if (troop.spellrange) {\r\n            textParts = [\r\n              { text: lineFirstPart, fillStyle },\r\n              {\r\n                text: `${magicWords[0]} `,\r\n                fillStyle: altFillStyle,\r\n                font: boldFont\r\n              },\r\n              { text: magicWords[1], fillStyle },\r\n              {\r\n                text: ` ${magicWords[2]}`,\r\n                fillStyle: altFillStyle,\r\n                font: boldFont\r\n              },\r\n              { text: lineLastPart, fillStyle }\r\n            ];\r\n          } else {\r\n            textParts = [\r\n              { text: lineFirstPart, fillStyle },\r\n              { text: magicWords[0], fillStyle: altFillStyle, font: boldFont },\r\n              { text: lineLastPart, fillStyle }\r\n            ];\r\n          }\r\n          fillMixedText(context, textParts, newX, newY + lineHeight * j);\r\n        } else {\r\n          context.textAlign = \"center\";\r\n          context.fillStyle = fillStyle;\r\n          context.fillText(lines[j], x, newY + lineHeight * j);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n// Render the canvas itself.\r\nconst renderSpell = (\r\n  canvas,\r\n  temp,\r\n  troop,\r\n  images,\r\n  setDownloadUrl,\r\n  canvasResult\r\n) => {\r\n  // Set the canvas size.\r\n  canvas.width = 460;\r\n  canvas.height = 727;\r\n  const ctx = canvas.getContext(\"2d\");\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  const ctemp = temp.getContext(\"2d\");\r\n\r\n  const rarityColor = rarities[troop.rarity].color;\r\n\r\n  // CardTop and CardBottom, TraitDivider1, 2, and 3\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 689, 460, 34);\r\n  // SpellDivider\r\n  ctemp.drawImage(images[2], 0, 427, 460, 14);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarityColor;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Name Plate\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.fillRect(0, 16, 460, 71);\r\n\r\n  // Spell Name\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = \"center\";\r\n  ctx.fillText(troop.spellname, 215, 66);\r\n\r\n  // Spell Image\r\n  ctx.drawImage(images[5], 0, 87, 460, 340);\r\n\r\n  // Spell Card\r\n  ctx.drawImage(images[3], 0, 441, 460, 248);\r\n\r\n  // Magic Icon\r\n  ctx.drawImage(images[4], 185, 454, 34, 42);\r\n\r\n  // Magic Value\r\n  ctx.font = '600 40px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = \"left\";\r\n  ctx.fillText(troop.magic, 235, 488);\r\n\r\n  // SpellDesc\r\n  writeSpellDescriptionLines(\r\n    ctx,\r\n    230,\r\n    623,\r\n    430,\r\n    150,\r\n    36,\r\n    troop,\r\n    troop.spelldesc\r\n  );\r\n\r\n  // Add the spell to the results.\r\n  const cresult = canvasResult.getContext(\"2d\");\r\n  cresult.clearRect(5, 15, canvas.width, canvas.height);\r\n  cresult.drawImage(canvas, 5, 15, canvas.width, canvas.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n};\r\n\r\nconst getImageURL = troop => {\r\n  // Fetch the URL for the spell image, or return a default.\r\n  if (troop.spellimage !== null) {\r\n    return URL.createObjectURL(troop.spellimage);\r\n  }\r\n  // Else, use the default.\r\n  return `./assets/graphics/troopcard/eruption.png`;\r\n};\r\n\r\n// Render a spell as part of a full-size card (like in the troop list).\r\nconst CardSpell = ({ troop, setDownloadUrl, canvasResult }) => {\r\n  return (\r\n    <CardBase\r\n      troop={troop}\r\n      sources={coreSources.concat([getImageURL(troop)])}\r\n      renderFunction={renderSpell}\r\n      setDownloadUrl={setDownloadUrl}\r\n      canvasResult={canvasResult}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CardSpell;\r\n","import React from \"react\";\r\nimport { Grid, Button, Tooltip } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Icon } from \"../../../Icon\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  buttonGrid: {\r\n    paddingTop: \"6px\"\r\n  },\r\n  buttonIcon: {\r\n    fontSize: \"2em\"\r\n  }\r\n}));\r\n\r\nconst PreviewButtonBar = ({ troopName, downloadUrl }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container justify=\"center\" className={classes.buttonGrid} spacing={3}>\r\n      <Grid item>\r\n        <Tooltip title=\"Download\" aria-label=\"download\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            href={downloadUrl}\r\n            download={`${troopName}.png`}\r\n          >\r\n            <Icon className={classes.buttonIcon} icon=\"nf-mdi-download\" />\r\n          </Button>\r\n        </Tooltip>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PreviewButtonBar;\r\n","import React from \"react\";\r\nimport { Typography, CardContent, Grid, Card } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PreviewButtonBar from \"./PreviewButtonBar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    padding: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst PreviewBase = ({ troopName, downloadUrl, children, className }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} lg={4} className={className}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography align=\"center\" variant=\"h2\">\r\n            Preview\r\n          </Typography>\r\n          {children}\r\n          <PreviewButtonBar troopName={troopName} downloadUrl={downloadUrl} />\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PreviewBase;\r\n","import React from \"react\";\r\n\r\nimport CardSpell from \"./cards/CardSpell\";\r\nimport PreviewPanel from \"./PreviewBase\";\r\n\r\nconst PreviewSpell = ({ troop, canvasResult, className }) => {\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <PreviewPanel\r\n      troopName={troop.name}\r\n      downloadUrl={downloadUrl}\r\n      className={className}\r\n    >\r\n      <CardSpell\r\n        troop={troop}\r\n        canvasResult={canvasResult}\r\n        setDownloadUrl={setDownloadUrl}\r\n      />\r\n    </PreviewPanel>\r\n  );\r\n};\r\n\r\nexport default PreviewSpell;\r\n","import React from \"react\";\r\n\r\nimport { CardBase, writeLines } from \"./CardBase\";\r\n\r\nimport { rarities } from \"../../../../Values\";\r\n\r\nconst coreSources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/divider.png\", // 2 - TraitDivider\r\n  \"./assets/graphics/troopcard/ascension.png\", // 3 - Trait Pip\r\n  \"./assets/graphics/troopcard/traitbg.png\" // 4 - Trait background\r\n];\r\n\r\n// Render the canvas itself.\r\nconst renderTraits = (\r\n  canvas,\r\n  temp,\r\n  troop,\r\n  images,\r\n  setDownloadUrl,\r\n  canvasResult\r\n) => {\r\n  // Set the canvas size.\r\n  canvas.width = 460;\r\n  canvas.height = 727;\r\n  const ctx = canvas.getContext(\"2d\");\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  const ctemp = temp.getContext(\"2d\");\r\n\r\n  const rarityColor = rarities[troop.rarity].color;\r\n\r\n  // CardTop and CardBottom, TraitDivider1, 2, and 3\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 693, 460, 34);\r\n  // TraitDivider1\r\n  ctemp.drawImage(images[2], 0, 281, 460, 14);\r\n  // TraitDivider2\r\n  ctemp.drawImage(images[2], 0, 487, 460, 14);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarityColor;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Name Plate\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.fillRect(0, 16, 460, 73);\r\n\r\n  // \"Traits\" Label\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = \"center\";\r\n  ctx.fillText(\"Traits\", 215, 66);\r\n\r\n  // TraitCard1\r\n  ctx.drawImage(images[4], 0, 89, 460, 192);\r\n  // TraitCard2\r\n  ctx.drawImage(images[4], 0, 295, 460, 192);\r\n  // TraitCard3\r\n  ctx.drawImage(images[4], 0, 501, 460, 192);\r\n\r\n  // TraitIcon1, TraitPip1\r\n  // To color Epic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 104, 36, 36);\r\n  ctemp.drawImage(images[5], 404, 104, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities.Epic.color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 1;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // TraitIcon2, TraitPip2\r\n  // To color Legendary, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 310, 36, 36);\r\n  ctemp.drawImage(images[6], 404, 310, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities.Legendary.color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // TraitIcon3, TraitPip3\r\n  // To color Mythic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[3], 12, 516, 36, 36);\r\n  ctemp.drawImage(images[7], 404, 516, 36, 36);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities.Mythic.color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // TraitName1\r\n  ctx.font = '600 32px \"Open Sans\"';\r\n  ctx.textAlign = \"left\";\r\n  ctx.fillStyle = rarities.Epic.color;\r\n  ctx.fillText(troop.trait1name, 60, 104 + 30);\r\n\r\n  // TraitName2\r\n  ctx.fillStyle = rarities.Legendary.color;\r\n  ctx.fillText(troop.trait2name, 60, 310 + 30);\r\n\r\n  // TraitName3\r\n  ctx.fillStyle = rarities.Mythic.color;\r\n  ctx.fillText(troop.trait3name, 60, 516 + 30);\r\n\r\n  // TraitDesc1\r\n  ctx.font = '600 32px \"Open Sans\"';\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.textAlign = \"center\";\r\n  writeLines(ctx, 230, 246, 400, 32, troop.trait1desc, true);\r\n\r\n  // TraitDesc2\r\n  writeLines(ctx, 230, 452, 400, 32, troop.trait2desc, true);\r\n\r\n  // TraitDesc3\r\n  writeLines(ctx, 230, 658, 400, 32, troop.trait3desc, true);\r\n\r\n  // Add the traits to the results.\r\n  const cresult = canvasResult.getContext(\"2d\");\r\n  cresult.clearRect(975, 10, canvas.width, canvas.height);\r\n  cresult.drawImage(canvas, 975, 10, canvas.width, canvas.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n};\r\n\r\n// Render a spell as part of a full-size card (like in the troop list).\r\nconst CardTraits = ({ troop, setDownloadUrl, canvasResult }) => {\r\n  return (\r\n    <CardBase\r\n      troop={troop}\r\n      sources={coreSources.concat([\r\n        `./assets/graphics/troopcard/traits/${troop.trait1code}.png`, // 5 - Trait Icon 1\r\n        `./assets/graphics/troopcard/traits/${troop.trait2code}.png`, // 6 - Trait Icon 2\r\n        `./assets/graphics/troopcard/traits/${troop.trait3code}.png` // 7 - Trait Icon 3\r\n      ])}\r\n      renderFunction={renderTraits}\r\n      setDownloadUrl={setDownloadUrl}\r\n      canvasResult={canvasResult}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CardTraits;\r\n","import React from \"react\";\r\n\r\nimport CardTraits from \"./cards/CardTraits\";\r\nimport PreviewPanel from \"./PreviewBase\";\r\n\r\nconst PreviewTraits = ({ troop, canvasResult, className }) => {\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <PreviewPanel\r\n      troopName={troop.name}\r\n      downloadUrl={downloadUrl}\r\n      className={className}\r\n    >\r\n      <CardTraits\r\n        troop={troop}\r\n        canvasResult={canvasResult}\r\n        setDownloadUrl={setDownloadUrl}\r\n      />\r\n    </PreviewPanel>\r\n  );\r\n};\r\n\r\nexport default PreviewTraits;\r\n","import React from \"react\";\r\n\r\nimport { CardBase, writeLines } from \"./CardBase\";\r\nimport { rarities } from \"../../../../Values\";\r\n\r\nconst coreSources = [\r\n  \"./assets/graphics/troopcard/top.png\", // 0 - CardTop\r\n  \"./assets/graphics/troopcard/bottom.png\", // 1 - CardBottom\r\n  \"./assets/graphics/troopcard/attack.png\", // 2 - Attack Skill\r\n  \"./assets/graphics/troopcard/armor.png\", // 3 - Armor Skil\r\n  \"./assets/graphics/troopcard/life.png\", // 4 - Life Skill\r\n  \"./assets/graphics/troopcard/trait_flag.png\", // 5 - Trait Flag\r\n  \"./assets/graphics/troopcard/ascension.png\", // 6 - Rarity Pip without Spikes\r\n  \"./assets/graphics/troopcard/ascension_spike.png\", // 7 - Rarity Pip with Spikes\r\n  \"./assets/graphics/troopcard/shading_horizontal.png\", // 8 - Horizontal Gradient\r\n  \"./assets/graphics/troopcard/shading_vertical.png\" // 9 - Vertical Gradient\r\n];\r\n\r\n// Render the canvas itself.\r\nconst renderTroop = (\r\n  canvas,\r\n  temp,\r\n  troop,\r\n  images,\r\n  setDownloadUrl,\r\n  canvasResult\r\n) => {\r\n  // Set the canvas size.\r\n  canvas.width = 490;\r\n  canvas.height = 746;\r\n  const ctx = canvas.getContext(\"2d\");\r\n  temp.width = canvas.width;\r\n  temp.height = canvas.height;\r\n  const ctemp = temp.getContext(\"2d\");\r\n\r\n  const rarityColor = rarities[troop.rarity].color;\r\n  const rarityPips = rarities[troop.rarity].pips;\r\n\r\n  // TroopImage\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  ctx.drawImage(images[10], 30, 37, 460, 652);\r\n  ctx.restore();\r\n\r\n  // TopGradient, behind the ascension pips\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  // Set transparency\r\n  ctx.globalAlpha = 0.8235;\r\n  ctx.drawImage(images[9], 30, 37, 460, 107);\r\n  ctx.restore();\r\n\r\n  // LevelGradient, behind the troop level\r\n  // Clip to prevent the image appearing behind the top bar.\r\n  // Save and restore to undo the clip.\r\n  ctx.save();\r\n  ctx.rect(0, 46, canvas.width, canvas.height);\r\n  ctx.clip();\r\n  // Set transparency\r\n  ctx.globalAlpha = 0.7843;\r\n  // Flip horizontally\r\n  ctx.translate(460, 0);\r\n  ctx.scale(-1, 1);\r\n  ctx.drawImage(images[8], -30, 45, 195, 107);\r\n  ctx.restore();\r\n\r\n  // CardTop and CardBottom\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  // CardTop border\r\n  ctemp.drawImage(images[0], 0, 0, 460, 16);\r\n  // CardBottom border\r\n  ctemp.drawImage(images[1], 0, 659, 460, 50);\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarityColor;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 30, 30, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // LevelLabel\r\n  ctx.font = '500 40px \"Raleway\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = \"right\";\r\n  ctx.fillText(\"Level\", canvas.width - 8, 56 + 30);\r\n\r\n  // LevelValue\r\n  ctx.font = '600 50px \"Open Sans\"';\r\n  // Same fillStyle and textAlign\r\n  ctx.fillText(troop.level, canvas.width - 8, 108 + 30);\r\n\r\n  // ManaColor\r\n  ctx.drawImage(images[15], 0, 0, 100, 100);\r\n\r\n  // ManaCost\r\n  ctx.save();\r\n  ctx.font = '600 60px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = \"center\";\r\n  // 2px Black shadow\r\n  ctx.shadowOffsetX = 2;\r\n  ctx.shadowOffsetY = 2;\r\n  ctx.shadowColor = \"#000\";\r\n  ctx.fillText(troop.cost, 50, 70);\r\n  ctx.restore();\r\n\r\n  // Ascension Pips\r\n  // To color by rarity, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  [...Array(rarityPips)].forEach(i => {\r\n    ctemp.drawImage(images[7], 105 + 30 * i, 60, 30, 30);\r\n  });\r\n\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = rarityColor;\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Unascended Pips\r\n  // To color gray, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  [...Array(6 - rarityPips)].forEach(i => {\r\n    ctemp.drawImage(images[6], 255 - 30 * i, 60, 30, 30);\r\n  });\r\n\r\n  // Fill in the area with the color.\r\n  ctemp.fillStyle = \"#AFAFAF\";\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  // Move the image to the main canvas, then clear out the temp canvas.\r\n  ctx.drawImage(temp, 0, 0, canvas.width, canvas.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Skill Background\r\n  ctx.fillStyle = \"#000000B2\";\r\n  ctx.fillRect(30, 618, 460, 71);\r\n\r\n  // Attack Icon\r\n  ctx.drawImage(images[2], 49, 630, 50, 50);\r\n  // Armor Icon\r\n  ctx.drawImage(images[3], 216, 630, 44, 50);\r\n  // Life Icon\r\n  ctx.drawImage(images[4], 368, 630, 50, 50);\r\n\r\n  ctx.font = '600 40px \"Open Sans\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = \"left\";\r\n  // Attack Value\r\n  ctx.fillText(troop.attack, 104, 667);\r\n  // Armor Value\r\n  ctx.fillText(troop.armor, 268, 667);\r\n  // Life Value\r\n  ctx.fillText(troop.life, 423, 667);\r\n\r\n  // Troop Name\r\n  ctx.font = '500 57px \"Raleway\"';\r\n  ctx.fillStyle = \"#FFF\";\r\n  ctx.textAlign = \"left\";\r\n  writeLines(ctx, 50, 630, 380, 57, troop.name, false);\r\n\r\n  // Troop Kingdom\r\n  ctx.font = '600 30px \"Open Sans\"';\r\n  ctx.fillStyle = \"#CCCCCCFF\";\r\n  ctx.fillText(troop.kingdom, 50, 608);\r\n\r\n  // Type\r\n  ctx.fillStyle = \"#000\";\r\n  ctx.textAlign = \"center\";\r\n  const type =\r\n    troop.type2 !== \"\" ? `${troop.type1} / ${troop.type2}` : troop.type1;\r\n  const txtSize = ctx.measureText(type).width;\r\n  ctx.fillText(type, 260, 722);\r\n\r\n  // Role Icons\r\n  // To color black, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  const leftRoleX = 210 - txtSize / 2;\r\n  const rightRoleX = 266 + txtSize / 2;\r\n  ctemp.drawImage(images[11], leftRoleX, 692, 44, 44);\r\n  ctemp.drawImage(images[11], rightRoleX, 692, 44, 44);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = \"#000000\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Trait Flags\r\n  // To color black/transparent, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[5], 30, 238, 120, 60);\r\n  ctemp.drawImage(images[5], 30, 303, 120, 60);\r\n  ctemp.drawImage(images[5], 30, 368, 120, 60);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = \"#000000\";\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 0.706;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // TraitIcon1\r\n  // To color Epic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[12], 45, 243, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities.Epic.color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.globalAlpha = 1;\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // TraitIcon2\r\n  // To color Legendary, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[13], 45, 313, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities.Legendary.color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // TraitIcon3\r\n  // To color Mythic, we draw on a hidden canvas, color it,\r\n  // then copy it to the full canvas.\r\n  ctemp.save();\r\n  ctemp.drawImage(images[14], 45, 373, 50, 50);\r\n  ctemp.globalCompositeOperation = \"source-in\";\r\n  ctemp.fillStyle = rarities.Mythic.color;\r\n  ctemp.fillRect(0, 0, temp.width, temp.height);\r\n  ctx.drawImage(temp, 0, 0, temp.width, temp.height);\r\n  ctemp.clearRect(0, 0, temp.width, temp.height);\r\n  ctemp.restore();\r\n\r\n  // Add the troop to the results.\r\n  const cresult = canvasResult.getContext(\"2d\");\r\n  cresult.clearRect(475, 0, canvas.width, canvas.height);\r\n  cresult.drawImage(canvas, 475, 0, canvas.width, canvas.height);\r\n\r\n  // Set the download URL.\r\n  setDownloadUrl(canvas.toDataURL(\"image/png\"));\r\n};\r\n\r\nconst getImageURL = troop => {\r\n  if (troop.troopimage !== null) {\r\n    return URL.createObjectURL(troop.troopimage);\r\n  }\r\n  // Else, use the default.\r\n  return `./assets/graphics/troopcard/infernus.png`;\r\n};\r\n\r\n// Render a spell as part of a full-size card (like in the troop list).\r\nconst CardTroop = ({ troop, setDownloadUrl, canvasResult }) => {\r\n  return (\r\n    <CardBase\r\n      troop={troop}\r\n      sources={coreSources.concat([\r\n        getImageURL(troop), // 10 - Troop Image\r\n        `./assets/graphics/troopcard/roles/${troop.role}.png`, // 11 - Role Icon\r\n        `./assets/graphics/troopcard/traits/${troop.trait1code}.png`, // 12 - Trait Icon 1\r\n        `./assets/graphics/troopcard/traits/${troop.trait2code}.png`, // 13 - Trait Icon 2\r\n        `./assets/graphics/troopcard/traits/${troop.trait3code}.png`, // 14 - Trait Icon 3\r\n        `./assets/graphics/troopcard/colors/${troop.colors}.png` // 15 - Mana Colors\r\n      ])}\r\n      renderFunction={renderTroop}\r\n      setDownloadUrl={setDownloadUrl}\r\n      canvasResult={canvasResult}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CardTroop;\r\n","import React from \"react\";\r\n\r\nimport CardTroop from \"./cards/CardTroop\";\r\nimport PreviewPanel from \"./PreviewBase\";\r\n\r\nconst PreviewTroop = ({ troop, canvasResult, className }) => {\r\n  const [downloadUrl, setDownloadUrl] = React.useState(\"\");\r\n\r\n  return (\r\n    <PreviewPanel\r\n      troopName={troop.name}\r\n      downloadUrl={downloadUrl}\r\n      className={className}\r\n    >\r\n      <CardTroop\r\n        troop={troop}\r\n        canvasResult={canvasResult}\r\n        setDownloadUrl={setDownloadUrl}\r\n      />\r\n    </PreviewPanel>\r\n  );\r\n};\r\n\r\nexport default PreviewTroop;\r\n","import React from \"react\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { Typography, CardContent, Grid, Card } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  formElement: {\r\n    margin: \"12px 0\"\r\n  }\r\n}));\r\n\r\nconst FormUploader = ({ troop, setTroop }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChangeFiles = files => {\r\n    if (files.length === 0) {\r\n      setTroop({ ...troop, troopimage: null });\r\n    } else {\r\n      setTroop({ ...troop, troopimage: files[0] });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item className={classes.formElement} xs={12}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h4\">Image</Typography>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            Preferred Size: 460x652\r\n          </Typography>\r\n          <DropzoneArea\r\n            dropzoneClass={classes.dropzone}\r\n            acceptedFiles={[\"image/*\"]}\r\n            filesLimit={1}\r\n            showAlerts\r\n            onChange={handleChangeFiles}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormUploader;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  Card,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  InputAdornment,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { Image } from \"../../../Icon\";\r\nimport FormUploader from \"./FormUploader\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\"\r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200\r\n    },\r\n    menuColor: {\r\n      width: 400\r\n    },\r\n    spellPower: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"50%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    dropzone: {\r\n      backgroundColor: \"#1f1f1f\"\r\n    },\r\n    formElement: {\r\n      margin: \"12px 0\"\r\n    }\r\n  };\r\n});\r\n\r\nconst FormSpell = ({ troop, setTroop, className }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleChange = name => event => {\r\n    setTroop({ ...troop, [name]: event.target.value });\r\n  };\r\n\r\n  const handleChangeCheckbox = name => event => {\r\n    setTroop({ ...troop, [name]: event.target.checked });\r\n  };\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      lg={8}\r\n      container\r\n      item\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Spell Name</Typography>\r\n            <TextField\r\n              id=\"form-spellname\"\r\n              value={troop.spellname}\r\n              onChange={handleChange(\"spellname\")}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              label=\"Spell Name\"\r\n              style={{ width: \"100%\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Spell Description</Typography>\r\n            <TextField\r\n              id=\"form-spelldesc\"\r\n              value={troop.spelldesc}\r\n              onChange={handleChange(\"spelldesc\")}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              multiline\r\n              helperText=\"{magic} specifies spell power\"\r\n              label=\"Spell Description\"\r\n              style={{ width: \"100%\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Magic</Typography>\r\n            <TextField\r\n              id=\"form-magic\"\r\n              value={troop.magic}\r\n              type=\"number\"\r\n              label=\"Magic\"\r\n              onChange={handleChange(\"magic\")}\r\n              margin=\"normal\"\r\n              style={{ width: \"100%\" }}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Image source=\"./assets/graphics/troopcard/magic.png\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Spell Power</Typography>\r\n            <TextField\r\n              id=\"form-spellmult\"\r\n              value={troop.spellmult}\r\n              type=\"number\"\r\n              label=\"Multiplier\"\r\n              onChange={handleChange(\"spellmult\")}\r\n              margin=\"normal\"\r\n              className={classes.spellPower}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              id=\"form-spellbase\"\r\n              value={troop.spellbase}\r\n              type=\"number\"\r\n              label=\"Base\"\r\n              onChange={handleChange(\"spellbase\")}\r\n              margin=\"normal\"\r\n              className={classes.spellPower}\r\n              variant=\"outlined\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={troop.spellrange}\r\n                  onChange={handleChangeCheckbox(\"spellrange\")}\r\n                  value=\"spellrange\"\r\n                />\r\n              }\r\n              label=\"Range?\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <FormUploader troop={troop} setTroop={setTroop} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormSpell;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  Card,\r\n  TextField,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { traitCodes } from \"../../../Values\";\r\n\r\nimport { Image } from \"../../../Icon\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\"\r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200\r\n    },\r\n    menuColor: {\r\n      width: 400\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: \"33%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"33%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"66%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"50%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    traitcode: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"80px\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    traitname: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: `calc(100% - 80px)`,\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    formElement: {\r\n      margin: \"12px 0\"\r\n    }\r\n  };\r\n});\r\n\r\nconst FormTrait = ({ index, troop, setTroop }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = name => event => {\r\n    setTroop({ ...troop, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      className={classes.formElement}\r\n      xs={12}\r\n      sm={12}\r\n      md={6}\r\n      lg={4}\r\n      xl={4}\r\n    >\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h4\">Trait 1</Typography>\r\n          <TextField\r\n            id=\"form-trait1code\"\r\n            value={troop[`trait${index}code`]}\r\n            select\r\n            label=\"Trait Icon\"\r\n            onChange={handleChange(\"trait1code\")}\r\n            margin=\"normal\"\r\n            className={classes.traitcode}\r\n            variant=\"outlined\"\r\n          >\r\n            {traitCodes.map(code => (\r\n              <MenuItem key={code} value={code}>\r\n                <Image\r\n                  source={`./assets/graphics/troopcard/traits/${code}.png`}\r\n                />\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n          <TextField\r\n            id=\"form-trait1name\"\r\n            value={troop.trait1name}\r\n            onChange={handleChange(\"trait1name\")}\r\n            margin=\"normal\"\r\n            type=\"text\"\r\n            label=\"Trait Name\"\r\n            className={classes.traitname}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            id=\"form-trait1desc\"\r\n            value={troop.trait1desc}\r\n            onChange={handleChange(\"trait1desc\")}\r\n            margin=\"normal\"\r\n            type=\"text\"\r\n            multiline\r\n            label=\"Trait Description\"\r\n            style={{ width: \"100%\" }}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormTrait;\r\n","import React from \"react\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport FormTrait from \"./FormTrait\";\r\n\r\nconst FormTraits = ({ troop, setTroop, className }) => {\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      lg={8}\r\n      container\r\n      item\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <FormTrait index={1} troop={troop} setTroop={setTroop} />\r\n      <FormTrait index={2} troop={troop} setTroop={setTroop} />\r\n      <FormTrait index={3} troop={troop} setTroop={setTroop} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormTraits;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  CardContent,\r\n  Grid,\r\n  Card,\r\n  TextField,\r\n  MenuItem,\r\n  InputAdornment,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { colors, roles, rarities } from \"../../../Values\";\r\nimport { Image } from \"../../../Icon\";\r\nimport FormUploader from \"./FormUploader\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    appbar: {\r\n      elevation: 0,\r\n      position: \"fixed\"\r\n    },\r\n    toolbar: {\r\n      paddingLeft: \"8px\",\r\n      paddingRight: \"8px\"\r\n    },\r\n    appbarText: {\r\n      alignSelf: \"center\",\r\n      marginRight: \"10px\"\r\n    },\r\n    input: {\r\n      marginLeft: \"auto\"\r\n    },\r\n    menu: {\r\n      width: 200\r\n    },\r\n    menuColor: {\r\n      width: 400\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: \"33%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"33%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"66%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"50%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    trait: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(\"xl\")]: {\r\n        width: \"33%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    dropzone: {\r\n      backgroundColor: \"#1f1f1f\"\r\n    },\r\n    formElement: {\r\n      margin: \"12px 0\"\r\n    }\r\n  };\r\n});\r\n\r\nconst FormTroop = ({ troop, setTroop, className }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n  const handleChange = name => event => {\r\n    setTroop({ ...troop, [name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      lg={8}\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      container\r\n      item\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Name</Typography>\r\n            <TextField\r\n              id=\"form-name\"\r\n              value={troop.name}\r\n              onChange={handleChange(\"name\")}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              label=\"Name\"\r\n              style={{ width: \"100%\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Kingdom</Typography>\r\n            <TextField\r\n              id=\"form-kingdom\"\r\n              value={troop.kingdom}\r\n              onChange={handleChange(\"kingdom\")}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              label=\"Kingdom\"\r\n              style={{ width: \"100%\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Rarity</Typography>\r\n            <TextField\r\n              id=\"form-rarity\"\r\n              value={troop.rarity}\r\n              select\r\n              label=\"Rarity\"\r\n              onChange={handleChange(\"rarity\")}\r\n              margin=\"normal\"\r\n              style={{ width: \"100%\" }}\r\n              variant=\"outlined\"\r\n            >\r\n              {Object.keys(rarities).map(option => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={3}\r\n        xl={3}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Level</Typography>\r\n            <TextField\r\n              id=\"form-level\"\r\n              value={troop.level}\r\n              type=\"number\"\r\n              onChange={handleChange(\"level\")}\r\n              margin=\"normal\"\r\n              label=\"Level\"\r\n              style={{ width: \"100%\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={3}\r\n        xl={3}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Role</Typography>\r\n            <TextField\r\n              id=\"form-role\"\r\n              value={troop.role}\r\n              select\r\n              label=\"Role\"\r\n              onChange={handleChange(\"role\")}\r\n              margin=\"normal\"\r\n              style={{ width: \"100%\" }}\r\n              variant=\"outlined\"\r\n            >\r\n              {roles.map(option => (\r\n                <MenuItem key={option} value={option}>\r\n                  <Image\r\n                    source={`./assets/graphics/troopcard/roles/${option}.png`}\r\n                  />\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={6}\r\n        xl={5}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Mana Cost</Typography>\r\n            <TextField\r\n              id=\"form-cost\"\r\n              value={troop.cost}\r\n              type=\"number\"\r\n              label=\"Cost\"\r\n              onChange={handleChange(\"cost\")}\r\n              margin=\"normal\"\r\n              className={classes.manaCost}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              id=\"form-colors\"\r\n              value={troop.colors}\r\n              select\r\n              label=\"Colors\"\r\n              onChange={handleChange(\"colors\")}\r\n              SelectProps={{\r\n                MenuProps: {\r\n                  className: classes.menuColor\r\n                }\r\n              }}\r\n              margin=\"normal\"\r\n              className={classes.manaColors}\r\n              variant=\"outlined\"\r\n            >\r\n              {colors.map(option => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  <Image\r\n                    source={`./assets/graphics/troopcard/colors/${option.value}.png`}\r\n                  />\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item className={classes.formElement} xs={12} sm={12} md={6} lg={4}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Types</Typography>\r\n            <TextField\r\n              id=\"form-type1\"\r\n              value={troop.type1}\r\n              onChange={handleChange(\"type1\")}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              label=\"Type 1\"\r\n              className={classes.typeField}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              id=\"form-type2\"\r\n              value={troop.type2}\r\n              onChange={handleChange(\"type2\")}\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              label=\"Type 2 (Optional)\"\r\n              className={classes.typeField}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        className={classes.formElement}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={5}\r\n        xl={5}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h4\">Skills</Typography>\r\n            <TextField\r\n              id=\"form-attack\"\r\n              value={troop.attack}\r\n              type=\"number\"\r\n              label=\"Attack\"\r\n              onChange={handleChange(\"attack\")}\r\n              margin=\"normal\"\r\n              className={classes.skill}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Image source=\"./assets/graphics/troopcard/attack.png\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              id=\"form-armor\"\r\n              value={troop.armor}\r\n              type=\"number\"\r\n              label=\"Armor\"\r\n              onChange={handleChange(\"armor\")}\r\n              margin=\"normal\"\r\n              className={classes.skill}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Image source=\"./assets/graphics/troopcard/armor.png\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              id=\"form-life\"\r\n              value={troop.life}\r\n              type=\"number\"\r\n              label=\"Life\"\r\n              onChange={handleChange(\"life\")}\r\n              margin=\"normal\"\r\n              className={classes.skill}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Image source=\"./assets/graphics/troopcard/life.png\" />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <FormUploader troop={troop} setTroop={setTroop} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormTroop;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Toolbar, Tabs, Tab } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport NavBar from \"./layout/NavBar\";\r\nimport TabResult from \"./layout/TabResult\";\r\nimport TabView from \"./layout/TabBase\";\r\nimport PreviewSpell from \"./layout/areas/preview/PreviewSpell\";\r\nimport PreviewTraits from \"./layout/areas/preview/PreviewTraits\";\r\nimport PreviewTroop from \"./layout/areas/preview/PreviewTroop\";\r\nimport FormSpell from \"./layout/areas/form/FormSpell\";\r\nimport FormTraits from \"./layout/areas/form/FormTraits\";\r\nimport FormTroop from \"./layout/areas/form/FormTroop\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    maxHeight: `calc(100vh - 64px)`,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"100%\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: `calc(100vw - 240px)`\r\n    }\r\n  },\r\n  previewGridItem: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      order: 1\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      order: 2\r\n    },\r\n    padding: theme.spacing(3),\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      order: 2,\r\n      margin: \"0\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      margin: \"0 -12px\",\r\n      order: 1\r\n    }\r\n  },\r\n  grid: {\r\n    display: \"flex\"\r\n  },\r\n  tabView: {\r\n    marginBottom: \"22vh\"\r\n  }\r\n}));\r\n\r\n// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\r\nfunction useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value, delay]\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [troop, setTroop] = React.useState({\r\n    name: \"Infernus\",\r\n    kingdom: \"Broken Spire\",\r\n    rarity: \"Mythic\",\r\n    level: \"20\",\r\n\r\n    role: \"Mage\",\r\n    cost: \"24\",\r\n    colors: \"RedYellowPurple\",\r\n\r\n    type1: \"Divine\",\r\n    type2: \"Elemental\",\r\n\r\n    attack: \"40\",\r\n    armor: \"40\",\r\n    life: \"40\",\r\n\r\n    troopimage: null,\r\n    magic: \"25\",\r\n\r\n    spellname: \"Eruption\",\r\n    spelldesc:\r\n      \"Deal {magic} damage to 2 random enemies, and half of that damage to adjacent enemies. Explode 5 random Gems.\",\r\n    spellmult: \"1\",\r\n    spellbase: \"10\",\r\n    spellrange: false,\r\n\r\n    spellimage: null,\r\n    trait1name: \"Elemental Shield\",\r\n    trait1desc: \"Allied Elementals gain 2 Armor.\",\r\n    trait1code: \"elementalbond\",\r\n    trait2name: \"Fiery Death\",\r\n    trait2desc: \"Summon a Firestorm when an enemy dies.\",\r\n    trait2code: \"firebrand\",\r\n    trait3name: \"Conflagration\",\r\n    trait3desc: \"Burn all enemies on 4 or 5 Gem matches.\",\r\n    trait3code: \"molten\"\r\n  });\r\n\r\n  const [currentTab, setCurrentTab] = React.useState(1);\r\n\r\n  const debouncedTroop = useDebounce(troop, 500);\r\n\r\n  const handleTabEvent = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n\r\n  const canvasResult = React.createRef();\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Toolbar />\r\n      <Container maxWidth={false} className={classes.content}>\r\n        <Tabs\r\n          value={currentTab}\r\n          onChange={handleTabEvent}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab label=\"Spell\" id=\"tab-0\" />\r\n          <Tab label=\"Troop\" id=\"tab-1\" />\r\n          <Tab label=\"Traits\" id=\"tab-2\" />\r\n          <Tab label=\"Result\" id=\"tab-3\" />\r\n        </Tabs>\r\n        <SwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={currentTab}\r\n          onChangeIndex={setCurrentTab}\r\n        >\r\n          <TabView value={currentTab} index={0} dir={theme.direction}>\r\n            <FormSpell\r\n              troop={troop}\r\n              className={classes.formGridItem}\r\n              setTroop={setTroop}\r\n            />\r\n            <PreviewSpell\r\n              troop={debouncedTroop}\r\n              canvasResult={canvasResult}\r\n              className={classes.previewGridItem}\r\n            />\r\n          </TabView>\r\n          <TabView value={currentTab} index={1} dir={theme.direction}>\r\n            <FormTroop\r\n              troop={troop}\r\n              className={classes.formGridItem}\r\n              setTroop={setTroop}\r\n            />\r\n            <PreviewTroop\r\n              troop={debouncedTroop}\r\n              canvasResult={canvasResult}\r\n              className={classes.previewGridItem}\r\n            />\r\n          </TabView>\r\n          <TabView value={currentTab} index={2} dir={theme.direction}>\r\n            <FormTraits\r\n              troop={troop}\r\n              className={classes.formGridItem}\r\n              setTroop={setTroop}\r\n            />\r\n            <PreviewTraits\r\n              troop={debouncedTroop}\r\n              canvasResult={canvasResult}\r\n              className={classes.previewGridItem}\r\n            />\r\n          </TabView>\r\n          <TabView value={currentTab} index={3} dir={theme.direction}>\r\n            <TabResult\r\n              className={classes.tabView}\r\n              canvasResult={canvasResult}\r\n              troop={troop}\r\n            />\r\n          </TabView>\r\n        </SwipeableViews>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport { orange, blueGrey } from \"@material-ui/core/colors\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport App from \"./components/App\";\n\n// CSS\nimport \"./css/style.css\";\nimport \"./css/google-fonts.css\";\nimport \"./css/nerd-fonts.min.css\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: blueGrey,\n    secondary: orange\n  },\n  zIndex: {\n    appBar: 1\n  }\n});\n\nfunction Index() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </MuiThemeProvider>\n  );\n}\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}