{"version":3,"sources":["components/Util.js","components/layout/NavBar.js","components/layout/areas/cards/CardBase.js","components/layout/areas/PreviewButtonBar.js","components/layout/TabResult.js","components/layout/TabBase.js","components/layout/areas/FormUploader.js","components/layout/areas/FormSpell.js","components/Values.js","components/layout/areas/FormTraitAutosuggest.js","components/layout/areas/FormTrait.js","components/layout/areas/FormTraits.js","components/layout/areas/FormTroop.js","components/layout/areas/cards/CardSpell.js","components/layout/areas/PreviewBase.js","components/layout/areas/PreviewSpell.js","components/layout/areas/cards/CardTraits.js","components/layout/areas/PreviewTraits.js","components/layout/areas/cards/CardTroop.js","components/layout/areas/PreviewTroop.js","components/App.js","serviceWorker.js","index.js"],"names":["measureText","text","fontWeight","fontSize","fontFamily","context","canvas","document","createElement","getContext","font","width","hexToRgb","hex","result","exec","r","parseInt","g","b","Icon","memo","icon","className","Image","source","style","alt","src","validateFieldLength","maxLength","event","target","value","length","slice","FormText","id","fieldName","onChange","label","type","onInput","multiline","helperText","InputProps","TextField","e","margin","variant","prevState","nextState","isEqual","FormSelect","children","SelectProps","inputProps","select","FormCheckbox","checked","FormControlLabel","control","Checkbox","GridCard","ref","gridClassName","cardClassName","xs","sm","md","lg","xl","Grid","item","Card","CardContent","useStyles","makeStyles","theme","appbar","elevation","position","toolbar","paddingLeft","paddingRight","appbarText","alignSelf","marginRight","input","marginLeft","image","height","spacing","borderRadius","overflow","NavBar","classes","useTheme","mediaQueryLg","useMediaQuery","breakpoints","up","AppBar","color","Toolbar","Typography","card","paddingBottom","CardLayer","layerRef","x","y","loadingY","current","loaded","toDataURL","CardImage","crop","onLoad","useImage","status","useRef","useEffect","cache","getLayer","batchDraw","filters","Konva","Filters","RGB","red","green","blue","CardImageRotating","angularRate","Animation","frame","angleDiff","timeDiff","rotate","start","offset","CardMultiStyleText","textArray","yCenter","xCenter","fontsLoaded","topYOffset","reduce","sum","textLine","Math","max","map","phrase","size","textLineIndex","maxFontSize","yPos","lineWidth","weight","family","leftXOffset","phraseIndex","xPos","key","CardText","opacity","horizontalAlign","verticalAlign","shadowColor","shadowOffset","fill","fontStyle","align","CardTextRef","forwardRef","CardBase","Box","scaleX","buttonGrid","buttonIcon","button","display","PreviewButtonBar","troopName","displayLayer","Tooltip","title","aria-label","Button","onClick","link","download","href","body","appendChild","click","removeChild","cardBox","padding","mainCard","TabResult","troop","spellLayer","troopLayer","traitsLayer","resultStageRef","container","justify","name","renderThumb","cursor","backgroundColor","TabList","currentTab","setCurrentTab","Tabs","newValue","indicatorColor","textColor","centered","Tab","ScrollingContainer","renderThumbVertical","TabView","index","dir","component","role","hidden","aria-labelledby","direction","formElement","dropzone","FormUploaderTroop","handleTroopChange","dimensions","fieldKey","FormUploaderSpell","FormUploader","handleChangeFiles","useCallback","files","gutterBottom","dropzoneClass","acceptedFiles","filesLimit","showAlerts","spellPower","fullField","fieldIcon","FormSpell","spellname","spelldesc","magic","startAdornment","InputAdornment","spellmult","spellbase","spellrange","colors","rarities","Common","pips","Rare","Epic","Legendary","Mythic","Doomed","roles","traits","code","desc","description","getSuggestionValue","suggestion","renderInputComponent","inputRef","other","fullWidth","node","renderSuggestion","query","isHighlighted","matches","match","parts","parse","MenuItem","selected","part","highlight","root","flexGrow","suggestionsContainerOpen","zIndex","marginTop","left","right","suggestionsList","listStyleType","divider","FormTraitAutosuggest","React","useState","state","setState","stateSuggestions","setSuggestions","handleChange","handleSuggestionSelected","suggestions","onSuggestionsFetchRequested","inputValue","deburr","trim","toLowerCase","inputLength","count","filter","keep","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","placeholder","renderSuggestionsContainer","options","Paper","containerProps","square","traitName","traitDesc","traitIcon","iconSelector","alignItems","FormTrait","traitname","FormTraits","menuColor","skill","manaCost","manaColors","typeField","FormTroop","kingdom","rarity","Object","keys","option","level","cost","MenuProps","type1","type2","attack","armor","life","getImageURL","spellimage","URL","createObjectURL","CardSpellNameText","baseFontSize","textRef","stable","textArr","oldState","CardSpellDescText","cardWidth","innerWidth","magicFontWeight","magicColor","baseDisplayRef","calculateMagicText","magicDamage","floor","toString","baseDisplay","replace","split","forEach","word","test","push","calculateMagicPhrases","lineLengths","lineIndexes","lineLength","pop","lineIndex","splitSpellDesc","CardSpell","loadingLayer","show","hide","draw","PreviewBase","PreviewSpell","CardTraitDescText","CardTraits","trait1code","trait2code","trait3code","trait1name","trait1desc","trait2name","trait2desc","trait3name","trait3desc","PreviewTraits","troopimage","CardTroop","typeRef","typeText","typeTextWidth","setTypeTextWidth","textWidth","PreviewTroop","content","previewGridItem","order","paddingTop","marginBottom","formGridItem","grid","tabView","troopInfernus","App","setTroop","field","layerSpellDisplay","layerTroopDisplay","layerTraitsDisplay","setFontsLoaded","WebFontLoader","load","google","families","fontactive","setTimeout","Container","maxWidth","swipeableView","axis","onChangeIndex","Boolean","window","location","hostname","createMuiTheme","palette","primary","blueGrey","secondary","orange","appBar","navigator","serviceWorker","ready","then","registration","unregister","ReactDOM","render","CssBaseline","getElementById"],"mappings":"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AAW,CACTpK,MAAO,UACPiK,KAAM,GAERI,OAAQ,CACNrK,MAAO,UACPiK,KAAM,GAERK,OAAQ,CACNtK,MAAO,UACPiK,KAAM,IAIGM,GAAQ,CACnB,WACA,WACA,YACA,OACA,UACA,UACA,UACA,YACA,WAIWC,GAAS,CACpB,CACE7D,KAAM,eACN8D,KAAM,aACNC,KAAM,6CAER,CACE/D,KAAM,WACN8D,KAAM,SACNC,KAAM,2CAER,CACE/D,KAAM,SACN8D,KAAM,UACNC,KAAM,iDAER,CACE/D,KAAM,QACN8D,KAAM,YACNC,KAAM,qCAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,yCAER,CACE/D,KAAM,QACN8D,KAAM,QACNC,KAAM,qCAER,CACE/D,KAAM,YACN8D,KAAM,WACNC,KAAM,uCAER,CACE/D,KAAM,YACN8D,KAAM,WACNC,KAAM,qCAER,CACE/D,KAAM,WACN8D,KAAM,UACNC,KAAM,mDAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,sCAER,CAAE/D,KAAM,QAAS8D,KAAM,QAASE,YAAa,wBAC7C,CACEhE,KAAM,mBACN8D,KAAM,eACNC,KAAM,8CAER,CACE/D,KAAM,oBACN8D,KAAM,aACNC,KACE,6FAEJ,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,0CAER,CACE/D,KAAM,oBACN8D,KAAM,OACNC,KAAM,qCAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,mDAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,sCAER,CACE/D,KAAM,aACN8D,KAAM,cACNC,KAAM,uCAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,uDAER,CACE/D,KAAM,UACN8D,KAAM,cACNC,KAAM,0CAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,mDAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,4CAER,CACE/D,KAAM,iBACN8D,KAAM,UACNC,KAAM,4BAER,CACE/D,KAAM,iBACN8D,KAAM,gBACNC,KAAM,iDAER,CACE/D,KAAM,gBACN8D,KAAM,YACNC,KAAM,0CAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,qCAER,CACE/D,KAAM,kBACN8D,KAAM,gBACNC,KAAM,gEAER,CACE/D,KAAM,mBACN8D,KAAM,iBACNC,KAAM,+DAER,CACE/D,KAAM,mBACN8D,KAAM,iBACNC,KAAM,sDAER,CACE/D,KAAM,gBACN8D,KAAM,cACNC,KAAM,4CAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,sEAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,mDAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,oCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,iCAER,CACE/D,KAAM,SACN8D,KAAM,YACNC,KAAM,oDAER,CACE/D,KAAM,aACN8D,KAAM,UACNC,KAAM,mDAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,6CAER,CACE/D,KAAM,qBACN8D,KAAM,aACNC,KAAM,oEAER,CACE/D,KAAM,WACN8D,KAAM,cACNC,KAAM,qCAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,8BAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,+BAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,wCAER,CACE/D,KAAM,eACN8D,KAAM,gBACNC,KAAM,qCAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,iDAER,CACE/D,KAAM,MACN8D,KAAM,MACNC,KAAM,sCAER,CACE/D,KAAM,eACN8D,KAAM,SACNC,KAAM,+DAER,CACE/D,KAAM,kBACN8D,KAAM,eACNC,KAAM,kEAER,CACE/D,KAAM,oBACN8D,KAAM,OACNC,KAAM,iEAER,CACE/D,KAAM,kBACN8D,KAAM,aACNC,KAAM,gCAER,CACE/D,KAAM,YACN8D,KAAM,SACNC,KAAM,mCAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,gDAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,yCAER,CACE/D,KAAM,gBACN8D,KAAM,cACNC,KACE,8EAEJ,CACE/D,KAAM,OACN8D,KAAM,aACNC,KAAM,uCAER,CACE/D,KAAM,eACN8D,KAAM,WACNC,KAAM,wDAER,CACE/D,KAAM,eACN8D,KAAM,WACNC,KAAM,2CAER,CACE/D,KAAM,iBACN8D,KAAM,UACNC,KAAM,iDAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KAAM,+CAER,CACE/D,KAAM,gBACN8D,KAAM,UACNC,KAAM,kDAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,6CAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,+CAER,CACE/D,KAAM,iBACN8D,KAAM,YACNC,KAAM,6CAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,oDAER,CACE/D,KAAM,YACN8D,KAAM,eACNC,KAAM,oDAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,oDAER,CACE/D,KAAM,WACN8D,KAAM,aACNC,KAAM,oDAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,oDAER,CACE/D,KAAM,aACN8D,KAAM,cACNC,KAAM,oDAER,CACE/D,KAAM,YACN8D,KAAM,SACNC,KAAM,mDAER,CACE/D,KAAM,qBACN8D,KAAM,UACNC,KAAM,oCAER,CACE/D,KAAM,iBACN8D,KAAM,eACNC,KAAM,8CAER,CACE/D,KAAM,mBACN8D,KAAM,eACNC,KAAM,yCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,gCAER,CACE/D,KAAM,iBACN8D,KAAM,cACNC,KAAM,iCAER,CACE/D,KAAM,iBACN8D,KAAM,gBACNC,KAAM,0CAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,gDAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,mEAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KAAM,+DAER,CACE/D,KAAM,iBACN8D,KAAM,aACNC,KAAM,oDAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,2CAER,CACE/D,KAAM,QACN8D,KAAM,QACNC,KAAM,qCAER,CACE/D,KAAM,gBACN8D,KAAM,WACNC,KAAM,0DAER,CACE/D,KAAM,UACN8D,KAAM,eACNC,KAAM,6CAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,iDAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,yCAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,8CAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,oCAER,CACE/D,KAAM,gBACN8D,KAAM,SACNC,KAAM,2CAER,CACE/D,KAAM,iBACN8D,KAAM,gBACNC,KAAM,kCAER,CACE/D,KAAM,mBACN8D,KAAM,gBACNC,KAAM,mCAER,CACE/D,KAAM,mBACN8D,KAAM,kBACNC,KAAM,4CAER,CACE/D,KAAM,YACN8D,KAAM,SACNC,KAAM,2DAER,CACE/D,KAAM,aACN8D,KAAM,SACNC,KAAM,6DAER,CACE/D,KAAM,gBACN8D,KAAM,WACNC,KAAM,qCAER,CACE/D,KAAM,gBACN8D,KAAM,cACNC,KAAM,oDAER,CACE/D,KAAM,gBACN8D,KAAM,SACNC,KAAM,yDAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,2CAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,8BAER,CACE/D,KAAM,mBACN8D,KAAM,OACNC,KAAM,6CAER,CACE/D,KAAM,eACN8D,KAAM,SACNC,KAAM,4CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,+BAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,gCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,0CAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,oDAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,8BAER,CACE/D,KAAM,gBACN8D,KAAM,SACNC,KAAM,wDAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,0CAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,uCAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,0CAER,CACE/D,KAAM,YACN8D,KAAM,gBACNC,KAAM,+CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,gDAER,CACE/D,KAAM,cACN8D,KAAM,gBACNC,KAAM,gEAER,CACE/D,KAAM,aACN8D,KAAM,WACNC,KAAM,oDAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,4CAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,4DAER,CACE/D,KAAM,mBACN8D,KAAM,WACNC,KAAM,iDAER,CACE/D,KAAM,eACN8D,KAAM,WACNC,KAAM,wDAER,CACE/D,KAAM,gBACN8D,KAAM,SACNC,KAAM,6CAER,CACE/D,KAAM,cACN8D,KAAM,SACNC,KAAM,2DAER,CACE/D,KAAM,cACN8D,KAAM,gBACNC,KAAM,sCAER,CACE/D,KAAM,YACN8D,KAAM,WACNC,KAAM,0DAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,+CAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,uCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,uCAER,CACE/D,KAAM,gBACN8D,KAAM,UACNC,KAAM,wCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,sCAER,CACE/D,KAAM,aACN8D,KAAM,eACNC,KAAM,0CAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,uDAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,8CAER,CACE/D,KAAM,WACN8D,KAAM,eACNC,KAAM,uDAER,CACE/D,KAAM,SACN8D,KAAM,YACNC,KAAM,iDAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,mDAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,mEAER,CACE/D,KAAM,sBACN8D,KAAM,WACNC,KACE,wFAEJ,CACE/D,KAAM,mBACN8D,KAAM,aACNC,KACE,qFAEJ,CACE/D,KAAM,iBACN8D,KAAM,aACNC,KACE,sFAEJ,CACE/D,KAAM,mBACN8D,KAAM,WACNC,KACE,wFAEJ,CACE/D,KAAM,oBACN8D,KAAM,WACNC,KACE,uFAEJ,CACE/D,KAAM,mBACN8D,KAAM,cACNC,KACE,uFAEJ,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,qCAER,CACE/D,KAAM,aACN8D,KAAM,UACNC,KAAM,iDAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,sCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,+BAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,4CAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,gCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,wCAER,CACE/D,KAAM,WACN8D,KAAM,aACNC,KAAM,6CAER,CACE/D,KAAM,QACN8D,KAAM,QACNC,KAAM,qCAER,CACE/D,KAAM,YACN8D,KAAM,gBACNC,KAAM,6CAER,CACE/D,KAAM,OACN8D,KAAM,OACNC,KAAM,sDAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,+BAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,+CAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,gCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,yCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,mDAER,CACE/D,KAAM,oBACN8D,KAAM,aACNC,KACE,iFAEJ,CACE/D,KAAM,iBACN8D,KAAM,YACNC,KAAM,iEAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,8CAER,CACE/D,KAAM,mBACN8D,KAAM,cACNC,KAAM,gDAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,+BAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,gCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,yCAER,CACE/D,KAAM,gBACN8D,KAAM,YACNC,KAAM,uCAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KAAM,0CAER,CACE/D,KAAM,iBACN8D,KAAM,cACNC,KAAM,oEAER,CACE/D,KAAM,YACN8D,KAAM,QACNC,KAAM,2DAER,CACE/D,KAAM,aACN8D,KAAM,UACNC,KAAM,2CAER,CACE/D,KAAM,sBACN8D,KAAM,cACNC,KAAM,qCAER,CACE/D,KAAM,iBACN8D,KAAM,gBACNC,KAAM,kCAER,CACE/D,KAAM,mBACN8D,KAAM,gBACNC,KAAM,mCAER,CACE/D,KAAM,mBACN8D,KAAM,kBACNC,KAAM,4CAER,CACE/D,KAAM,WACN8D,KAAM,UACNC,KAAM,6BAER,CACE/D,KAAM,aACN8D,KAAM,UACNC,KAAM,8BAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,uCAER,CACE/D,KAAM,YACN8D,KAAM,cACNC,KAAM,yCAER,CACE/D,KAAM,iBACN8D,KAAM,UACNC,KAAM,+DAER,CACE/D,KAAM,qBACN8D,KAAM,YACNC,KAAM,gDAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,iCAER,CACE/D,KAAM,WACN8D,KAAM,cACNC,KAAM,uCAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,6CAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,mDAER,CACE/D,KAAM,iBACN8D,KAAM,UACNC,KAAM,0CAER,CAAE/D,KAAM,WAAY8D,KAAM,UAAWE,YAAa,yBAClD,CACEhE,KAAM,aACN8D,KAAM,SACNC,KAAM,0DAER,CACE/D,KAAM,gBACN8D,KAAM,SACNC,KAAM,mDAER,CACE/D,KAAM,OACN8D,KAAM,OACNC,KAAM,sCAER,CACE/D,KAAM,WACN8D,KAAM,UACNC,KAAM,2DAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,8BAER,CAAE/D,KAAM,OAAQ8D,KAAM,OAAQE,YAAa,gCAC3C,CACEhE,KAAM,cACN8D,KAAM,YACNC,KAAM,sCAER,CAAE/D,KAAM,WAAY8D,KAAM,aAAcE,YAAa,kBACrD,CAAEhE,KAAM,WAAY8D,KAAM,UAAWE,YAAa,2BAClD,CACEhE,KAAM,WACN8D,KAAM,aACNC,KAAM,qEAER,CACE/D,KAAM,aACN8D,KAAM,UACNC,KAAM,4BAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,qCAER,CACE/D,KAAM,YACN8D,KAAM,UACNC,KAAM,gDAER,CACE/D,KAAM,gBACN8D,KAAM,SACNC,KAAM,iDAER,CACE/D,KAAM,WACN8D,KAAM,YACNC,KAAM,0DAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,8CAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,0CAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,uCAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,oCAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,kCAER,CACE/D,KAAM,YACN8D,KAAM,WACNC,KAAM,6CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,mCAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,gDAER,CACE/D,KAAM,cACN8D,KAAM,WACNC,KAAM,6CAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,wCAER,CACE/D,KAAM,cACN8D,KAAM,SACNC,KAAM,gDAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KACE,2EAEJ,CACE/D,KAAM,QACN8D,KAAM,eACNC,KAAM,4DAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KAAM,mEAER,CACE/D,KAAM,iBACN8D,KAAM,cACNC,KAAM,sDAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,2DAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,qCAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,yCAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,yCAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,yCAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,yCAER,CACE/D,KAAM,WACN8D,KAAM,aACNC,KAAM,yCAER,CACE/D,KAAM,aACN8D,KAAM,WACNC,KAAM,0CAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,yCAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,yCAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,mEAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,8CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,wDAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,4BAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,oCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,mDAER,CACE/D,KAAM,UACN8D,KAAM,SACNC,KAAM,6CAER,CACE/D,KAAM,iBACN8D,KAAM,eACNC,KAAM,gEAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,8BAER,CACE/D,KAAM,aACN8D,KAAM,UACNC,KAAM,0CAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,iEAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,+BAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,wCAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,gCAER,CACE/D,KAAM,QACN8D,KAAM,aACNC,KAAM,kCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,+BAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,8BAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,gCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,yCAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,qCAER,CACE/D,KAAM,YACN8D,KAAM,eACNC,KAAM,gEAER,CACE/D,KAAM,kBACN8D,KAAM,aACNC,KAAM,qEAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,qCAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,4CAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,qDAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,8CAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KAAM,4CAER,CACE/D,KAAM,iBACN8D,KAAM,YACNC,KAAM,mCAER,CACE/D,KAAM,cACN8D,KAAM,WACNC,KAAM,oDAER,CACE/D,KAAM,eACN8D,KAAM,WACNC,KAAM,8CAER,CACE/D,KAAM,gBACN8D,KAAM,UACNC,KAAM,6CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,yDAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,yCAER,CACE/D,KAAM,WACN8D,KAAM,aACNC,KAAM,kDAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,gEAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,mDAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,+DAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,mDAER,CACE/D,KAAM,aACN8D,KAAM,UACNC,KAAM,qCAER,CACE/D,KAAM,OACN8D,KAAM,OACNC,KAAM,sCAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,8BAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,+BAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,wCAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,8CAER,CACE/D,KAAM,OACN8D,KAAM,cACNC,KAAM,0DAER,CACE/D,KAAM,gBACN8D,KAAM,WACNC,KAAM,wDAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,qCAER,CACE/D,KAAM,WACN8D,KAAM,aACNC,KAAM,wCAER,CACE/D,KAAM,YACN8D,KAAM,WACNC,KAAM,gDAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,0CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,kCAER,CACE/D,KAAM,WACN8D,KAAM,aACNC,KAAM,gDAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,uCAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,wCAER,CAAE/D,KAAM,SAAU8D,KAAM,SAAUE,YAAa,wBAC/C,CACEhE,KAAM,SACN8D,KAAM,UACNC,KAAM,sDAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,wDAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,uBAER,CACE/D,KAAM,iBACN8D,KAAM,SACNC,KAAM,gCAER,CACE/D,KAAM,gBACN8D,KAAM,UACNC,KAAM,mDAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,6CAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,0CAER,CACE/D,KAAM,eACN8D,KAAM,WACNC,KAAM,0CAER,CAAE/D,KAAM,YAAa8D,KAAM,YAAaE,YAAa,uBACrD,CACEhE,KAAM,YACN8D,KAAM,aACNC,KAAM,uCAER,CACE/D,KAAM,cACN8D,KAAM,eACNC,KAAM,2CAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KACE,oFAEJ,CACE/D,KAAM,OACN8D,KAAM,aACNC,KAAM,oDAER,CAAE/D,KAAM,OAAQ8D,KAAM,OAAQE,YAAa,8BAC3C,CACEhE,KAAM,cACN8D,KAAM,SACNC,KAAM,+DAER,CACE/D,KAAM,gBACN8D,KAAM,gBACNC,KACE,0EAEJ,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,yCAER,CACE/D,KAAM,iBACN8D,KAAM,UACNC,KAAM,mCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,+BAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,gCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,yCAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,yCAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,8CAER,CACE/D,KAAM,gBACN8D,KAAM,UACNC,KAAM,uCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,4DAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,mCAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,4DAER,CACE/D,KAAM,gBACN8D,KAAM,SACNC,KAAM,2BAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,mDAER,CACE/D,KAAM,iBACN8D,KAAM,WACNC,KAAM,uDAER,CACE/D,KAAM,mBACN8D,KAAM,WACNC,KAAM,+CAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,8CAER,CACE/D,KAAM,iBACN8D,KAAM,eACNC,KAAM,0CAER,CACE/D,KAAM,gBACN8D,KAAM,gBACNC,KAAM,wDAER,CACE/D,KAAM,iBACN8D,KAAM,UACNC,KAAM,uDAER,CACE/D,KAAM,cACN8D,KAAM,eACNC,KAAM,2CAER,CACE/D,KAAM,gBACN8D,KAAM,YACNC,KAAM,iCAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,qCAER,CACE/D,KAAM,aACN8D,KAAM,cACNC,KAAM,0CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,uCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,qCAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,mDAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,sCAER,CACE/D,KAAM,cACN8D,KAAM,cACNC,KAAM,iDAER,CACE/D,KAAM,iBACN8D,KAAM,YACNC,KAAM,mCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,qDAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,gCAER,CACE/D,KAAM,gBACN8D,KAAM,YACNC,KAAM,oDAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,0DAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,iCAER,CACE/D,KAAM,kBACN8D,KAAM,iBACNC,KAAM,2CAER,CACE/D,KAAM,iBACN8D,KAAM,gBACNC,KAAM,gCAER,CACE/D,KAAM,YACN8D,KAAM,WACNC,KAAM,6BAER,CACE/D,KAAM,cACN8D,KAAM,WACNC,KAAM,8BAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,uCAER,CACE/D,KAAM,uBACN8D,KAAM,gBACNC,KAAM,gEAER,CACE/D,KAAM,oBACN8D,KAAM,eACNC,KAAM,2CAER,CACE/D,KAAM,eACN8D,KAAM,UACNC,KAAM,uCAER,CACE/D,KAAM,cACN8D,KAAM,SACNC,KAAM,iCAER,CACE/D,KAAM,mBACN8D,KAAM,UACNC,KAAM,sCAER,CACE/D,KAAM,mBACN8D,KAAM,aACNC,KAAM,6CAER,CACE/D,KAAM,SACN8D,KAAM,YACNC,KAAM,4BAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,oCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,+BAER,CACE/D,KAAM,iBACN8D,KAAM,cACNC,KAAM,gCAER,CACE/D,KAAM,iBACN8D,KAAM,gBACNC,KAAM,yCAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,gDAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,+CAER,CACE/D,KAAM,YACN8D,KAAM,WACNC,KAAM,qCAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KAAM,+DAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,gCAER,CACE/D,KAAM,iBACN8D,KAAM,cACNC,KAAM,iCAER,CACE/D,KAAM,iBACN8D,KAAM,gBACNC,KAAM,0CAER,CACE/D,KAAM,gBACN8D,KAAM,YACNC,KAAM,wEAER,CACE/D,KAAM,sBACN8D,KAAM,eACNC,KAAM,6CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,+BAER,CACE/D,KAAM,iBACN8D,KAAM,cACNC,KAAM,yDAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,gCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,yCAER,CACE/D,KAAM,YACN8D,KAAM,WACNC,KAAM,4BAER,CACE/D,KAAM,cACN8D,KAAM,WACNC,KAAM,6BAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,sCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,qCAER,CACE/D,KAAM,cACN8D,KAAM,SACNC,KAAM,yCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,sCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,oCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,iDAER,CACE/D,KAAM,cACN8D,KAAM,UACNC,KAAM,0CAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,qCAER,CACE/D,KAAM,iBACN8D,KAAM,cACNC,KAAM,0CAER,CACE/D,KAAM,qBACN8D,KAAM,aACNC,KAAM,gDAER,CACE/D,KAAM,qBACN8D,KAAM,aACNC,KAAM,iDAER,CACE/D,KAAM,eACN8D,KAAM,gBACNC,KAAM,sCAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,qCAER,CAAE/D,KAAM,SAAU8D,KAAM,SAAUE,YAAa,yBAC/C,CACEhE,KAAM,iBACN8D,KAAM,aACNC,KAAM,6CAER,CACE/D,KAAM,uBACN8D,KAAM,UACNC,KAAM,oCAER,CACE/D,KAAM,eACN8D,KAAM,OACNC,KAAM,gDAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,2CAER,CACE/D,KAAM,eACN8D,KAAM,WACNC,KAAM,6CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,8CAER,CACE/D,KAAM,gBACN8D,KAAM,gBACNC,KAAM,gDAER,CACE/D,KAAM,iBACN8D,KAAM,eACNC,KAAM,+CAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,+CAER,CACE/D,KAAM,YACN8D,KAAM,UACNC,KAAM,oCAER,CACE/D,KAAM,WACN8D,KAAM,UACNC,KAAM,4BAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,oCAER,CACE/D,KAAM,WACN8D,KAAM,iBACNC,KAAM,qCAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,gDAER,CACE/D,KAAM,aACN8D,KAAM,UACNC,KAAM,6BAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,qCAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,wCAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,yCAER,CACE/D,KAAM,cACN8D,KAAM,iBACNC,KAAM,8CAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,kDAER,CACE/D,KAAM,cACN8D,KAAM,WACNC,KAAM,gCAER,CACE/D,KAAM,aACN8D,KAAM,WACNC,KAAM,oCAER,CACE/D,KAAM,sBACN8D,KAAM,cACNC,KAAM,6CAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,4CAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,iDAER,CACE/D,KAAM,cACN8D,KAAM,iBACNC,KAAM,6CAER,CACE/D,KAAM,gBACN8D,KAAM,OACNC,KAAM,4CAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,+DAER,CACE/D,KAAM,UACN8D,KAAM,aACNC,KAAM,0DAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,wCAER,CACE/D,KAAM,kBACN8D,KAAM,SACNC,KAAM,gDAER,CACE/D,KAAM,qBACN8D,KAAM,SACNC,KAAM,2CAER,CACE/D,KAAM,wBACN8D,KAAM,SACNC,KAAM,6CAER,CACE/D,KAAM,sBACN8D,KAAM,SACNC,KAAM,oDAER,CACE/D,KAAM,yBACN8D,KAAM,SACNC,KAAM,qDAER,CACE/D,KAAM,sBACN8D,KAAM,SACNC,KAAM,6CAER,CACE/D,KAAM,YACN8D,KAAM,cACNC,KAAM,oCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,uEAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,mCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,2CAER,CACE/D,KAAM,eACN8D,KAAM,UACNC,KAAM,yCAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,iDAER,CACE/D,KAAM,gBACN8D,KAAM,cACNC,KAAM,iEAER,CACE/D,KAAM,cACN8D,KAAM,SACNC,KAAM,kCAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,0CAER,CACE/D,KAAM,cACN8D,KAAM,UACNC,KAAM,yDAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KAAM,yCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,8BAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,+BAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,wCAER,CACE/D,KAAM,SACN8D,KAAM,aACNC,KAAM,+CAER,CACE/D,KAAM,cACN8D,KAAM,gBACNC,KAAM,qCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,0CAER,CACE/D,KAAM,SACN8D,KAAM,eACNC,KAAM,mCAER,CACE/D,KAAM,UACN8D,KAAM,WACNC,KAAM,+DAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,6CAER,CACE/D,KAAM,aACN8D,KAAM,aACNC,KAAM,8CAER,CACE/D,KAAM,SACN8D,KAAM,aACNC,KAAM,uCAER,CAAE/D,KAAM,aAAc8D,KAAM,aAAcE,YAAa,gBACvD,CACEhE,KAAM,eACN8D,KAAM,aACNC,KAAM,oCAER,CACE/D,KAAM,UACN8D,KAAM,SACNC,KAAM,mDAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,0CAER,CACE/D,KAAM,iBACN8D,KAAM,WACNC,KAAM,oEAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,4CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,0CAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,8BAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,+BAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,wCAER,CACE/D,KAAM,YACN8D,KAAM,QACNC,KAAM,oDAER,CACE/D,KAAM,eACN8D,KAAM,UACNC,KAAM,kCAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,4CAER,CACE/D,KAAM,SACN8D,KAAM,aACNC,KAAM,mDAER,CACE/D,KAAM,iBACN8D,KAAM,cACNC,KAAM,yDAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,sCAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,8CAER,CACE/D,KAAM,WACN8D,KAAM,UACNC,KAAM,yDAER,CACE/D,KAAM,iBACN8D,KAAM,gBACNC,KAAM,+DAER,CACE/D,KAAM,gBACN8D,KAAM,YACNC,KAAM,4CAER,CACE/D,KAAM,qBACN8D,KAAM,WACNC,KAAM,gEAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,gDAER,CACE/D,KAAM,gBACN8D,KAAM,SACNC,KAAM,kCAER,CACE/D,KAAM,QACN8D,KAAM,WACNC,KAAM,sDAER,CACE/D,KAAM,WACN8D,KAAM,SACNC,KAAM,mDAER,CACE/D,KAAM,QACN8D,KAAM,QACNC,KAAM,8CAER,CACE/D,KAAM,eACN8D,KAAM,QACNC,KAAM,gEAER,CACE/D,KAAM,WACN8D,KAAM,UACNC,KAAM,4CAER,CACE/D,KAAM,SACN8D,KAAM,SACNC,KAAM,+CAER,CACE/D,KAAM,cACN8D,KAAM,eACNC,KAAM,0CAER,CACE/D,KAAM,eACN8D,KAAM,UACNC,KAAM,8DAER,CAAE/D,KAAM,WAAY8D,KAAM,WAAYE,YAAa,oBACnD,CACEhE,KAAM,cACN8D,KAAM,QACNC,KAAM,iDAER,CACE/D,KAAM,QACN8D,KAAM,QACNC,KAAM,wCAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,sDAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,kDAER,CACE/D,KAAM,UACN8D,KAAM,OACNC,KAAM,wCAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,8CAER,CACE/D,KAAM,mBACN8D,KAAM,YACNC,KAAM,8CAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,8CAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,8CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,8CAER,CACE/D,KAAM,gBACN8D,KAAM,UACNC,KAAM,+CAER,CACE/D,KAAM,iBACN8D,KAAM,aACNC,KAAM,8CAER,CACE/D,KAAM,gBACN8D,KAAM,YACNC,KAAM,8CAER,CACE/D,KAAM,cACN8D,KAAM,WACNC,KAAM,2BAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,oDAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,oCAER,CACE/D,KAAM,aACN8D,KAAM,iBACNC,KAAM,wDAER,CACE/D,KAAM,QACN8D,KAAM,aACNC,KAAM,wCAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,wDAER,CACE/D,KAAM,QACN8D,KAAM,eACNC,KAAM,gDAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,qCAER,CACE/D,KAAM,cACN8D,KAAM,YACNC,KAAM,qCAER,CACE/D,KAAM,eACN8D,KAAM,aACNC,KAAM,qCAER,CACE/D,KAAM,QACN8D,KAAM,aACNC,KAAM,qDAER,CACE/D,KAAM,QACN8D,KAAM,WACNC,KAAM,qDAER,CACE/D,KAAM,cACN8D,KAAM,SACNC,KAAM,wDAER,CACE/D,KAAM,UACN8D,KAAM,UACNC,KAAM,gDAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,qEAER,CACE/D,KAAM,aACN8D,KAAM,cACNC,KAAM,yCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,sCAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,kCAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,oCAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,iDAER,CACE/D,KAAM,gBACN8D,KAAM,eACNC,KAAM,2CAER,CACE/D,KAAM,gBACN8D,KAAM,aACNC,KAAM,iDAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,qCAER,CACE/D,KAAM,aACN8D,KAAM,cACNC,KAAM,kCAER,CACE/D,KAAM,YACN8D,KAAM,YACNC,KAAM,qCAER,CACE/D,KAAM,aACN8D,KAAM,WACNC,KAAM,gDAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,mEAER,CACE/D,KAAM,eACN8D,KAAM,eACNC,KAAM,uDAER,CACE/D,KAAM,aACN8D,KAAM,WACNC,KAAM,wDAER,CACE/D,KAAM,gBACN8D,KAAM,WACNC,KAAM,gDAER,CACE/D,KAAM,aACN8D,KAAM,YACNC,KAAM,6BAER,CACE/D,KAAM,kBACN8D,KAAM,SACNC,KAAM,8CAER,CACE/D,KAAM,eACN8D,KAAM,YACNC,KAAM,8BAER,CACE/D,KAAM,eACN8D,KAAM,cACNC,KAAM,uCAER,CAAE/D,KAAM,SAAU8D,KAAM,SAAUE,YAAa,qBAC/C,CACEhE,KAAM,UACN8D,KAAM,gBACNC,KAAM,wEAER,CACE/D,KAAM,cACN8D,KAAM,kBACNC,KAAM,8CAER,CACE/D,KAAM,cACN8D,KAAM,aACNC,KAAM,qDAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAAM,sDAER,CACE/D,KAAM,YACN8D,KAAM,aACNC,KAAM,0DAER,CACE/D,KAAM,cACN8D,KAAM,WACNC,KAAM,oCAER,CACE/D,KAAM,WACN8D,KAAM,WACNC,KAA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","file":"static/js/main.0f01f89d.chunk.js","sourcesContent":["import React, { useState, useEffect, memo } from \"react\";\n\nimport isEqual from \"lodash/isEqual\";\n\nimport {\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\n\nexport const measureText = (text, fontWeight, fontSize, fontFamily) => {\n  // Create a singleton canvas or use an existing one.\n  const canvas =\n    measureText.canvas ||\n    (measureText.canvas = document.createElement(\"canvas\"));\n\n  const context = canvas.getContext(\"2d\");\n  context.font = `${fontWeight} ${fontSize}px ${fontFamily}`;\n  return context.measureText(text).width;\n};\n\nexport const hexToRgb = hex => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      }\n    : null;\n};\n\n// Displays a NerdFonts font icon.\nexport const Icon = memo(({ icon, className }) => {\n  return (\n    <div>\n      <i className={`nf ${icon || \"nf-fa-amazon\"} ${className || null}`} />\n    </div>\n  );\n});\n\n// Displays an image file from its source URL.\nexport const Image = memo(({ source, className, style }) => {\n  return (\n    <img\n      alt=\"\"\n      src={source}\n      className={className || null}\n      style={style || null}\n    />\n  );\n});\n\n// The code to validate the length of a text field when you type in it is standard.\nexport const validateFieldLength = maxLength => event => {\n  if (event.target.value.length > maxLength) {\n    event.target.value = event.target.value.slice(0, event.target.maxLength);\n  }\n};\n\n// Returns the \"debounced\" result of value.\n// If the value has been edited in the past 500 milliseconds, it won't be updated.\n// https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport const useDebounce = (value, delay) => {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Set debouncedValue to value (passed in) after the specified delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    // Only re-call effect if value changes\n    // You could also add the \"delay\" var to inputs array if you ...\n    // ... need to be able to change that dynamically.\n    [value, delay]\n  );\n\n  return debouncedValue;\n};\n\n// The standard form field. Memoized for performance.\n// The className,\nexport const FormText = memo(\n  ({\n    id,\n    fieldName,\n    value,\n    onChange,\n    label,\n    type,\n    className,\n    onInput,\n    multiline,\n    helperText,\n    InputProps\n  }) => (\n    <TextField\n      // Required inputs.\n      // Pass in an ID for React to identify the field.\n      id={id}\n      // Pass in the state to display in the field.\n      value={value}\n      // Pass in a callback.\n      onChange={e => onChange(fieldName, e.target.value)}\n      // Constants\n      margin=\"normal\"\n      variant=\"outlined\"\n      // Optional inputs.\n      // Pass in text field label. Can be blank.\n      label={label || null}\n      // Props to pass on to the Input component.\n      InputProps={InputProps || null}\n      // Type defaults to \"text\". You can specify \"number\" as well.\n      type={type || \"text\"}\n      // Specify a makeStyles class name, not required.\n      className={className || null}\n      // Specify an onInput function, optionally.\n      onInput={onInput || null}\n      // Specify helper text below the field, optionally.\n      helperText={helperText || null}\n      // Whether the field is multiline.\n      multiline={multiline || false}\n    />\n  ),\n  (prevState, nextState) => {\n    isEqual(prevState.value, nextState.value);\n  }\n);\n\nexport const FormSelect = memo(\n  ({\n    id,\n    fieldName,\n    value,\n    onChange,\n    label,\n    className,\n    children,\n    SelectProps,\n    inputProps\n  }) => (\n    <TextField\n      // Required inputs.\n      // Pass in an ID for React to identify the field.\n      id={id}\n      // Pass in the state to display in the field.\n      value={value}\n      // Pass in a callback.\n      onChange={e => onChange(fieldName, e.target.value)}\n      // Constants\n      margin=\"normal\"\n      variant=\"outlined\"\n      // Select.\n      select\n      // Optional inputs.\n      // Pass in text field label. Can be blank.\n      label={label || null}\n      // Specify a makeStyles class name, not required.\n      className={className || null}\n      // Props to put on the Select component.\n      SelectProps={SelectProps || null}\n      // Props to put on the input.\n      inputProps={inputProps || null}\n    >\n      {children}\n    </TextField>\n  ),\n  (prevState, nextState) => {\n    isEqual(prevState.value, nextState.value);\n  }\n);\n\nexport const FormCheckbox = memo(({ checked, fieldName, onChange, label }) => (\n  <FormControlLabel\n    control={\n      <Checkbox\n        checked={checked}\n        onChange={e => onChange(fieldName, e.target.checked)}\n      />\n    }\n    label={label}\n  />\n));\n\nexport const GridCard = ({\n  ref,\n  gridClassName,\n  cardClassName,\n  children,\n  xs,\n  sm,\n  md,\n  lg,\n  xl\n}) => (\n  <Grid item className={gridClassName} xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\n    <Card ref={ref} className={cardClassName}>\n      <CardContent>{children}</CardContent>\n    </Card>\n  </Grid>\n);\n","import React, { memo } from \"react\";\nimport { AppBar, Toolbar, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport { Image } from \"../Util\";\n\nconst useStyles = makeStyles(theme => {\n  return {\n    appbar: {\n      elevation: 0,\n      position: \"fixed\"\n    },\n    toolbar: {\n      paddingLeft: \"8px\",\n      paddingRight: \"8px\"\n    },\n    appbarText: {\n      alignSelf: \"center\",\n      marginRight: \"10px\"\n    },\n    input: {\n      marginLeft: \"auto\"\n    },\n    image: {\n      width: \"auto\",\n      height: \"36px\",\n      marginRight: theme.spacing(1),\n      borderRadius: theme.spacing(3),\n      overflow: \"hidden\"\n    }\n  };\n});\n\nconst NavBar = memo(() => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  return (\n    <AppBar color=\"primary\" className={classes.appbar}>\n      <Toolbar className={classes.toolbar}>\n        <Image source=\"./logo256.png\" className={classes.image} />\n        <Typography className={classes.appbarText} variant=\"h4\" color=\"inherit\">\n          {mediaQueryLg ? \"Gems of War Troop Creator\" : \"Troop Creator\"}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n});\n\nexport default NavBar;\n","import React, { forwardRef, useEffect, useRef } from \"react\";\r\nimport { Stage, Image, Text } from \"react-konva\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport useImage from \"use-image\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Konva from \"konva\";\r\nimport { hexToRgb, measureText } from \"../../../Util\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    margin: \"0px auto\",\r\n    paddingBottom: \"12px\",\r\n    \"& .konvajs-content\": {\r\n      width: \"100% !important\",\r\n      height: \"auto !important\",\r\n      \"& canvas\": {\r\n        position: \"relative !important\",\r\n        width: \"100% !important\",\r\n        height: \"auto !important\"\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\n// https://gist.github.com/mrcoles/0dfaab93a1c899e5f46690676c8c29e5\r\nexport const fillMixedText = (ctx, args, x, y) => {\r\n  let textXPos = x;\r\n  const defaultFillStyle = ctx.fillStyle;\r\n  const defaultFont = ctx.font;\r\n\r\n  ctx.save();\r\n  args.forEach(({ text, fillStyle, font }) => {\r\n    ctx.fillStyle = fillStyle || defaultFillStyle;\r\n    ctx.font = font || defaultFont;\r\n    ctx.fillText(text, textXPos, y);\r\n    textXPos += ctx.measureText(text).width;\r\n  });\r\n  ctx.restore();\r\n};\r\n\r\nexport const writeLines = (\r\n  context,\r\n  x,\r\n  y,\r\n  maxWidth,\r\n  baseLineHeight,\r\n  maxLineCount,\r\n  text,\r\n  fontText,\r\n  centerVertical\r\n) => {\r\n  let lineHeight = baseLineHeight;\r\n\r\n  while (lineHeight > 0) {\r\n    const words = text.split(\" \");\r\n    const lines = [];\r\n    let currentLine = words[0];\r\n    context.font = fontText.replace(\"{}\", lineHeight);\r\n\r\n    // Build an array of lines, starting a new line if the current one is too long.\r\n    for (let i = 1; i < words.length; i += 1) {\r\n      const word = words[i];\r\n      const { width } = context.measureText(`${currentLine} ${word}`);\r\n      if (width < maxWidth) {\r\n        currentLine += ` ${word}`;\r\n      } else {\r\n        lines.push(currentLine);\r\n        currentLine = word;\r\n      }\r\n    }\r\n    // Finish up.\r\n    lines.push(currentLine);\r\n\r\n    if (lines.length > maxLineCount) {\r\n      lineHeight -= 2;\r\n    } else {\r\n      // Write the actual text.\r\n      let newY = y - (lines.length - 1) * lineHeight;\r\n      if (centerVertical && lines.length === 1) newY -= lineHeight / 2;\r\n\r\n      for (let j = 0; j < lines.length; j += 1) {\r\n        context.fillText(lines[j], x, newY + lineHeight * j);\r\n      }\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n// Copy an existing layer to the given coordinates.\r\n// This requires converting it to a data URL then converting it back.\r\n// Is there a simpler way?\r\nexport const CardLayer = ({\r\n  layerRef,\r\n  x,\r\n  y,\r\n  width = 0,\r\n  height = 0,\r\n  loadingY = 0\r\n}) => {\r\n  // If the layer is valid, display it, otherwise display a loading icon.\r\n  return layerRef.current && layerRef.current.loaded ? (\r\n    <CardImage\r\n      src={layerRef.current.toDataURL()}\r\n      x={x}\r\n      y={y}\r\n      width={width || layerRef.current.canvas.width}\r\n      height={height || layerRef.current.canvas.height}\r\n    />\r\n  ) : (\r\n    <CardImage\r\n      src=\"./graphics/troop/loading.png\"\r\n      x={x + 195}\r\n      y={(loadingY || y) + 323}\r\n      width={100}\r\n      height={100}\r\n    />\r\n  );\r\n};\r\n\r\nexport const CardImage = ({\r\n  src,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  color = null,\r\n  crop = {},\r\n  onLoad = null\r\n}) => {\r\n  const [image, status] = useImage(src);\r\n  const ref = useRef(null);\r\n  useEffect(() => {\r\n    if (ref.current !== null) {\r\n      ref.current.cache();\r\n      ref.current.getLayer().batchDraw();\r\n      if (status === \"loaded\" && onLoad != null) onLoad();\r\n    }\r\n  }, [image, onLoad, status]);\r\n\r\n  if (src == null) return null;\r\n\r\n  return (\r\n    <Image\r\n      ref={ref}\r\n      image={image}\r\n      x={x}\r\n      y={y}\r\n      filters={color !== null ? [Konva.Filters.RGB] : null}\r\n      red={color !== null ? hexToRgb(color).r : null}\r\n      green={color !== null ? hexToRgb(color).g : null}\r\n      blue={color !== null ? hexToRgb(color).b : null}\r\n      width={width}\r\n      height={height}\r\n      crop={crop}\r\n    />\r\n  );\r\n};\r\n\r\nexport const CardImageRotating = ({\r\n  src,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  color = null,\r\n  crop = {},\r\n  onLoad = null,\r\n  angularRate = 0\r\n}) => {\r\n  const [image, status] = useImage(src);\r\n  const ref = useRef(null);\r\n  useEffect(() => {\r\n    if (ref.current !== null) {\r\n      ref.current.cache();\r\n      ref.current.getLayer().batchDraw();\r\n      if (status === \"loaded\") {\r\n        if (onLoad != null) onLoad();\r\n\r\n        if (angularRate !== 0) {\r\n          // Animation.\r\n          const anim = new Konva.Animation(frame => {\r\n            const angleDiff = (frame.timeDiff * angularRate) / 1000;\r\n            ref.current.rotate(angleDiff);\r\n          }, ref.current);\r\n          anim.start();\r\n        }\r\n      }\r\n    }\r\n  }, [image, onLoad, status]);\r\n\r\n  if (src == null) return null;\r\n\r\n  return (\r\n    <Image\r\n      ref={ref}\r\n      image={image}\r\n      x={x + width / 2}\r\n      y={y + height / 2}\r\n      filters={color !== null ? [Konva.Filters.RGB] : null}\r\n      red={color !== null ? hexToRgb(color).r : null}\r\n      green={color !== null ? hexToRgb(color).g : null}\r\n      blue={color !== null ? hexToRgb(color).b : null}\r\n      width={width}\r\n      height={height}\r\n      crop={crop}\r\n      offset={{ x: width / 2, y: height / 2 }}\r\n    />\r\n  );\r\n};\r\n\r\n/* Takes an array of lines; each line is an array of phrase objects.\r\n * Sadly assumes horizontal and vertical centering. Too much work to make more general.\r\n * Example: [\r\n *   [\r\n *     { text: \"Deal \", weight: 600, size: 50, family: \"Open Sans\", color: \"#333\" },\r\n *     { text: \"83\", weight: 600, size: 50, family: \"Open Sans\", color: \"#433\" },\r\n *   ],\r\n *   [\r\n *     { text: \"damage\", weight: 600, size: 50, family: \"Open Sans\", color: \"#333\" },\r\n *   ]\r\n * ]\r\n */\r\nexport const CardMultiStyleText = ({\r\n  textArray,\r\n  yCenter,\r\n  xCenter,\r\n  fontsLoaded\r\n}) => {\r\n  const textHeight = textArray.reduce(\r\n    (sum, textLine) => sum + Math.max(...textLine.map(phrase => phrase.size)),\r\n    0\r\n  );\r\n  let topYOffset = yCenter - textHeight / 2;\r\n  return textArray.map((textLine, textLineIndex) => {\r\n    const maxFontSize = Math.max(...textLine.map(phrase => phrase.size));\r\n    const yPos = topYOffset;\r\n    topYOffset += maxFontSize;\r\n    const lineWidth = textLine.reduce(\r\n      (sum, phrase) =>\r\n        sum +\r\n        measureText(phrase.text, phrase.weight, phrase.size, phrase.family),\r\n      0\r\n    );\r\n    let leftXOffset = xCenter - lineWidth / 2;\r\n\r\n    return textLine.map((phrase, phraseIndex) => {\r\n      const xPos = leftXOffset;\r\n      leftXOffset += measureText(\r\n        phrase.text,\r\n        phrase.weight,\r\n        phrase.size,\r\n        phrase.family\r\n      );\r\n      return (\r\n        <CardText\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          key={`spellDesc${textLineIndex}-${phraseIndex}`}\r\n          x={xPos}\r\n          y={yPos}\r\n          text={phrase.text}\r\n          color={phrase.color}\r\n          fontFamily={phrase.family}\r\n          fontSize={phrase.size}\r\n          fontWeight={phrase.weight}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n      );\r\n    });\r\n  });\r\n};\r\n\r\nexport const CardText = ({\r\n  text,\r\n  color = \"#FFF\",\r\n  fontSize,\r\n  fontFamily = \"Open Sans\",\r\n  fontWeight,\r\n  x = 0,\r\n  y = 0,\r\n  opacity = 1,\r\n  width = null,\r\n  height = null,\r\n  horizontalAlign = \"center\",\r\n  verticalAlign = \"top\",\r\n  shadowColor = null,\r\n  shadowOffset = 0,\r\n  fontsLoaded\r\n}) => {\r\n  return (\r\n    <Text\r\n      text={text}\r\n      fill={color}\r\n      x={x}\r\n      y={y}\r\n      width={width}\r\n      opacity={opacity}\r\n      height={height}\r\n      fontSize={fontSize}\r\n      fontFamily={fontsLoaded ? fontFamily : \"Arial\"}\r\n      fontStyle={fontWeight}\r\n      align={horizontalAlign}\r\n      verticalAlign={verticalAlign}\r\n      shadowColor={shadowColor}\r\n      shadowOffset={{ x: shadowOffset, y: shadowOffset }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const CardTextRef = forwardRef(\r\n  (\r\n    {\r\n      text,\r\n      color = \"#FFF\",\r\n      fontSize,\r\n      fontFamily = \"Open Sans\",\r\n      fontWeight,\r\n      x = 0,\r\n      y = 0,\r\n      opacity = 1,\r\n      width = null,\r\n      height = null,\r\n      horizontalAlign = \"center\",\r\n      verticalAlign = \"top\",\r\n      shadowColor = null,\r\n      shadowOffset = 0,\r\n      fontsLoaded\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <Text\r\n        ref={ref}\r\n        text={text}\r\n        fill={color}\r\n        x={x}\r\n        y={y}\r\n        width={width}\r\n        opacity={opacity}\r\n        height={height}\r\n        fontSize={fontSize}\r\n        fontFamily={fontsLoaded ? fontFamily : \"sans-serif\"}\r\n        fontStyle={fontWeight}\r\n        align={horizontalAlign}\r\n        verticalAlign={verticalAlign}\r\n        shadowColor={shadowColor}\r\n        shadowOffset={{ x: shadowOffset, y: shadowOffset }}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\n// Render a troop as a full-size card (like in the troop list).\r\nexport const CardBase = ({ children, width, height }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.card}>\r\n      <Stage scaleX={1} width={width} height={height}>\r\n        {children}\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button, Tooltip } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Icon } from \"../../Util\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  buttonGrid: {\r\n    width: \"100%\"\r\n  },\r\n  buttonIcon: {\r\n    fontSize: \"2em\"\r\n  },\r\n  button: {\r\n    margin: \"0 auto\",\r\n    display: \"table\"\r\n  }\r\n}));\r\n\r\nconst PreviewButtonBar = ({ troopName, displayLayer }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.buttonGrid}>\r\n      <Tooltip title=\"Download\" aria-label=\"download\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          size=\"large\"\r\n          className={classes.button}\r\n          onClick={() => {\r\n            if (displayLayer.current !== null) {\r\n              const link = document.createElement(\"a\");\r\n              link.download = `${troopName}.png`;\r\n              link.href = displayLayer.current.toDataURL();\r\n              document.body.appendChild(link);\r\n              link.click();\r\n              document.body.removeChild(link);\r\n            }\r\n          }}\r\n        >\r\n          <Icon className={classes.buttonIcon} icon=\"nf-mdi-download\" />\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewButtonBar;\r\n","import React, { useRef } from \"react\";\r\nimport { CardContent, Grid, Card, Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Stage, Layer } from \"react-konva\";\r\nimport { CardLayer } from \"./areas/cards/CardBase\";\r\n\r\nimport PreviewButtonBar from \"./areas/PreviewButtonBar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonIcon: {\r\n    fontSize: \"2em\"\r\n  },\r\n  canvas: {\r\n    width: \"100%\",\r\n    margin: \"0px auto\",\r\n    display: \"table\"\r\n  },\r\n  card: {\r\n    margin: \"0px auto\",\r\n    paddingBottom: \"12px\",\r\n    \"& .konvajs-content\": {\r\n      width: \"100% !important\",\r\n      height: \"auto !important\",\r\n      \"& canvas\": {\r\n        position: \"relative !important\",\r\n        width: \"100% !important\",\r\n        height: \"auto !important\"\r\n      }\r\n    }\r\n  },\r\n  cardBox: {\r\n    padding: `${theme.spacing(1.5)}px 0 ${theme.spacing(3)}px 0`\r\n  },\r\n  mainCard: {\r\n    margin: `${theme.spacing(3)}px auto`,\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nconst TabResult = ({ troop, spellLayer, troopLayer, traitsLayer }) => {\r\n  const classes = useStyles();\r\n\r\n  const resultStageRef = useRef();\r\n\r\n  return (\r\n    <Card className={classes.mainCard}>\r\n      <CardContent>\r\n        <Grid container>\r\n          <Grid item container justify=\"center\" xs={12}>\r\n            <Grid item>\r\n              <Box className={classes.card}>\r\n                <Stage scaleX={1} width={1470} height={744}>\r\n                  <Layer ref={resultStageRef}>\r\n                    <CardLayer\r\n                      height={709}\r\n                      width={460}\r\n                      x={5}\r\n                      y={30}\r\n                      layerRef={spellLayer}\r\n                    />\r\n                    <CardLayer\r\n                      height={739}\r\n                      width={490}\r\n                      x={475}\r\n                      y={0}\r\n                      loadingY={30}\r\n                      layerRef={troopLayer}\r\n                    />\r\n                    <CardLayer\r\n                      height={709}\r\n                      width={460}\r\n                      x={1005}\r\n                      y={30}\r\n                      layerRef={traitsLayer}\r\n                    />\r\n                  </Layer>\r\n                </Stage>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <PreviewButtonBar\r\n            troopName={troop.name}\r\n            displayLayer={resultStageRef}\r\n          />\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TabResult;\r\n","import React from \"react\";\nimport { Typography, Grid, Tabs, Tab } from \"@material-ui/core\";\nimport Scrollbars from \"react-custom-scrollbars\";\nimport { AutoSizer } from \"react-virtualized\";\n\nconst renderThumb = ({ style }) => (\n  <div\n    style={{\n      ...style,\n      cursor: \"pointer\",\n      borderRadius: \"inherit\",\n      backgroundColor: \"rgba(255,255,255,.8)\"\n    }}\n  />\n);\n\nexport const TabList = ({ currentTab, setCurrentTab }) => {\n  // Handle a change in tab.\n  const handleTabEvent = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <Tabs\n      value={currentTab}\n      onChange={handleTabEvent}\n      indicatorColor=\"primary\"\n      textColor=\"primary\"\n      centered\n    >\n      <Tab label=\"Spell\" id=\"tab-0\" />\n      <Tab label=\"Troop\" id=\"tab-1\" />\n      <Tab label=\"Traits\" id=\"tab-2\" />\n      <Tab label=\"Result\" id=\"tab-3\" />\n    </Tabs>\n  );\n};\n\nexport const ScrollingContainer = ({ children }) => {\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <Scrollbars style={{ width, height }} renderThumbVertical={renderThumb}>\n          {children}\n        </Scrollbars>\n      )}\n    </AutoSizer>\n  );\n};\n\nexport const TabView = ({ children, value, index, dir }) => (\n  <Typography\n    component=\"div\"\n    role=\"tabpanel\"\n    hidden={value !== index}\n    id={`full-width-tabpanel-${index}`}\n    aria-labelledby={`full-width-tab-${index}`}\n    dir={dir}\n  >\n    <Grid container direction=\"row\">\n      {children}\n    </Grid>\n  </Typography>\n);\n","import React, { useCallback } from \"react\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { GridCard } from \"../../Util\";\n\nconst useStyles = makeStyles(theme => ({\n  formElement: {\n    margin: `${theme.spacing(1.5)}px 0`\n  },\n  dropzone: {\n    backgroundColor: \"#1f1f1f\"\n  }\n}));\n\nexport const FormUploaderTroop = ({ handleTroopChange, dimensions }) => {\n  return (\n    <FormUploader\n      fieldKey=\"troopimage\"\n      handleTroopChange={handleTroopChange}\n      dimensions={dimensions}\n    />\n  );\n};\n\nexport const FormUploaderSpell = ({ handleTroopChange, dimensions }) => {\n  return (\n    <FormUploader\n      fieldKey=\"spellimage\"\n      handleTroopChange={handleTroopChange}\n      dimensions={dimensions}\n    />\n  );\n};\n\nexport const FormUploader = ({ handleTroopChange, fieldKey, dimensions }) => {\n  const classes = useStyles();\n\n  const handleChangeFiles = useCallback(\n    files => {\n      handleTroopChange(fieldKey, files.length !== 0 ? files[0] : null);\n    },\n    [handleTroopChange]\n  );\n\n  return (\n    <GridCard\n      gridClassName={classes.formElement}\n      cardClassName={classes.card}\n      xs={12}\n      sm={12}\n      md={12}\n      lg={12}\n      xl={12}\n    >\n      <Typography variant=\"h4\">Image</Typography>\n      <Typography variant=\"subtitle2\" gutterBottom>\n        Preferred Size: {dimensions || \"\"}\n      </Typography>\n      <DropzoneArea\n        dropzoneClass={classes.dropzone}\n        acceptedFiles={[\"image/*\"]}\n        filesLimit={1}\n        showAlerts\n        onChange={handleChangeFiles}\n      />\n    </GridCard>\n  );\n};\n","import React, { memo } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  InputAdornment,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  Image,\r\n  FormText,\r\n  FormCheckbox,\r\n  GridCard,\r\n  validateFieldLength\r\n} from \"../../Util\";\r\nimport { FormUploaderSpell } from \"./FormUploader\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    spellPower: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"50%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    formElement: {\r\n      margin: `${theme.spacing(1.5)}px 0 0 0`\r\n    },\r\n    fullField: {\r\n      width: \"100%\"\r\n    },\r\n    fieldIcon: {\r\n      width: \"auto\",\r\n      height: theme.spacing(3),\r\n      marginRight: theme.spacing(0.5)\r\n    }\r\n  };\r\n});\r\n\r\nconst FormSpell = memo(({ troop, handleTroopChange, className }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      md={8}\r\n      container\r\n      item\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Spell Name</Typography>\r\n        <FormText\r\n          id=\"form-spellname\"\r\n          fieldName=\"spellname\"\r\n          value={troop.spellname}\r\n          onChange={handleTroopChange}\r\n          label=\"Spell Name\"\r\n          className={classes.fullField}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Spell Description</Typography>\r\n        <FormText\r\n          id=\"form-spelldesc\"\r\n          fieldName=\"spelldesc\"\r\n          value={troop.spelldesc}\r\n          onChange={handleTroopChange}\r\n          label=\"Spell Description\"\r\n          multiline\r\n          helperText=\"{magic} specifies spell power\"\r\n          className={classes.fullField}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Magic</Typography>\r\n        <FormText\r\n          id=\"form-magic\"\r\n          fieldName=\"magic\"\r\n          value={troop.magic}\r\n          onChange={handleTroopChange}\r\n          label=\"Magic\"\r\n          type=\"number\"\r\n          className={classes.fullField}\r\n          onInput={validateFieldLength(3)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Image\r\n                  source=\"./graphics/troop/magic.png\"\r\n                  className={classes.fieldIcon}\r\n                />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Spell Power</Typography>\r\n        <FormText\r\n          id=\"form-spellmult\"\r\n          fieldName=\"spellmult\"\r\n          value={troop.spellmult}\r\n          onChange={handleTroopChange}\r\n          label=\"Multiplier\"\r\n          type=\"number\"\r\n          className={classes.spellPower}\r\n        />\r\n        <FormText\r\n          id=\"form-spellbase\"\r\n          fieldName=\"spellbase\"\r\n          value={troop.spellbase}\r\n          onChange={handleTroopChange}\r\n          label=\"Base\"\r\n          type=\"number\"\r\n          className={classes.spellPower}\r\n        />\r\n        <FormCheckbox\r\n          checked={troop.spellrange}\r\n          fieldName=\"spellrange\"\r\n          onChange={handleTroopChange}\r\n          label=\"Range?\"\r\n        />\r\n      </GridCard>\r\n      <FormUploaderSpell\r\n        handleTroopChange={handleTroopChange}\r\n        dimensions=\"460x340\"\r\n      />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default FormSpell;\r\n","export const colors = [\n  { value: \"Blue\", label: \"Blue\" },\n  { value: \"Green\", label: \"Green\" },\n  { value: \"Red\", label: \"Red\" },\n  { value: \"Yellow\", label: \"Yellow\" },\n  { value: \"Purple\", label: \"Purple\" },\n  { value: \"Orange\", label: \"Brown\" },\n  { value: \"BlueGreen\", label: \"Blue / Green\" },\n  { value: \"BlueRed\", label: \"Blue / Red\" },\n  { value: \"BlueYellow\", label: \"Blue / Yellow\" },\n  { value: \"BluePurple\", label: \"Blue / Purple\" },\n  { value: \"BlueOrange\", label: \"Blue / Brown\" },\n  { value: \"GreenRed\", label: \"Green / Red\" },\n  { value: \"GreenYellow\", label: \"Green / Yellow\" },\n  { value: \"GreenPurple\", label: \"Green / Purple\" },\n  { value: \"GreenOrange\", label: \"Green / Brown\" },\n  { value: \"RedYellow\", label: \"Red / Yellow\" },\n  { value: \"RedPurple\", label: \"Red / Purple\" },\n  { value: \"RedOrange\", label: \"Red / Brown\" },\n  { value: \"YellowPurple\", label: \"Yellow / Purple\" },\n  { value: \"YellowOrange\", label: \"Yellow / Brown\" },\n  { value: \"PurpleOrange\", label: \"Purple / Brown\" },\n  { value: \"BlueGreenRed\", label: \"Blue / Green / Red\" },\n  { value: \"BlueGreenYellow\", label: \"Blue / Green / Yellow\" },\n  { value: \"BlueGreenPurple\", label: \"Blue / Green / Purple\" },\n  { value: \"BlueGreenOrange\", label: \"Blue / Green / Brown\" },\n  { value: \"BlueRedYellow\", label: \"Blue / Red / Yellow\" },\n  { value: \"BlueRedPurple\", label: \"Blue / Red / Purple\" },\n  { value: \"BlueRedOrange\", label: \"Blue / Red / Brown\" },\n  { value: \"BlueYellowPurple\", label: \"Blue / Yellow / Purple\" },\n  { value: \"BlueYellowOrange\", label: \"Blue / Yellow / Brown\" },\n  { value: \"BluePurpleOrange\", label: \"Blue / Purple / Brown\" },\n  { value: \"GreenRedYellow\", label: \"Green / Red / Yellow\" },\n  { value: \"GreenRedPurple\", label: \"Green / Red / Purple\" },\n  { value: \"GreenRedOrange\", label: \"Green / Red / Brown\" },\n  { value: \"GreenYellowPurple\", label: \"Green / Yellow / Purple\" },\n  { value: \"GreenYellowOrange\", label: \"Green / Yellow / Brown\" },\n  { value: \"GreenPurpleOrange\", label: \"Green / Purple / Brown\" },\n  { value: \"RedYellowPurple\", label: \"Red / Yellow / Purple\" },\n  { value: \"RedYellowOrange\", label: \"Red / Yellow / Brown\" },\n  { value: \"RedPurpleOrange\", label: \"Red / Purple / Brown\" },\n  { value: \"YellowPurpleOrange\", label: \"Yellow / Purple / Brown\" },\n  { value: \"All\", label: \"All\" }\n];\n\nexport const rarities = {\n  Common: {\n    color: \"#FEFEFE\",\n    pips: 1\n  },\n  Rare: {\n    color: \"#54A721\",\n    pips: 2\n  },\n  \"Ultra-Rare\": {\n    color: \"#1D71FF\",\n    pips: 3\n  },\n  Epic: {\n    color: \"#9635E7\",\n    pips: 4\n  },\n  Legendary: {\n    color: \"#F3A120\",\n    pips: 5\n  },\n  Mythic: {\n    color: \"#13E3F6\",\n    pips: 6\n  },\n  Doomed: {\n    color: \"#B90000\",\n    pips: 6\n  }\n};\n\nexport const roles = [\n  \"Assassin\",\n  \"Defender\",\n  \"Generator\",\n  \"Mage\",\n  \"Striker\",\n  \"Support\",\n  \"Warlock\",\n  \"Warmaster\",\n  \"Warrior\"\n];\n\n// CUT: exchangeattacktomagic, magearmor\nexport const traits = [\n  {\n    name: \"Absorb Power\",\n    code: \"spikearmor\",\n    desc: \"Gain 3 Magic when an enemy casts a spell.\"\n  },\n  {\n    name: \"Accursed\",\n    code: \"cursed\",\n    desc: \"All enemies lose 2 random Skill points.\"\n  },\n  {\n    name: \"Adagio\",\n    code: \"silence\",\n    desc: \"Cleanse all allies when matching Yellow Gems.\"\n  },\n  {\n    name: \"Aegis\",\n    code: \"stoneskin\",\n    desc: \"Reduce damage from Skulls by 60%.\"\n  },\n  {\n    name: \"Aflame\",\n    code: \"aflame\",\n    desc: \"Burn enemies when doing Skull damage.\"\n  },\n  {\n    name: \"Agile\",\n    code: \"agile\",\n    desc: \"20% chance to dodge Skull damage.\"\n  },\n  {\n    name: \"Air Brand\",\n    code: \"airbrand\",\n    desc: \"Gain 1 Attack for each Yellow ally.\"\n  },\n  {\n    name: \"Air Heart\",\n    code: \"airheart\",\n    desc: \"Gain 1 Life for each Yellow ally.\"\n  },\n  {\n    name: \"Air Link\",\n    code: \"airlink\",\n    desc: \"Gain bonus Yellow Mana from Yellow Gem matches.\"\n  },\n  {\n    name: \"Air Spirit\",\n    code: \"airspirit\",\n    desc: \"Gain 1 Magic for each Yellow ally.\"\n  },\n  { name: \"Alert\", code: \"alert\", description: \"Immunity to Silence.\" },\n  {\n    name: \"Ancient Blessing\",\n    code: \"divineshield\",\n    desc: \"Bless a random Ally on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Ancient Mysteries\",\n    code: \"divineaura\",\n    desc:\n      \"25% chance to grant a random Positive Status Effect to a random Ally when my turn begins.\"\n  },\n  {\n    name: \"Angry Bear\",\n    code: \"nastyteeth\",\n    desc: \"Gain Enraged when matching Brown Gems.\"\n  },\n  {\n    name: \"Anti-Magic Sphere\",\n    code: \"jinx\",\n    desc: \"Reduce damage from Spells by 20%.\"\n  },\n  {\n    name: \"Anti-Magic\",\n    code: \"magiclink\",\n    desc: \"Deal double Skull damage vs. Enchanted enemies.\"\n  },\n  {\n    name: \"Antiquity\",\n    code: \"feyslayer\",\n    desc: \"Gain 4 Magic when using Artifacts.\"\n  },\n  {\n    name: \"Apparition\",\n    code: \"aspectofwar\",\n    desc: \"Gain 5 Attack when matching Skulls.\"\n  },\n  {\n    name: \"Aquatic Glory\",\n    code: \"winterveil\",\n    desc: \"All Merfolk allies gain 2 Magic when an enemy dies.\"\n  },\n  {\n    name: \"Aquatic\",\n    code: \"waterspirit\",\n    desc: \"Submerge myself when I receive damage.\"\n  },\n  {\n    name: \"Arcane Surge\",\n    code: \"magiclink\",\n    desc: \"Gain bonus Purple Mana from Purple Gem matches.\"\n  },\n  {\n    name: \"Arcane\",\n    code: \"arcane\",\n    desc: \"Gain 1 Magic when an ally casts a spell.\"\n  },\n  {\n    name: \"Armor of Light\",\n    code: \"armored\",\n    desc: \"All troops gain 4 Armor.\"\n  },\n  {\n    name: \"Armor Piercing\",\n    code: \"armorpiercing\",\n    desc: \"50% chance to ignore Armor with Skull damage.\"\n  },\n  {\n    name: \"Armor Plating\",\n    code: \"clockwork\",\n    desc: \"All Mech Allies gain 2 Armor per turn.\"\n  },\n  {\n    name: \"Armored\",\n    code: \"armored\",\n    desc: \"Reduce damage from Skulls by 25%.\"\n  },\n  {\n    name: \"Aspect of Death\",\n    code: \"aspectofdeath\",\n    desc: \"Steal 2 Life from the first enemy at the start of each turn.\"\n  },\n  {\n    name: \"Aspect of Famine\",\n    code: \"aspectoffamine\",\n    desc: \"First enemy loses 3 Skill points at the start of each turn.\"\n  },\n  {\n    name: \"Aspect of Plague\",\n    code: \"aspectofplague\",\n    desc: \"Enemies lose 3 Skill points on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Aspect of War\",\n    code: \"aspectofwar\",\n    desc: \"Gain 3 Attack at the start of each turn.\"\n  },\n  {\n    name: \"Assassinate\",\n    code: \"assassinate\",\n    desc: \"10% Chance to assassinate the last enemy when I deal Skull damage.\"\n  },\n  {\n    name: \"Aura of Power\",\n    code: \"divineaura\",\n    desc: \"All Mystics gain 1 Magic on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Avenger\",\n    code: \"avenger\",\n    desc: \"Gain 3 Attack when an ally dies.\"\n  },\n  {\n    name: \"Axes of Doom\",\n    code: \"dwarfslayer\",\n    desc: \"Gain 3 Magic if using an Axe.\"\n  },\n  {\n    name: \"Backup\",\n    code: \"humanbond\",\n    desc: \"35% chance to summon a Bandit when an ally dies.\"\n  },\n  {\n    name: \"Ballistics\",\n    code: \"immense\",\n    desc: \"Gain 2 to a random Skill on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Banishment\",\n    code: \"manashield\",\n    desc: \"Dispel all enemies on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Bardic Inspiration\",\n    code: \"spikearmor\",\n    desc: \"All Yellow Allies gain 1 to all Stats at the start of each turn.\"\n  },\n  {\n    name: \"Barkskin\",\n    code: \"natureheart\",\n    desc: \"Reduce damage from Skulls by 33%.\"\n  },\n  {\n    name: \"Beast Bond\",\n    code: \"beastbond\",\n    desc: \"Allied Beasts gain 2 Life.\"\n  },\n  {\n    name: \"Beast Shield\",\n    code: \"beastbond\",\n    desc: \"Allied Beasts gain 2 Armor.\"\n  },\n  {\n    name: \"Beast Slayer\",\n    code: \"beastslayer\",\n    desc: \"Deal double Skull damage vs. Beasts.\"\n  },\n  {\n    name: \"Beast Spirit\",\n    code: \"centaurslayer\",\n    desc: \"Gain 1 Magic for each Beast ally.\"\n  },\n  {\n    name: \"Big Teeth\",\n    code: \"nagaslayer\",\n    desc: \"Gain 1 Attack when allies gain an Extra Turn.\"\n  },\n  {\n    name: \"Big\",\n    code: \"big\",\n    desc: \"Gain 1 Life on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Black Hunger\",\n    code: \"hunger\",\n    desc: \"Steal 2 Life from the first enemy when I match Purple Gems.\"\n  },\n  {\n    name: \"Blessing of Anu\",\n    code: \"divineshield\",\n    desc: \"All Blue Allies gain 1 to all Stats at the start of each turn.\"\n  },\n  {\n    name: \"Blessing of Gaard\",\n    code: \"doom\",\n    desc: \"All Red Allies gain 1 to all Stats at the start of each turn.\"\n  },\n  {\n    name: \"Blood and Glory\",\n    code: \"reinforced\",\n    desc: \"Gain 1 Glory in PvP Battles.\"\n  },\n  {\n    name: \"Bloodlust\",\n    code: \"frenzy\",\n    desc: \"Become Enraged when enemy dies.\"\n  },\n  {\n    name: \"Bloodsucking\",\n    code: \"bloodsucking\",\n    desc: \"Deal double Skull damage to wounded enemies.\"\n  },\n  {\n    name: \"Bloodthirsty\",\n    code: \"bloodsucking\",\n    desc: \"Become enraged on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Bloody Boughs\",\n    code: \"dragonvines\",\n    desc:\n      \"Entangle and inflict Bleed to a random Enemy when matching 4 or more Gems.\"\n  },\n  {\n    name: \"Boo!\",\n    code: \"soullegion\",\n    desc: \"Gain 8 Magic on Purple gem matches.\"\n  },\n  {\n    name: \"Bountyhunter\",\n    code: \"merchant\",\n    desc: \"Gain 2x - 6x to Bounty Score, based on my ascension.\"\n  },\n  {\n    name: \"Bright Death\",\n    code: \"airbrand\",\n    desc: \"Summon a Lightstorm when an enemy dies.\"\n  },\n  {\n    name: \"Brilliant Aura\",\n    code: \"blessed\",\n    desc: \"All allies gain 2 Life on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Bull General\",\n    code: \"taurosbond\",\n    desc: \"All Tauros allies gain 1 Attack every turn.\"\n  },\n  {\n    name: \"Bullish Vigor\",\n    code: \"orclord\",\n    desc: \"All Allied Tauros start battles with 50% Mana.\"\n  },\n  {\n    name: \"Bullseye\",\n    code: \"bullseye\",\n    desc: \"15% chance for Skull damage to be lethal.\"\n  },\n  {\n    name: \"Buried Hatred\",\n    code: \"stonebrand\",\n    desc: \"Deal double Skull damage vs. Brown Enemies.\"\n  },\n  {\n    name: \"Burning Hatred\",\n    code: \"firebrand\",\n    desc: \"Deal double Skull damage vs. Red Enemies.\"\n  },\n  {\n    name: \"Call Bones\",\n    code: \"undeadbond\",\n    desc: \"Summon a Bonestorm when an ally summons a troop.\"\n  },\n  {\n    name: \"Call Doom\",\n    code: \"daemonslayer\",\n    desc: \"Summon a Doomstorm when an ally summons a troop.\"\n  },\n  {\n    name: \"Call Fire\",\n    code: \"firespirit\",\n    desc: \"Summon a Firestorm when an ally summons a troop.\"\n  },\n  {\n    name: \"Call Ice\",\n    code: \"waterbrand\",\n    desc: \"Summon an Icestorm when an ally summons a troop.\"\n  },\n  {\n    name: \"Call Nature\",\n    code: \"natureheart\",\n    desc: \"Summon a Leafstorm when an ally summons a troop.\"\n  },\n  {\n    name: \"Call Stone\",\n    code: \"stonespirit\",\n    desc: \"Summon a Duststorm when an ally summons a troop.\"\n  },\n  {\n    name: \"Cataclysm\",\n    code: \"molten\",\n    desc: \"Explode 2 random Gems when I deal skull damage.\"\n  },\n  {\n    name: \"Celestial Currents\",\n    code: \"blessed\",\n    desc: \"All Centaur allies gain 1 Magic.\"\n  },\n  {\n    name: \"Celestial Sage\",\n    code: \"divineshield\",\n    desc: \"Give all Allies 1 Magic on 4 or 5 matches.\"\n  },\n  {\n    name: \"Celestial Shield\",\n    code: \"divineshield\",\n    desc: \"Gain a Barrier on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Centaur Bond\",\n    code: \"centaurbond\",\n    desc: \"Allied Centaurs gain 2 Life.\"\n  },\n  {\n    name: \"Centaur Shield\",\n    code: \"centaurbond\",\n    desc: \"Allied Centaurs gain 2 Armor.\"\n  },\n  {\n    name: \"Centaur Slayer\",\n    code: \"centaurslayer\",\n    desc: \"Deal double Skull damage vs. Centaurs.\"\n  },\n  {\n    name: \"Chaos Storm\",\n    code: \"airspirit\",\n    desc: \"Summon a random storm on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Chaos Wave\",\n    code: \"inscribed\",\n    desc: \"All enemies lose 1 point on a random skill when I match Skulls.\"\n  },\n  {\n    name: \"Child of Sky\",\n    code: \"divinebond\",\n    desc: \"25% chance to summon a Heronath when an ally casts a spell.\"\n  },\n  {\n    name: \"Chill of Death\",\n    code: \"chilltouch\",\n    desc: \"When an enemy dies, Freeze another random enemy.\"\n  },\n  {\n    name: \"Chill Touch\",\n    code: \"chilltouch\",\n    desc: \"Inflict Frozen when doing Skull damage.\"\n  },\n  {\n    name: \"Chill\",\n    code: \"chill\",\n    desc: \"Gain 8 Magic on Blue gem matches.\"\n  },\n  {\n    name: \"Chilling Aura\",\n    code: \"icycloak\",\n    desc: \"Steal 2 Attack from the first enemy on 4 or 5 matches.\"\n  },\n  {\n    name: \"Cleanse\",\n    code: \"divineshield\",\n    desc: \"Cleanse all allies on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Clobber\",\n    code: \"clobber\",\n    desc: \"Deal double Skull damage vs. Stunned enemies.\"\n  },\n  {\n    name: \"Clockwork\",\n    code: \"clockwork\",\n    desc: \"All Mechs start battle with 50% Mana.\"\n  },\n  {\n    name: \"Commander\",\n    code: \"kingswill\",\n    desc: \"Gain 2 to all Skills if in first position.\"\n  },\n  {\n    name: \"Compassion\",\n    code: \"compassion\",\n    desc: \"Gain 8 Magic on Red gem matches.\"\n  },\n  {\n    name: \"Conflagration\",\n    code: \"molten\",\n    desc: \"Burn all enemies on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Construct Bond\",\n    code: \"constructbond\",\n    desc: \"Allied Constructs gain 2 Life.\"\n  },\n  {\n    name: \"Construct Shield\",\n    code: \"constructbond\",\n    desc: \"Allied Constructs gain 2 Armor.\"\n  },\n  {\n    name: \"Construct Slayer\",\n    code: \"constructslayer\",\n    desc: \"Deal double Skull damage vs. Constructs.\"\n  },\n  {\n    name: \"Contagion\",\n    code: \"siphon\",\n    desc: \"Inflict Disease on a random Enemy on Green Gem matches.\"\n  },\n  {\n    name: \"Corruption\",\n    code: \"miasma\",\n    desc: \"Steal 3 Life from the first enemy when matching Red Gems.\"\n  },\n  {\n    name: \"Counterattack\",\n    code: \"defender\",\n    desc: \"Gain 2 attack when I take damage.\"\n  },\n  {\n    name: \"Crashing Wave\",\n    code: \"waterspirit\",\n    desc: \"Explode a Blue Gem when matching 4 or more Gems.\"\n  },\n  {\n    name: \"Creeping Doom\",\n    code: \"ensoul\",\n    desc: \"75% chance to summon a Webspinner when an enemy dies.\"\n  },\n  {\n    name: \"Crystallize\",\n    code: \"graniteskin\",\n    desc: \"Gain Enchant when matching Purple Gems.\"\n  },\n  {\n    name: \"Cunning\",\n    code: \"cunning\",\n    desc: \"Immunity to Hunter's Mark.\"\n  },\n  {\n    name: \"Curse of Madness\",\n    code: \"ward\",\n    desc: \"Curse a random Enemy when matching Brown.\"\n  },\n  {\n    name: \"Cursed Touch\",\n    code: \"cursed\",\n    desc: \"Inflict Curse when dealing Skull damage.\"\n  },\n  {\n    name: \"Daemon Bond\",\n    code: \"daemonbond\",\n    desc: \"Allied Daemons gain 2 Life.\"\n  },\n  {\n    name: \"Daemon Shield\",\n    code: \"daemonbond\",\n    desc: \"Allied Daemons gain 2 Armor.\"\n  },\n  {\n    name: \"Daemon Slayer\",\n    code: \"daemonslayer\",\n    desc: \"Deal double Skull damage vs. Daemons. \"\n  },\n  {\n    name: \"Daemonic Pact\",\n    code: \"daemonicpact\",\n    desc: \"25% chance to summon an Ancient Horror on death.\"\n  },\n  {\n    name: \"Daemonic Rage\",\n    code: \"daemonslayer\",\n    desc: \"All Daemons gain 1 Attack.\"\n  },\n  {\n    name: \"Dark Ancestry\",\n    code: \"cursed\",\n    desc: \"Immune to Mana Drain, Silence, Faerie Fire, and Web.\"\n  },\n  {\n    name: \"Dark Channel\",\n    code: \"darkchannel\",\n    desc: \"50% chance to gain 1 Magic every turn.\"\n  },\n  {\n    name: \"Dark Covenant\",\n    code: \"daemonicpact\",\n    desc: \"25% chance to summon Envy on death.\"\n  },\n  {\n    name: \"Dark Death\",\n    code: \"magicbrand\",\n    desc: \"Summon a Darkstorm when an enemy dies.\"\n  },\n  {\n    name: \"Dark Fury\",\n    code: \"aspectofdeath\",\n    desc: \"Gain 8 Attack and Magic when I take damage.\"\n  },\n  {\n    name: \"Dark Hatred\",\n    code: \"magicbrand\",\n    desc: \"Deal double Skull damage vs. Purple Enemies.\"\n  },\n  {\n    name: \"Dark Hunger\",\n    code: \"centaurslayer\",\n    desc: \"Steal 1 Life from the first enemy when matching Purple Gems.\"\n  },\n  {\n    name: \"Dark Venom\",\n    code: \"venomous\",\n    desc: \"Poison a random Enemy when matching purple Gems.\"\n  },\n  {\n    name: \"Darkfall\",\n    code: \"darkfall\",\n    desc: \"Gain 1 Attack when matching Purple Gems.\"\n  },\n  {\n    name: \"Darkness\",\n    code: \"darkfall\",\n    desc: \"Decrease all enemies' Attack by 4 on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Dawn’s Aura\",\n    code: \"sunshine\",\n    desc: \"Create a lightstorm at the start of a battle.\"\n  },\n  {\n    name: \"Deadly Flock\",\n    code: \"airbrand\",\n    desc: \"25% chance to summon a Bladewing when an Enemy dies.\"\n  },\n  {\n    name: \"Deadly Waters\",\n    code: \"miasma\",\n    desc: \"Create a Bonestorm on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Death Below\",\n    code: \"hunger\",\n    desc: \"8% Chance to kill the last enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Death Curse\",\n    code: \"aspectofdeath\",\n    desc: \"Death Mark all enemies when I die.\"\n  },\n  {\n    name: \"Death Ray\",\n    code: \"trueshot\",\n    desc: \"Death Mark the first enemy when I take damage to Life.\"\n  },\n  {\n    name: \"Death Touch\",\n    code: \"deathtouch\",\n    desc: \"Inflict Death Mark when doing Skull damage.\"\n  },\n  {\n    name: \"Deep Magic\",\n    code: \"magicbrand\",\n    desc: \"Gain 5 Magic when attacking Delves.\"\n  },\n  {\n    name: \"Deep Shield\",\n    code: \"reinforced\",\n    desc: \"Gain 9 Armor when attacking Delves.\"\n  },\n  {\n    name: \"Deep Strength\",\n    code: \"avenger\",\n    desc: \"Gain 7 Attack when attacking Delves.\"\n  },\n  {\n    name: \"Deep Vitality\",\n    code: \"regeneration\",\n    desc: \"Gain 9 Life when attacking Delves.\"\n  },\n  {\n    name: \"Deep Water\",\n    code: \"bloodsucking\",\n    desc: \"Submerge myself on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Deep Wounds\",\n    code: \"assassinate\",\n    desc: \"Inflict Bleed on a random enemy on Red Gem matches.\"\n  },\n  {\n    name: \"Defender\",\n    code: \"defender\",\n    desc: \"Allies gain 3 Armor when defending in PVP.\"\n  },\n  {\n    name: \"Delirium\",\n    code: \"indigestible\",\n    desc: \"Gain 2 Magic and Attack when I take damage to Life.\"\n  },\n  {\n    name: \"Deluge\",\n    code: \"waterlink\",\n    desc: \"Submerge a random ally on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Depth Charge\",\n    code: \"waterspirit\",\n    desc: \"Deal double Skull damage vs. Submerged enemies.\"\n  },\n  {\n    name: \"Desert King\",\n    code: \"kingswill\",\n    desc: \"All Brown Allies gain 1 to all Stats at the start of each turn.\"\n  },\n  {\n    name: \"Destiny of Darkness\",\n    code: \"darkfall\",\n    desc:\n      \"2% chance to Deathmark an enemy when matching Purple Gems, boosted by my ascensions.\"\n  },\n  {\n    name: \"Destiny of Flame\",\n    code: \"fierycloak\",\n    desc:\n      \"2% chance to Deathmark an enemy when matching Red Gems, boosted by my ascensions.\"\n  },\n  {\n    name: \"Destiny of Ice\",\n    code: \"frozensoul\",\n    desc:\n      \"2% chance to Deathmark an enemy when matching Blue Gems, boosted by my ascensions.\"\n  },\n  {\n    name: \"Destiny of Light\",\n    code: \"sunshine\",\n    desc:\n      \"2% chance to Deathmark an enemy when matching Yellow Gems, boosted by my ascensions.\"\n  },\n  {\n    name: \"Destiny of Nature\",\n    code: \"seedling\",\n    desc:\n      \"2% chance to Deathmark an enemy when matching Green Gems, boosted by my ascensions.\"\n  },\n  {\n    name: \"Destiny of Stone\",\n    code: \"graniteskin\",\n    desc:\n      \"2% chance to Deathmark an enemy when matching Brown Gems, boosted by my ascensions.\"\n  },\n  {\n    name: \"Dexterous\",\n    code: \"spikearmor\",\n    desc: \"40% chance to dodge Skull damage.\"\n  },\n  {\n    name: \"Dissonance\",\n    code: \"silence\",\n    desc: \"Silence a random enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Divine Aura\",\n    code: \"divineaura\",\n    desc: \"All allies heal 2 points per turn.\"\n  },\n  {\n    name: \"Divine Bond\",\n    code: \"divinebond\",\n    desc: \"Allied Divines gain 2 Life.\"\n  },\n  {\n    name: \"Divine Right\",\n    code: \"divineshield\",\n    desc: \"Gain 4 Armor when an ally casts a spell.\"\n  },\n  {\n    name: \"Divine Shield\",\n    code: \"divinebond\",\n    desc: \"Allied Divines gain 2 Armor.\"\n  },\n  {\n    name: \"Divine Slayer\",\n    code: \"divineslayer\",\n    desc: \"Deal double Skull damage vs. Divine.\"\n  },\n  {\n    name: \"Divinity\",\n    code: \"divineaura\",\n    desc: \"All Divine Allies gain 2 Life every turn.\"\n  },\n  {\n    name: \"Dodge\",\n    code: \"agile\",\n    desc: \"30% chance to dodge Skull damage.\"\n  },\n  {\n    name: \"Doom Aura\",\n    code: \"aspectofdeath\",\n    desc: \"Create a Doomstorm on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Doom\",\n    code: \"doom\",\n    desc: \"Deal double Skull damage vs. Death Marked enemies.\"\n  },\n  {\n    name: \"Dragon Bond\",\n    code: \"dragonbond\",\n    desc: \"Allied Dragons gain 2 Life.\"\n  },\n  {\n    name: \"Dragon Boon\",\n    code: \"dragonbond\",\n    desc: \"25% chance to summon a Dragonette on death.\"\n  },\n  {\n    name: \"Dragon Shield\",\n    code: \"dragonbond\",\n    desc: \"Allied Dragons gain 2 Armor.\"\n  },\n  {\n    name: \"Dragon Slayer\",\n    code: \"dragonslayer\",\n    desc: \"Deal double Skull damage vs. Dragons.\"\n  },\n  {\n    name: \"Dragon Vines\",\n    code: \"dragonvines\",\n    desc: \"Entangle the first enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Dragon's Blessing\",\n    code: \"divineaura\",\n    desc:\n      \"Cause a random positive status effect on a random Ally on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Dragon's Grace\",\n    code: \"manyheads\",\n    desc: \"All ally Dragons gain 1 Life and Magic on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Drowned Crew\",\n    code: \"undeadslayer\",\n    desc: \"All Elementals start battle with 50% Mana.\"\n  },\n  {\n    name: \"Dusk’s Aura\",\n    code: \"darkchannel\",\n    desc: \"Create a darkstorm at the start of a battle.\"\n  },\n  {\n    name: \"Dwarf Bond\",\n    code: \"dwarfbond\",\n    desc: \"Allied Dwarves gain 2 Life.\"\n  },\n  {\n    name: \"Dwarf Shield\",\n    code: \"dwarfbond\",\n    desc: \"Allied Dwarves gain 2 Armor.\"\n  },\n  {\n    name: \"Dwarf Slayer\",\n    code: \"dwarfslayer\",\n    desc: \"Deal double Skull damage vs. Dwarves.\"\n  },\n  {\n    name: \"Dwarven Armor\",\n    code: \"giantbond\",\n    desc: \"Gain 4 Armor for each Dwarven ally.\"\n  },\n  {\n    name: \"Dwarven Doom\",\n    code: \"soullegion\",\n    desc: \"Summon a Doomstorm when an enemy dies.\"\n  },\n  {\n    name: \"Dwarven Mettle\",\n    code: \"giantslayer\",\n    desc: \"All Dwarven allies gain 2 Life and Attack on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Eagle Eye\",\n    code: \"alert\",\n    desc: \"Place Hunter's Mark on enemies when doing Skull damage.\"\n  },\n  {\n    name: \"Earthquake\",\n    code: \"shatter\",\n    desc: \"Stun all Enemies on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Electrified Plating\",\n    code: \"technomancy\",\n    desc: \"Add 50% of Armor to Skull damage.\"\n  },\n  {\n    name: \"Elemental Bond\",\n    code: \"elementalbond\",\n    desc: \"Allied Elementals gain 2 Life.\"\n  },\n  {\n    name: \"Elemental Shield\",\n    code: \"elementalbond\",\n    desc: \"Allied Elementals gain 2 Armor.\"\n  },\n  {\n    name: \"Elemental Slayer\",\n    code: \"elementalslayer\",\n    desc: \"Deal double Skull damage vs. Elementals.\"\n  },\n  {\n    name: \"Elf Bond\",\n    code: \"elfbond\",\n    desc: \"Allied Elves gain 2 Life.\"\n  },\n  {\n    name: \"Elf Shield\",\n    code: \"elfbond\",\n    desc: \"Allied Elves gain 2 Armor.\"\n  },\n  {\n    name: \"Elf Slayer\",\n    code: \"elfslayer\",\n    desc: \"Deal double Skull damage vs. Elves.\"\n  },\n  {\n    name: \"Elven Kin\",\n    code: \"dragonvines\",\n    desc: \"All Elves start battle with 50% Mana.\"\n  },\n  {\n    name: \"Elven Sentries\",\n    code: \"elfbond\",\n    desc: \"All Elves gain 1 Magic and Attack at the start of a battle.\"\n  },\n  {\n    name: \"Emperor's Blessing\",\n    code: \"kingswill\",\n    desc: \"Enchant a random ally on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Empowered\",\n    code: \"empowered\",\n    desc: \"Start battles with full Mana.\"\n  },\n  {\n    name: \"Energize\",\n    code: \"technomancy\",\n    desc: \"Gain 3 Magic on Yellow gem matches.\"\n  },\n  {\n    name: \"Ensoul\",\n    code: \"ensoul\",\n    desc: \"Gain an extra Soul on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Entrapment\",\n    code: \"fireproof\",\n    desc: \"Deal double Skull damage vs. Entangled enemies.\"\n  },\n  {\n    name: \"Eternal Summer\",\n    code: \"feybond\",\n    desc: \"All Fey Allies gain 2 Life every turn.\"\n  },\n  { name: \"Exemplar\", code: \"avenger\", description: \"Gain 5 Attack in PvP.\" },\n  {\n    name: \"Experiment\",\n    code: \"siphon\",\n    desc: \"Inflict a random status effect  on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Extreme Greed\",\n    code: \"greedy\",\n    desc: \"Gain 4 bonus Gold when matching 4 or more Gems.\"\n  },\n  {\n    name: \"Fall\",\n    code: \"fall\",\n    desc: \"Gain 8 Magic on Brown gem matches.\"\n  },\n  {\n    name: \"Familiar\",\n    code: \"goblord\",\n    desc: \"50% chance to summon a Giant Spider when I take damage.\"\n  },\n  {\n    name: \"Fast Healing\",\n    code: \"regeneration\",\n    desc: \"Recover 2 Life every turn.\"\n  },\n  { name: \"Fast\", code: \"fast\", description: \"Start battles with 50% Mana.\" },\n  {\n    name: \"Feline Fury\",\n    code: \"beastbond\",\n    desc: \"All Raksha gain 1 Attack and Life.\"\n  },\n  { name: \"Ferocity\", code: \"deathtouch\", description: \"Gain 4 Attack.\" },\n  { name: \"Fey Bond\", code: \"feybond\", description: \"Allied Fey gain 2 Life.\" },\n  {\n    name: \"Fey Link\",\n    code: \"spiritfire\",\n    desc: \"50% chance to Faerie Fire a random Enemy at the start of my Turn.\"\n  },\n  {\n    name: \"Fey Shield\",\n    code: \"feybond\",\n    desc: \"Allied Fey gain 2 Armor.\"\n  },\n  {\n    name: \"Fey Slayer\",\n    code: \"feyslayer\",\n    desc: \"Deal double Skull damage vs. Fey.\"\n  },\n  {\n    name: \"Fey Touch\",\n    code: \"feybond\",\n    desc: \"Faerie Fire enemies when doing Skull damage.\"\n  },\n  {\n    name: \"Fey Vengeance\",\n    code: \"aflame\",\n    desc: \"Faerie Fire a random enemy when an Ally dies.\"\n  },\n  {\n    name: \"Feyblade\",\n    code: \"feyslayer\",\n    desc: \"Deal double Skull damage vs. enemies with Faerie Fire.\"\n  },\n  {\n    name: \"Fiery Cloak\",\n    code: \"fierycloak\",\n    desc: \"Burn a random enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Fiery Death\",\n    code: \"firebrand\",\n    desc: \"Summon a Firestorm when an enemy dies.\"\n  },\n  {\n    name: \"Fire Aura\",\n    code: \"fierycloak\",\n    desc: \"All Red Allies gain 5 to all Stats.\"\n  },\n  {\n    name: \"Fire Brand\",\n    code: \"firebrand\",\n    desc: \"Gain 1 Attack for each Red ally.\"\n  },\n  {\n    name: \"Fire Heart\",\n    code: \"fireheart\",\n    desc: \"Gain 1 Life for each Red ally.\"\n  },\n  {\n    name: \"Fire Link\",\n    code: \"firelink\",\n    desc: \"Gain bonus Red Mana from Red Gem matches.\"\n  },\n  {\n    name: \"Fire Spirit\",\n    code: \"firespirit\",\n    desc: \"Gain 1 Magic for each Red ally.\"\n  },\n  {\n    name: \"Fireblade\",\n    code: \"pyromania\",\n    desc: \"Deal triple Skull damage to burning enemies.\"\n  },\n  {\n    name: \"Firebringer\",\n    code: \"firelink\",\n    desc: \"Gain bonus Red Mana from Red Gem matches.\"\n  },\n  {\n    name: \"Fireproof\",\n    code: \"fireproof\",\n    desc: \"Immunity to Burning and Faerie Fire.\"\n  },\n  {\n    name: \"Firestarter\",\n    code: \"aflame\",\n    desc: \"Create a firestorm at the start of a battle.\"\n  },\n  {\n    name: \"First Wargare\",\n    code: \"nastyteeth\",\n    desc:\n      \"Give 2 Attack and Magic to Allied Wargare when matching 4 or more Gems.\"\n  },\n  {\n    name: \"Focus\",\n    code: \"knightslayer\",\n    desc: \"Deal double Skull damage vs. enemies with Hunter's Mark.\"\n  },\n  {\n    name: \"For The Herd\",\n    code: \"taurosbond\",\n    desc: \"Give all Tauros 1 Attack, Armor and Life on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"For the People\",\n    code: \"queensgrace\",\n    desc: \"All Humans gain 2 Armor at the start of each turn.\"\n  },\n  {\n    name: \"Fortitude\",\n    code: \"reinforced\",\n    desc: \"Immune to Stun, Poison, Disease, Death Mark and Devour.\"\n  },\n  {\n    name: \"Frenzy\",\n    code: \"frenzy\",\n    desc: \"Gain 1 Attack when taking damage.\"\n  },\n  {\n    name: \"From Ashes\",\n    code: \"fireheart\",\n    desc: \"Summon a Firestorm when an ally dies.\"\n  },\n  {\n    name: \"From Bones\",\n    code: \"undeadbond\",\n    desc: \"Summon a Bonestorm when an ally dies.\"\n  },\n  {\n    name: \"From Dark\",\n    code: \"magicheart\",\n    desc: \"Summon a Darkstorm when an ally dies.\"\n  },\n  {\n    name: \"From Doom\",\n    code: \"deathtouch\",\n    desc: \"Summon a Doomstorm when an ally dies.\"\n  },\n  {\n    name: \"From Ice\",\n    code: \"waterheart\",\n    desc: \"Summon an Icestorm when an ally dies.\"\n  },\n  {\n    name: \"From Light\",\n    code: \"airheart\",\n    desc: \"Summon a Lightstorm when an ally dies.\"\n  },\n  {\n    name: \"From Nature\",\n    code: \"natureheart\",\n    desc: \"Summon a Leafstorm when an ally dies.\"\n  },\n  {\n    name: \"From Stone\",\n    code: \"stoneheart\",\n    desc: \"Summon a Duststorm when an ally dies.\"\n  },\n  {\n    name: \"Frostbite\",\n    code: \"frozensoul\",\n    desc: \"25% chance to Freeze a random enemy when an ally casts a spell.\"\n  },\n  {\n    name: \"Frozen Hatred\",\n    code: \"chilltouch\",\n    desc: \"Deal double Skull damage vs. Blue Enemies.\"\n  },\n  {\n    name: \"Frozen Soul\",\n    code: \"frozensoul\",\n    desc: \"Inflict Frozen when enemies deal Skull damage to me.\"\n  },\n  {\n    name: \"Full Plate\",\n    code: \"fullplate\",\n    desc: \"Gain 2 Armor every turn.\"\n  },\n  {\n    name: \"Gale Force\",\n    code: \"airspirit\",\n    desc: \"All Yellow allies gain 2 Attack.\"\n  },\n  {\n    name: \"Gate Guardian\",\n    code: \"gateguardian\",\n    desc: \"50% chance to Summon a Warg when an enemy dies.\"\n  },\n  {\n    name: \"General\",\n    code: \"leader\",\n    desc: \"Gain 3 to all Skills if in last position.\"\n  },\n  {\n    name: \"Get Behind Me!\",\n    code: \"divineshield\",\n    desc: \"25% chance to Barrier a random Ally at the start of my turn.\"\n  },\n  {\n    name: \"Giant Bond\",\n    code: \"giantbond\",\n    desc: \"Allied Giants gain 2 Life.\"\n  },\n  {\n    name: \"Giant Lord\",\n    code: \"goblord\",\n    desc: \"All Giants start battle with 50% Mana.\"\n  },\n  {\n    name: \"Giant Queen\",\n    code: \"queensgrace\",\n    desc: \"All Giant Allies gain 2 Life and Magic on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Giant Shield\",\n    code: \"giantbond\",\n    desc: \"Allied Giants gain 2 Armor.\"\n  },\n  {\n    name: \"Giant Slayer\",\n    code: \"giantslayer\",\n    desc: \"Deal double Skull damage vs. Giants.\"\n  },\n  {\n    name: \"Gift of Fire\",\n    code: \"fireheart\",\n    desc: \"All Red Allies gain 1 Magic.\"\n  },\n  {\n    name: \"Gloom\",\n    code: \"undeadbond\",\n    desc: \"All Purple allies gain 2 Life.\"\n  },\n  {\n    name: \"Goblin Bond\",\n    code: \"goblinbond\",\n    desc: \"Allied Goblins gain 2 Life.\"\n  },\n  {\n    name: \"Goblin Friend\",\n    code: \"goblinbond\",\n    desc: \"All Goblins gain 2 Attack.\"\n  },\n  {\n    name: \"Goblin Shield\",\n    code: \"goblinbond\",\n    desc: \"Allied Goblins gain 2 Armor.\"\n  },\n  {\n    name: \"Goblin Slayer\",\n    code: \"goblinslayer\",\n    desc: \"Deal double Skull damage vs. Goblins.\"\n  },\n  {\n    name: \"Goblord\",\n    code: \"goblord\",\n    desc: \"Gain 20 Life if in last position.\"\n  },\n  {\n    name: \"Godslayer\",\n    code: \"daemonslayer\",\n    desc: \"Deal 3x - 5x Skull damage vs. Bosses, based on my ascension.\"\n  },\n  {\n    name: \"Golem Protector\",\n    code: \"taurosbond\",\n    desc: \"20% chance to summon an Ancient Golem when I take damage to Life.\"\n  },\n  {\n    name: \"Granite Skin\",\n    code: \"graniteskin\",\n    desc: \"Reduce damage from Skulls by 75%.\"\n  },\n  {\n    name: \"Greedy\",\n    code: \"greedy\",\n    desc: \"Gain 2 bonus Gold on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Grim Curse\",\n    code: \"virulence\",\n    desc: \"Disease a random enemy when matching Purple Gems.\"\n  },\n  {\n    name: \"Grudge\",\n    code: \"grudge\",\n    desc: \"Gain 1 Attack when an enemy casts a spell.\"\n  },\n  {\n    name: \"Hack n Slash\",\n    code: \"hacknslash\",\n    desc: \"Gain 3 Attack when dealing Skull damage.\"\n  },\n  {\n    name: \"Hammer Mastery\",\n    code: \"dwarfbond\",\n    desc: \"Gain 2 Magic if using a Hammer.\"\n  },\n  {\n    name: \"Harpy Flock\",\n    code: \"airheart\",\n    desc: \"5% chance to summon a Harpy when my turn begins.\"\n  },\n  {\n    name: \"Harvest Moon\",\n    code: \"darkfall\",\n    desc: \"All Wargare Allies gain 2 Life every turn.\"\n  },\n  {\n    name: \"Haunted Weave\",\n    code: \"stalker\",\n    desc: \"Web a random enemy when I summon a troop.\"\n  },\n  {\n    name: \"Head Hunter\",\n    code: \"soullegion\",\n    desc: \"50% chance to summon a Vargouille when an Enemy dies.\"\n  },\n  {\n    name: \"Healing Herb\",\n    code: \"naturespirit\",\n    desc: \"Gain 4 Life when matching Green Gems.\"\n  },\n  {\n    name: \"Heatwave\",\n    code: \"fierycloak\",\n    desc: \"Create a Firestorm at the start of every turn.\"\n  },\n  {\n    name: \"Hellsteed\",\n    code: \"fierycloak\",\n    desc: \"25% chance to summon a Nightmare when an Ally casts a Spell.\"\n  },\n  {\n    name: \"Hidden Trap\",\n    code: \"darkchannel\",\n    desc: \"Explode a random Gem when matching Yellow Gems.\"\n  },\n  {\n    name: \"High Ancestry\",\n    code: \"mysticbond\",\n    desc: \"Immune to Mana Drain, Silence, Faerie Fire, and Death Mark.\"\n  },\n  {\n    name: \"High Seas\",\n    code: \"waterlink\",\n    desc: \"Gain 2 bonus Blue Mana when matching Blue Gems.\"\n  },\n  {\n    name: \"Holy Armor\",\n    code: \"armored\",\n    desc: \"Reduce damage from Skulls by 40%.\"\n  },\n  {\n    name: \"Huge\",\n    code: \"huge\",\n    desc: \"Gain 2 Life on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Human Bond\",\n    code: \"humanbond\",\n    desc: \"Allied Humans gain 2 Life.\"\n  },\n  {\n    name: \"Human Shield\",\n    code: \"humanbond\",\n    desc: \"Allied Humans gain 2 Armor.\"\n  },\n  {\n    name: \"Human Slayer\",\n    code: \"humanslayer\",\n    desc: \"Deal double Skull damage vs. Humans.\"\n  },\n  {\n    name: \"Hunger\",\n    code: \"hunger\",\n    desc: \"Gain 2 to all Skills on Skull gem matches.\"\n  },\n  {\n    name: \"Hunt\",\n    code: \"stryxslayer\",\n    desc: \"Hunter’s Mark a random enemy on 4 or 5 of a kind.\"\n  },\n  {\n    name: \"Hunter's Moon\",\n    code: \"darkfall\",\n    desc: \"Hunter's Mark a random Enemy when matching Red Gems.\"\n  },\n  {\n    name: \"Ice Armor\",\n    code: \"chilltouch\",\n    desc: \"Reduce damage from Skulls by 65%.\"\n  },\n  {\n    name: \"Ice Aura\",\n    code: \"frozensoul\",\n    desc: \"All Blue Allies gain 5 to all Stats.\"\n  },\n  {\n    name: \"Icy Cloak\",\n    code: \"icycloak\",\n    desc: \"Deal triple Skull damage vs. Frozen enemies.\"\n  },\n  {\n    name: \"Icy Death\",\n    code: \"waterbrand\",\n    desc: \"Summon an Icestorm when an enemy dies.\"\n  },\n  {\n    name: \"Icy Rebirth\",\n    code: \"chilltouch\",\n    desc: \"Freeze all Enemies when I die.\"\n  },\n  {\n    name: \"Icy Veil\",\n    code: \"waterbrand\",\n    desc: \"Create an icestorm at the start of a battle.\"\n  },\n  {\n    name: \"Immense\",\n    code: \"immense\",\n    desc: \"Gain 10 Life on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Immortal\",\n    code: \"immortal\",\n    desc: \"25% chance to resurrect after death.\"\n  },\n  { name: \"Immune\", code: \"immune\", description: \"Immunity to Disease.\" },\n  {\n    name: \"Impact\",\n    code: \"shatter\",\n    desc: \"Inflict Stun when enemies deal Skull damage to me.\"\n  },\n  {\n    name: \"Impervious\",\n    code: \"impervious\",\n    desc: \"Immune to all Status Effects, Devour, and Mana Burn.\"\n  },\n  {\n    name: \"Indigestible\",\n    code: \"indigestible\",\n    desc: \"Immunity to Devour.\"\n  },\n  {\n    name: \"Infernal Armor\",\n    code: \"aflame\",\n    desc: \"Reflect 25% of Skull damage.\"\n  },\n  {\n    name: \"Insane Growth\",\n    code: \"immense\",\n    desc: \"Gain 5 to a random Skill on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Inscribed\",\n    code: \"inscribed\",\n    desc: \"Gain 1 Armor when an enemy casts a spell.\"\n  },\n  {\n    name: \"Inspiration\",\n    code: \"queensgrace\",\n    desc: \"All Allies start battle with 15% Mana.\"\n  },\n  {\n    name: \"Inspire Hope\",\n    code: \"sunshine\",\n    desc: \"All Humans start battle with 50% Mana.\"\n  },\n  { name: \"Insulated\", code: \"insulated\", description: \"Immunity to Frozen.\" },\n  {\n    name: \"Invention\",\n    code: \"mechslayer\",\n    desc: \"Gain 2 Armor on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Invigorated\",\n    code: \"naturespirit\",\n    desc: \"Gain 1 Life when an ally casts a spell.\"\n  },\n  {\n    name: \"Invulnerable\",\n    code: \"impervious\",\n    desc:\n      \"Immune to all Status Effects, Devour,  Mana Drain, Transform, and Lethal Damage.\"\n  },\n  {\n    name: \"Jaws\",\n    code: \"nastyteeth\",\n    desc: \"All Merfolk gain 3 Attack on 4 or 5 Gem matches.\"\n  },\n  { name: \"Jinx\", code: \"jinx\", description: \"Halve enemy Gem Masteries.\" },\n  {\n    name: \"Just a Bite\",\n    code: \"hunger\",\n    desc: \"Steal 4 Life from the first enemy when matching Brown Gems.\"\n  },\n  {\n    name: \"King's Legion\",\n    code: \"aspectofdeath\",\n    desc:\n      \"All Undead Allies gain 1 Armor and Magic when matching 4 or more Gems.\"\n  },\n  {\n    name: \"King's Will\",\n    code: \"kingswill\",\n    desc: \"Gain 8 Life when I deal Skull damage.\"\n  },\n  {\n    name: \"Knife Throwing\",\n    code: \"avenger\",\n    desc: \"Gain 2 Magic if using a Dagger.\"\n  },\n  {\n    name: \"Knight Bond\",\n    code: \"knightbond\",\n    desc: \"Allied Knights gain 2 Life.\"\n  },\n  {\n    name: \"Knight Shield\",\n    code: \"knightbond\",\n    desc: \"Allied Knights gain 2 Armor.\"\n  },\n  {\n    name: \"Knight Slayer\",\n    code: \"knightslayer\",\n    desc: \"Deal double Skull damage vs. Knights.\"\n  },\n  {\n    name: \"Knockout\",\n    code: \"knockout\",\n    desc: \"Inflict Stun when doing Skull damage.\"\n  },\n  {\n    name: \"Leader\",\n    code: \"leader\",\n    desc: \"Gain 3 to all Skills if in first position.\"\n  },\n  {\n    name: \"Leading Light\",\n    code: \"armored\",\n    desc: \"Gain 10 Armor if in first position.\"\n  },\n  {\n    name: \"Lethal Toxin\",\n    code: \"lethaltoxin\",\n    desc: \"Deal triple Skull damage to Poisoned and Webbed enemies.\"\n  },\n  {\n    name: \"Life Drain\",\n    code: \"lifedrain\",\n    desc: \"Gain 4 Life when an enemy dies.\"\n  },\n  {\n    name: \"Life Siphon\",\n    code: \"lifedrain\",\n    desc: \"Steal 2 Life from the first enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Light Fingers\",\n    code: \"greedy\",\n    desc: \"Gain 5 Gold every turn.\"\n  },\n  {\n    name: \"Lightbringer\",\n    code: \"merfolkbond\",\n    desc: \"Gain bonus Yellow Mana from Yellow Gem matches.\"\n  },\n  {\n    name: \"Lightning Bolt\",\n    code: \"airbrand\",\n    desc: \"Deal 10 damage to a random enemy on 4 or 5 matches.\"\n  },\n  {\n    name: \"Lightning Strike\",\n    code: \"airbrand\",\n    desc: \"Explode 1 Yellow Gem on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Lion's Wrath\",\n    code: \"lionstrength\",\n    desc: \"Stun a random enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Lord of Beasts\",\n    code: \"lionstrength\",\n    desc: \"All Beasts start battle with 50% Mana.\"\n  },\n  {\n    name: \"Lord of Death\",\n    code: \"aspectofdeath\",\n    desc: \"All Undead gain 5 Life and Magic when an enemy dies.\"\n  },\n  {\n    name: \"Lord of Storms\",\n    code: \"airlink\",\n    desc: \"Elementals gain 1 Magic when an ally casts a spell.\"\n  },\n  {\n    name: \"Loyal Mount\",\n    code: \"dragonslayer\",\n    desc: \"100% chance to summon a Drake on death.\"\n  },\n  {\n    name: \"Mace of Power\",\n    code: \"dwarfbond\",\n    desc: \"Gain 2 Magic if using a Mace.\"\n  },\n  {\n    name: \"Mage Lord\",\n    code: \"mysticbond\",\n    desc: \"Gain 2 Magic if in last position.\"\n  },\n  {\n    name: \"Magic Aura\",\n    code: \"eyeofkhetar\",\n    desc: \"All Purple Allies gain 5 to all Stats.\"\n  },\n  {\n    name: \"Magic Brand\",\n    code: \"magicbrand\",\n    desc: \"Gain 1 Attack for each Purple ally.\"\n  },\n  {\n    name: \"Magic Heart\",\n    code: \"magicheart\",\n    desc: \"Gain 1 Life for each Purple ally.\"\n  },\n  {\n    name: \"Magic Link\",\n    code: \"magiclink\",\n    desc: \"Gain bonus Purple Mana from Purple Gem matches.\"\n  },\n  {\n    name: \"Magic Spirit\",\n    code: \"magicspirit\",\n    desc: \"Gain 1 Magic for each Purple ally.\"\n  },\n  {\n    name: \"Magic Vines\",\n    code: \"dragonvines\",\n    desc: \"Entangle a random enemy when matching Purple.\"\n  },\n  {\n    name: \"Magical Shield\",\n    code: \"insulated\",\n    desc: \"All Purple allies gain 2 Armor.\"\n  },\n  {\n    name: \"Mana Shield\",\n    code: \"manashield\",\n    desc: \"Immunity to Mana Burn, Mana Drain and Mana Steal.\"\n  },\n  {\n    name: \"Mana Source\",\n    code: \"empowered\",\n    desc: \"Start battles with 50% Mana.\"\n  },\n  {\n    name: \"Manifestation\",\n    code: \"humanbond\",\n    desc: \"Gain 5 to all Skill Points when matching Skulls.\"\n  },\n  {\n    name: \"Many Heads\",\n    code: \"manyheads\",\n    desc: \"All enemies take 3 damage when they deal Skull damage.\"\n  },\n  {\n    name: \"Marauder Bond\",\n    code: \"marauderbond\",\n    desc: \"Allied Marauders gain 2 Life.\"\n  },\n  {\n    name: \"Marauder Slayer\",\n    code: \"marauderslayer\",\n    desc: \"Deal double Skull damage vs. Marauders.\"\n  },\n  {\n    name: \"Master Builder\",\n    code: \"constructbond\",\n    desc: \"All constructs gain 10 Life.\"\n  },\n  {\n    name: \"Mech Bond\",\n    code: \"mechbond\",\n    desc: \"Allied Mechs gain 2 Life.\"\n  },\n  {\n    name: \"Mech Shield\",\n    code: \"mechbond\",\n    desc: \"Allied Mechs gain 2 Armor.\"\n  },\n  {\n    name: \"Mech Slayer\",\n    code: \"mechslayer\",\n    desc: \"Deal double Skull damage vs. Mechs.\"\n  },\n  {\n    name: \"Mega-Aspect of Death\",\n    code: \"aspectofdeath\",\n    desc: \"Steal 3 Life from the first enemy at the start of each turn.\"\n  },\n  {\n    name: \"Mega-Divine Right\",\n    code: \"divineshield\",\n    desc: \"Gain 4 Armor when matching Yellow Gems.\"\n  },\n  {\n    name: \"Mega-Immense\",\n    code: \"immense\",\n    desc: \"Gain 12 Life on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Mega-Thorns\",\n    code: \"thorns\",\n    desc: \"Reflect 100% of Skull damage.\"\n  },\n  {\n    name: \"Mega-Unbreakable\",\n    code: \"immense\",\n    desc: \"Reduce damage from Skulls by 100%.\"\n  },\n  {\n    name: \"Mega-Winter Veil\",\n    code: \"winterveil\",\n    desc: \"Freeze all enemies on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Mentor\",\n    code: \"magiclink\",\n    desc: \"All allies gain 1 Magic.\"\n  },\n  {\n    name: \"Merchant\",\n    code: \"merchant\",\n    desc: \"Gain 25% bonus Gold from battle.\"\n  },\n  {\n    name: \"Merfolk Bond\",\n    code: \"merfolkbond\",\n    desc: \"Allied Merfolk gain 2 Life.\"\n  },\n  {\n    name: \"Merfolk Shield\",\n    code: \"merfolkbond\",\n    desc: \"Allied Merfolk gain 2 Armor.\"\n  },\n  {\n    name: \"Merfolk Slayer\",\n    code: \"merfolkslayer\",\n    desc: \"Deal double Skull damage vs. Merfolk.\"\n  },\n  {\n    name: \"Miasma\",\n    code: \"miasma\",\n    desc: \"Poison a random enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Molten\",\n    code: \"molten\",\n    desc: \"Burn a random enemy when matching Red Gems.\"\n  },\n  {\n    name: \"Moneybags\",\n    code: \"merchant\",\n    desc: \"Gain 100% bonus Gold from battle.\"\n  },\n  {\n    name: \"Monkey Magic\",\n    code: \"spiritfire\",\n    desc: \"Steal 1 Magic from the first enemy at the start of my turn.\"\n  },\n  {\n    name: \"Monster Bond\",\n    code: \"monsterbond\",\n    desc: \"Allied Monsters gain 2 Life.\"\n  },\n  {\n    name: \"Monster Shield\",\n    code: \"monsterbond\",\n    desc: \"Allied Monsters gain 2 Armor.\"\n  },\n  {\n    name: \"Monster Slayer\",\n    code: \"monsterslayer\",\n    desc: \"Deal double Skull damage vs. Monsters.\"\n  },\n  {\n    name: \"Monstrous Kin\",\n    code: \"manyheads\",\n    desc: \"Give all Monster Allies 2 to all Skill Points on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Mutant Regeneration\",\n    code: \"regeneration\",\n    desc: \"Recover 6 Life at the start of each turn.\"\n  },\n  {\n    name: \"Mystic Bond\",\n    code: \"mysticbond\",\n    desc: \"Allied Mystics gain 2 Life.\"\n  },\n  {\n    name: \"Mystic Channel\",\n    code: \"magicspirit\",\n    desc: \"All Mystics gain 2 Magic and Life when an enemy dies.\"\n  },\n  {\n    name: \"Mystic Shield\",\n    code: \"mysticbond\",\n    desc: \"Allied Mystics gain 2 Armor.\"\n  },\n  {\n    name: \"Mystic Slayer\",\n    code: \"mysticslayer\",\n    desc: \"Deal double Skull damage vs. Mystics.\"\n  },\n  {\n    name: \"Naga Bond\",\n    code: \"nagabond\",\n    desc: \"Allied Naga gain 2 Life.\"\n  },\n  {\n    name: \"Naga Shield\",\n    code: \"nagabond\",\n    desc: \"Allied Naga gain 2 Armor.\"\n  },\n  {\n    name: \"Naga Slayer\",\n    code: \"nagaslayer\",\n    desc: \"Deal double Skull damage vs. Naga.\"\n  },\n  {\n    name: \"Nasty Teeth\",\n    code: \"nastyteeth\",\n    desc: \"Deal 5x Skull damage vs. Knights.\"\n  },\n  {\n    name: \"Nature Aura\",\n    code: \"thorns\",\n    desc: \"All Green Allies gain 5 to all Stats.\"\n  },\n  {\n    name: \"Nature Brand\",\n    code: \"naturebrand\",\n    desc: \"Gain 1 Attack for each Green ally.\"\n  },\n  {\n    name: \"Nature Heart\",\n    code: \"natureheart\",\n    desc: \"Gain 1 Life for each Green ally.\"\n  },\n  {\n    name: \"Nature Link\",\n    code: \"naturelink\",\n    desc: \"Gain bonus Green Mana from Green Gem matches.\"\n  },\n  {\n    name: \"Nature Pact\",\n    code: \"elfbond\",\n    desc: \"25% chance to summon a Dryad on death.\"\n  },\n  {\n    name: \"Nature Spirit\",\n    code: \"naturespirit\",\n    desc: \"Gain 1 Magic for each Green ally.\"\n  },\n  {\n    name: \"Nature's Death\",\n    code: \"naturebrand\",\n    desc: \"Summon a Leafstorm when an enemy dies.\"\n  },\n  {\n    name: \"Nature’s Aura\",\n    code: \"naturelink\",\n    desc: \"Create a leafstorm at the start of a battle.\"\n  },\n  {\n    name: \"Nature’s Will\",\n    code: \"naturelink\",\n    desc: \"Gain bonus Green Mana from Green Gem matches.\"\n  },\n  {\n    name: \"Necro Master\",\n    code: \"aspectofdeath\",\n    desc: \"Gain 150% bonus Souls from battle.\"\n  },\n  {\n    name: \"Necromancy\",\n    code: \"necromancy\",\n    desc: \"Gain 50% bonus Souls from battle.\"\n  },\n  { name: \"Nimble\", code: \"flying\", description: \"Immunity to Entangle.\" },\n  {\n    name: \"Northern Clans\",\n    code: \"frozensoul\",\n    desc: \"All Urska start the battle with 50% Mana.\"\n  },\n  {\n    name: \"Ocean’s Trident\",\n    code: \"avenger\",\n    desc: \"Gain 3 Magic if using a Polearm.\"\n  },\n  {\n    name: \"Omen of Dark\",\n    code: \"jinx\",\n    desc: \"Explode a Purple Gem at the start of battle.\"\n  },\n  {\n    name: \"Omen of Death\",\n    code: \"undeadslayer\",\n    desc: \"Explode a Skull at the start of battle.\"\n  },\n  {\n    name: \"Omen of Fire\",\n    code: \"firelink\",\n    desc: \"Explode a Red Gem at the start of battle.\"\n  },\n  {\n    name: \"Omen of Ice\",\n    code: \"chilltouch\",\n    desc: \"Explode a Blue Gem at the start of battle.\"\n  },\n  {\n    name: \"Omen of Light\",\n    code: \"elementalbond\",\n    desc: \"Explode a Yellow Gem at the start of battle.\"\n  },\n  {\n    name: \"Omen of Nature\",\n    code: \"naturespirit\",\n    desc: \"Explode a Green Gem at the start of battle.\"\n  },\n  {\n    name: \"Omen of Stone\",\n    code: \"stonebrand\",\n    desc: \"Explode a Brown Gem at the start of battle.\"\n  },\n  {\n    name: \"Orc Armor\",\n    code: \"armored\",\n    desc: \"Gain 5 Armor when I take damage.\"\n  },\n  {\n    name: \"Orc Bond\",\n    code: \"orcbond\",\n    desc: \"Allied Orcs gain 2 Life.\"\n  },\n  {\n    name: \"Orc Cunning\",\n    code: \"magiclink\",\n    desc: \"Gain 2 Magic when I take damage.\"\n  },\n  {\n    name: \"Orc Fury\",\n    code: \"marauderslayer\",\n    desc: \"Gain 3 Attack when I take damage.\"\n  },\n  {\n    name: \"Orc Might\",\n    code: \"goblinbond\",\n    desc: \"Gain 8 to a random skill when I take damage.\"\n  },\n  {\n    name: \"Orc Shield\",\n    code: \"orcbond\",\n    desc: \"Allied Orcs gain 2 Armor.\"\n  },\n  {\n    name: \"Orc Slayer\",\n    code: \"orcslayer\",\n    desc: \"Deal double Skull damage vs. Orc.\"\n  },\n  {\n    name: \"Orclord\",\n    code: \"orclord\",\n    desc: \"All Orcs start battle with 50% Mana.\"\n  },\n  {\n    name: \"Overclock\",\n    code: \"clockwork\",\n    desc: \"Allied Mechs gain 5 Attack and Armor.\"\n  },\n  {\n    name: \"Pack Master\",\n    code: \"wildfolkslayer\",\n    desc: \"25% chance to summon a Dire Wolf on death.\"\n  },\n  {\n    name: \"Penumbra\",\n    code: \"darkfall\",\n    desc: \"Create a Darkstorm at the start of every turn.\"\n  },\n  {\n    name: \"Perfect Aim\",\n    code: \"trueshot\",\n    desc: \"Gain 2 Magic if using a Bow.\"\n  },\n  {\n    name: \"Pickpocket\",\n    code: \"merchant\",\n    desc: \"Gain 10 Gold when I take damage.\"\n  },\n  {\n    name: \"Pillage and Plunder\",\n    code: \"graniteskin\",\n    desc: \"Gain 20 bonus Gold on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Plague Touch\",\n    code: \"plaguetouch\",\n    desc: \"Inflict Disease when doing Skull damage.\"\n  },\n  {\n    name: \"Plaguebearer\",\n    code: \"virulence\",\n    desc: \"Disease a random enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Poison Gaze\",\n    code: \"aspectofplague\",\n    desc: \"Poison all enemies on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Poison Spores\",\n    code: \"jinx\",\n    desc: \"Inflict Poison when I take Skull damage.\"\n  },\n  {\n    name: \"Poison Tide\",\n    code: \"waterlink\",\n    desc: \"Steal 4 Life from the first enemy when matching Green Gems.\"\n  },\n  {\n    name: \"Portent\",\n    code: \"divineaura\",\n    desc: \"All Centaurs gain 2 Magic when an enemy casts a spell.\"\n  },\n  {\n    name: \"Possession\",\n    code: \"spiritfire\",\n    desc: \"25% chance to resurrect after death.\"\n  },\n  {\n    name: \"Potion of Armor\",\n    code: \"immune\",\n    desc: \"Each Ally reduces damage from Skulls by 25%.\"\n  },\n  {\n    name: \"Potion of Blessing\",\n    code: \"immune\",\n    desc: \"Bless each Ally at the start of battle.\"\n  },\n  {\n    name: \"Potion of Enchantment\",\n    code: \"immune\",\n    desc: \"Enchant each Ally at the start of battle.\"\n  },\n  {\n    name: \"Potion of Explosion\",\n    code: \"immune\",\n    desc: \"Each Ally explodes 1 Gem at the start of battle.\"\n  },\n  {\n    name: \"Potion of Rejuvenation\",\n    code: \"immune\",\n    desc: \"Each Ally heals 3 Life at the start of each turn.\"\n  },\n  {\n    name: \"Potion of Shielding\",\n    code: \"immune\",\n    desc: \"Barrier each Ally at the start of battle.\"\n  },\n  {\n    name: \"Precision\",\n    code: \"humanslayer\",\n    desc: \"Gain 2 Magic if using a Missile.\"\n  },\n  {\n    name: \"Pride Prowess\",\n    code: \"lionstrength\",\n    desc: \"All ally Raksha gain 1 Attack and Magic at the start of every turn.\"\n  },\n  {\n    name: \"Protector\",\n    code: \"stoneskin\",\n    desc: \"Gain 3 Magic if using a Shield.\"\n  },\n  {\n    name: \"Provocation\",\n    code: \"nastyteeth\",\n    desc: \"Enrage a random ally on 4 or 5 matches.\"\n  },\n  {\n    name: \"Purification\",\n    code: \"blessed\",\n    desc: \"Cleanse myself on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Pyromania\",\n    code: \"pyromania\",\n    desc: \"Deal double Skull damage vs. Burning enemies.\"\n  },\n  {\n    name: \"Queen's Grace\",\n    code: \"queensgrace\",\n    desc: \"All Daemons gain 2 Attack and Life at the start of each turn.\"\n  },\n  {\n    name: \"Quick Study\",\n    code: \"grudge\",\n    desc: \"Gain 10% bonus XP from battle.\"\n  },\n  {\n    name: \"Radiant Aura\",\n    code: \"divineshield\",\n    desc: \"All Divine start battle with 40% Mana.\"\n  },\n  {\n    name: \"Raging Bull\",\n    code: \"goblord\",\n    desc: \"Gain 2 Attack, Armor and Life when matching Red Gems.\"\n  },\n  {\n    name: \"Rainbow Link\",\n    code: \"spiritfire\",\n    desc: \"Gain bonus Mana from all Gem matches.\"\n  },\n  {\n    name: \"Raksha Bond\",\n    code: \"rakshabond\",\n    desc: \"Allied Raksha gain 2 Life.\"\n  },\n  {\n    name: \"Raksha Shield\",\n    code: \"rakshabond\",\n    desc: \"Allied Raksha gain 2 Armor.\"\n  },\n  {\n    name: \"Raksha Slayer\",\n    code: \"rakshaslayer\",\n    desc: \"Deal double Skull damage vs. Raksha.\"\n  },\n  {\n    name: \"Rancor\",\n    code: \"nastyteeth\",\n    desc: \"Gain 3 Attack when an enemy matches Skulls.\"\n  },\n  {\n    name: \"Razor Armor\",\n    code: \"constructbond\",\n    desc: \"Add 20% of Armor to Skull Damage.\"\n  },\n  {\n    name: \"Razor Teeth\",\n    code: \"nagaslayer\",\n    desc: \"Inflict Bleed when doing Skull damage.\"\n  },\n  {\n    name: \"Reaper\",\n    code: \"undeadslayer\",\n    desc: \"Gain 2 Magic if using a Scythe.\"\n  },\n  {\n    name: \"Rebirth\",\n    code: \"immortal\",\n    desc: \"50% chance to become a Baby Dragon with full mana on death.\"\n  },\n  {\n    name: \"Regeneration\",\n    code: \"regeneration\",\n    desc: \"Recover 1 Life at the start of each turn.\"\n  },\n  {\n    name: \"Reinforced\",\n    code: \"reinforced\",\n    desc: \"Recover 1 Armor at the start of each turn.\"\n  },\n  {\n    name: \"Repair\",\n    code: \"reinforced\",\n    desc: \"Gain 1 Armor on 4 or 5 Gem matches.\"\n  },\n  { name: \"Resilience\", code: \"magicbrand\", description: \"Gain 8 Life.\" },\n  {\n    name: \"Resplendence\",\n    code: \"stoneheart\",\n    desc: \"Gain 2 Magic if using Jewellery.\"\n  },\n  {\n    name: \"Revenge\",\n    code: \"frenzy\",\n    desc: \"Inflict Hunter's Mark when I take Skull damage.\"\n  },\n  {\n    name: \"Revered\",\n    code: \"blessed\",\n    desc: \"All allies gain 2 random Skill points.\"\n  },\n  {\n    name: \"Rising Shadows\",\n    code: \"darkfall\",\n    desc: \"7% chance to assassinate the last enemy when another enemy dies.\"\n  },\n  {\n    name: \"Rock Solid\",\n    code: \"stonelink\",\n    desc: \"Gain a Barrier when matching Brown Gems.\"\n  },\n  {\n    name: \"Rocky Death\",\n    code: \"stonebrand\",\n    desc: \"Summon a Duststorm when an enemy dies.\"\n  },\n  {\n    name: \"Rogue Bond\",\n    code: \"roguebond\",\n    desc: \"Allied Rogues gain 2 Life.\"\n  },\n  {\n    name: \"Rogue Shield\",\n    code: \"roguebond\",\n    desc: \"Allied Rogues gain 2 Armor.\"\n  },\n  {\n    name: \"Rogue Slayer\",\n    code: \"rogueslayer\",\n    desc: \"Deal double Skull damage vs. Rogues.\"\n  },\n  {\n    name: \"Root Trap\",\n    code: \"snare\",\n    desc: \"Entangle the first enemy at the start of battle.\"\n  },\n  {\n    name: \"Royal Armory\",\n    code: \"avenger\",\n    desc: \"All ally Knights gain 2 Armor.\"\n  },\n  {\n    name: \"Sacrifice\",\n    code: \"sacrifice\",\n    desc: \"Gain 3 to all Skills when an enemy dies.\"\n  },\n  {\n    name: \"Savior\",\n    code: \"impervious\",\n    desc: \"When an ally dies, Barrier another random ally.\"\n  },\n  {\n    name: \"Second Helping\",\n    code: \"queensgrace\",\n    desc: \"All allied Goblins gain 5 Life on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Seedling\",\n    code: \"seedling\",\n    desc: \"Gain 8 Magic on Green gem matches.\"\n  },\n  {\n    name: \"Serendipity\",\n    code: \"feyslayer\",\n    desc: \"Give a random ally a random status effect.\"\n  },\n  {\n    name: \"Serenity\",\n    code: \"blessed\",\n    desc: \"Inflict Silence when enemies deal Skull damage to me.\"\n  },\n  {\n    name: \"Serpent's Fang\",\n    code: \"aspectofdeath\",\n    desc: \"Deal 3 damage to a random enemy when an ally casts a spell.\"\n  },\n  {\n    name: \"Shadow Scales\",\n    code: \"insulated\",\n    desc: \"All Naga Allies gain 1 Armor every turn.\"\n  },\n  {\n    name: \"Shadows’ Call\",\n    code: \"stealthy\",\n    desc: \"20% chance to summon a Sister of Shadows when an enemy dies.\"\n  },\n  {\n    name: \"Shatter\",\n    code: \"shatter\",\n    desc: \"Deal double Skull damage vs. Frozen enemies.\"\n  },\n  {\n    name: \"Shining Staff\",\n    code: \"arcane\",\n    desc: \"Gain 2 Magic if using a Staff.\"\n  },\n  {\n    name: \"Shock\",\n    code: \"airbrand\",\n    desc: \"Deal 2 damage to a random enemy on 4 or 5 matches.\"\n  },\n  {\n    name: \"Shrapnel\",\n    code: \"molten\",\n    desc: \"Deal 1 damage to all enemies on 4 or 5 matches.\"\n  },\n  {\n    name: \"Siege\",\n    code: \"siege\",\n    desc: \"Allies gain 2 Attack when invading in PVP.\"\n  },\n  {\n    name: \"Siegebreaker\",\n    code: \"siege\",\n    desc: \"Deal 3x - 5x Skull damage vs. Towers, based on my ascension.\"\n  },\n  {\n    name: \"Silence!\",\n    code: \"silence\",\n    desc: \"Silence enemies when doing Skull damage.\"\n  },\n  {\n    name: \"Siphon\",\n    code: \"siphon\",\n    desc: \"Steal enemy mana when dealing Skull damage.\"\n  },\n  {\n    name: \"Skull Death\",\n    code: \"undeadslayer\",\n    desc: \"Summon a Bonestorm when an enemy dies.\"\n  },\n  {\n    name: \"Sky Ancestry\",\n    code: \"blessed\",\n    desc: \"Immune to Mana Drain, Silence, Faerie Fire, and Mana Burn.\"\n  },\n  { name: \"Slippery\", code: \"slippery\", description: \"Immunity to Web.\" },\n  {\n    name: \"Snap Freeze\",\n    code: \"chill\",\n    desc: \"Freeze a random enemy at the start of battle.\"\n  },\n  {\n    name: \"Snare\",\n    code: \"snare\",\n    desc: \"Inflict Web when doing Skull damage.\"\n  },\n  {\n    name: \"Sneak Attack\",\n    code: \"sacrifice\",\n    desc: \"Deal 7 damage to the last enemy on 4 or 5 matches.\"\n  },\n  {\n    name: \"Snowstorm\",\n    code: \"frozensoul\",\n    desc: \"Create an Icestorm at the start of every turn.\"\n  },\n  {\n    name: \"Soaring\",\n    code: \"ward\",\n    desc: \"Allied Stryx gain 5 Life and Attack.\"\n  },\n  {\n    name: \"Song of Bones\",\n    code: \"undeadbond\",\n    desc: \"Summon a Bonestorm at the start of Battle.\"\n  },\n  {\n    name: \"Song of Darkness\",\n    code: \"inscribed\",\n    desc: \"Summon a Darkstorm at the start of Battle.\"\n  },\n  {\n    name: \"Song of Doom\",\n    code: \"daemonslayer\",\n    desc: \"Summon a Doomstorm at the start of Battle.\"\n  },\n  {\n    name: \"Song of Fire\",\n    code: \"firebrand\",\n    desc: \"Summon a Firestorm at the start of Battle.\"\n  },\n  {\n    name: \"Song of Ice\",\n    code: \"magicheart\",\n    desc: \"Summon an Icestorm at the start of Battle.\"\n  },\n  {\n    name: \"Song of Light\",\n    code: \"blessed\",\n    desc: \"Summon a Lightstorm at the start of Battle.\"\n  },\n  {\n    name: \"Song of Nature\",\n    code: \"naturelink\",\n    desc: \"Summon a Leafstorm at the start of Battle.\"\n  },\n  {\n    name: \"Song of Stone\",\n    code: \"stonelink\",\n    desc: \"Summon a Duststorm at the start of Battle.\"\n  },\n  {\n    name: \"Soul Caller\",\n    code: \"airheart\",\n    desc: \"Gain 1 Soul every turn.\"\n  },\n  {\n    name: \"Soul Legion\",\n    code: \"soullegion\",\n    desc: \"50% chance to Summon a Wight when an enemy dies.\"\n  },\n  {\n    name: \"Soul Ritual\",\n    code: \"soullegion\",\n    desc: \"Gain 5 Magic when an enemy dies.\"\n  },\n  {\n    name: \"Sour Candy\",\n    code: \"aspectofplague\",\n    desc: \"Faerie Fire a random enemy when matching Green Gems.\"\n  },\n  {\n    name: \"Spark\",\n    code: \"mysticbond\",\n    desc: \"Gain Enchant when matching Red Gems.\"\n  },\n  {\n    name: \"Spawn of Hell\",\n    code: \"daemonicpact\",\n    desc: \"50% chance to summon a Hellspawn when an enemy dies.\"\n  },\n  {\n    name: \"Spawn\",\n    code: \"dragonslayer\",\n    desc: \"25% chance to summon a Baby Dragon on death.\"\n  },\n  {\n    name: \"Spell Armor\",\n    code: \"reinforced\",\n    desc: \"Reduce damage from Spells by 25%.\"\n  },\n  {\n    name: \"Spell Block\",\n    code: \"inscribed\",\n    desc: \"Reduce damage from Spells by 50%.\"\n  },\n  {\n    name: \"Spiked Armor\",\n    code: \"spikearmor\",\n    desc: \"Add 25% of Armor to Skull damage.\"\n  },\n  {\n    name: \"Spiky\",\n    code: \"spikearmor\",\n    desc: \"Deal 3 damage to all enemies when I match skulls.\"\n  },\n  {\n    name: \"Spiny\",\n    code: \"airbrand\",\n    desc: \"Deal 1 damage to all enemies when I match skulls.\"\n  },\n  {\n    name: \"Spore Cloud\",\n    code: \"miasma\",\n    desc: \"Disease a random Enemy when matching 4 or more Gems.\"\n  },\n  {\n    name: \"Stalker\",\n    code: \"stalker\",\n    desc: \"Deal double Skull damage vs. Webbed enemies.\"\n  },\n  {\n    name: \"Stealthy\",\n    code: \"stealthy\",\n    desc: \"Cannot be targeted by spells (unless there are no other targets).\"\n  },\n  {\n    name: \"Stone Aura\",\n    code: \"graniteskin\",\n    desc: \"All Brown Allies gain 5 to all Stats.\"\n  },\n  {\n    name: \"Stone Brand\",\n    code: \"stonebrand\",\n    desc: \"Gain 1 Attack for each Brown ally.\"\n  },\n  {\n    name: \"Stone Circle\",\n    code: \"stonespirit\",\n    desc: \"All Brown Allies gain 3 Armor.\"\n  },\n  {\n    name: \"Stone Heart\",\n    code: \"stoneheart\",\n    desc: \"Gain 1 Life for each Brown ally.\"\n  },\n  {\n    name: \"Stone Link\",\n    code: \"stonelink\",\n    desc: \"Gain bonus Brown Mana from Brown Gem matches.\"\n  },\n  {\n    name: \"Stone Loyalty\",\n    code: \"divineshield\",\n    desc: \"All Dwarves start battle with 50% Mana.\"\n  },\n  {\n    name: \"Stone Mastery\",\n    code: \"stonebrand\",\n    desc: \"Gain bonus Brown Mana from Brown Gem matches.\"\n  },\n  {\n    name: \"Stone Spirit\",\n    code: \"stonespirit\",\n    desc: \"Gain 1 Magic for each Brown ally.\"\n  },\n  {\n    name: \"Stone Wall\",\n    code: \"stonespirit\",\n    desc: \"All Brown allies gain 2 Armor.\"\n  },\n  {\n    name: \"Stoneskin\",\n    code: \"stoneskin\",\n    desc: \"Reduce damage from Skulls by 50%.\"\n  },\n  {\n    name: \"Storm Aura\",\n    code: \"airheart\",\n    desc: \"Create a duststorm at the start of a battle.\"\n  },\n  {\n    name: \"Storm Flock\",\n    code: \"fierycloak\",\n    desc: \"35% chance to summon a Harpy Mage when matching 4 or more Gems.\"\n  },\n  {\n    name: \"Storm Shield\",\n    code: \"divineshield\",\n    desc: \"Give a random Ally a Barrier on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Storm Soul\",\n    code: \"icycloak\",\n    desc: \"Conjure a random Storm when matching 4 or more Gems.\"\n  },\n  {\n    name: \"Stormy Hatred\",\n    code: \"airbrand\",\n    desc: \"Deal double Skull damage vs. Yellow Enemies.\"\n  },\n  {\n    name: \"Stryx Bond\",\n    code: \"stryxbond\",\n    desc: \"Allied Stryx gain 2 Life.\"\n  },\n  {\n    name: \"Stryx Commander\",\n    code: \"flying\",\n    desc: \"All Stryx allies gain 1 Attack every turn.\"\n  },\n  {\n    name: \"Stryx Shield\",\n    code: \"stryxbond\",\n    desc: \"Allied Stryx gain 2 Armor.\"\n  },\n  {\n    name: \"Stryx Slayer\",\n    code: \"stryxslayer\",\n    desc: \"Deal double Skull damage vs. Stryx.\"\n  },\n  { name: \"Sturdy\", code: \"sturdy\", description: \"Immune to Poison.\" },\n  {\n    name: \"Succumb\",\n    code: \"aspectofdeath\",\n    desc: \"Enemies lose 4 from a random Skill Point when an Ally casts a spell.\"\n  },\n  {\n    name: \"Sudden Doom\",\n    code: \"elementalslayer\",\n    desc: \"Create a Doomstorm at the start of battle.\"\n  },\n  {\n    name: \"Summer Veil\",\n    code: \"fierycloak\",\n    desc: \"Faerie Fire a random enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Sun Fire\",\n    code: \"sunshine\",\n    desc: \"Faerie Fire a random enemy when matching Red Gems.\"\n  },\n  {\n    name: \"Sun Flare\",\n    code: \"fierycloak\",\n    desc: \"50% chance to Burn a random enemy at start of my turn.\"\n  },\n  {\n    name: \"Sun's Glory\",\n    code: \"sunshine\",\n    desc: \"Gain 2 Magic on Red Gem matches.\"\n  },\n  {\n    name: \"Sunshine\",\n    code: \"sunshine\",\n    desc: \"Gain 8 Magic on Yellow gem matches.\"\n  },\n  {\n    name: \"Suppression\",\n    code: \"suppression\",\n    desc: \"Enemies lose 1 Skill point on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Swift Curse\",\n    code: \"cursed\",\n    desc: \"Death Mark a random enemy at the start of battle.\"\n  },\n  { name: \"Swift\", code: \"fast\", description: \"Start battles with 75% Mana.\" },\n  {\n    name: \"Tactician\",\n    code: \"magicspirit\",\n    desc: \"Gain 3 Magic at the start of a battle.\"\n  },\n  {\n    name: \"Tangle\",\n    code: \"naturebrand\",\n    desc: \"Inflict Entangle when doing Skull damage.\"\n  },\n  {\n    name: \"Tauros Bond\",\n    code: \"taurosbond\",\n    desc: \"Allied Tauros gain 2 Life.\"\n  },\n  {\n    name: \"Tauros Shield\",\n    code: \"taurosbond\",\n    desc: \"Allied Tauros gain 2 Armor.\"\n  },\n  {\n    name: \"Tauros Slayer\",\n    code: \"taurosslayer\",\n    desc: \"Deal double Skull damage vs. Tauros.\"\n  },\n  {\n    name: \"Technomancy\",\n    code: \"technomancy\",\n    desc: \"Decrease a random Enemy's Magic by 2 on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Temptation\",\n    code: \"doom\",\n    desc: \"Charm a random enemy when an ally dies.\"\n  },\n  {\n    name: \"Tentacles\",\n    code: \"thorns\",\n    desc: \"Deal 3 damage to all enemies on 4 or 5 matches.\"\n  },\n  { name: \"Thick Head\", code: \"thickhead\", description: \"Immunity to Stun.\" },\n  {\n    name: \"Thick Hide\",\n    code: \"beastbond\",\n    desc: \"Reduce damage from Skulls by 20%.\"\n  },\n  {\n    name: \"Thieves’ Guild\",\n    code: \"mechbond\",\n    desc: \"All Rogues gain 1 Magic on 4 or 5 of a kind.\"\n  },\n  {\n    name: \"Thorns\",\n    code: \"thorns\",\n    desc: \"Reflect 50% of Skull damage\"\n  },\n  {\n    name: \"Thunder Fist\",\n    code: \"knockout\",\n    desc: \"All Yellow Allies gain 1 Magic.\"\n  },\n  {\n    name: \"Tidal King\",\n    code: \"waterspirit\",\n    desc: \"Submerge myself at the start of every turn.\"\n  },\n  {\n    name: \"Titanic Surge\",\n    code: \"big\",\n    desc: \"All Giant Allies gain 1 Life and Magic.\"\n  },\n  {\n    name: \"Tough Scales\",\n    code: \"dragonbond\",\n    desc: \"Reduce damage from Skulls by 30%.\"\n  },\n  {\n    name: \"Toxic Hatred\",\n    code: \"immune\",\n    desc: \"Deal double Skull damage vs. Green Enemies.\"\n  },\n  {\n    name: \"Toxic\",\n    code: \"venomous\",\n    desc: \"Deal double Skull damage vs. Poisoned Enemies.\"\n  },\n  {\n    name: \"Transcend\",\n    code: \"inscribed\",\n    desc: \"Exchange 2 Life for 2 Magic on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Tree of Knowledge\",\n    code: \"natureheart\",\n    desc: \"Gain Enchant when matching Green Gems.\"\n  },\n  {\n    name: \"Troll Regeneration\",\n    code: \"regeneration\",\n    desc: \"Recover 3 Life at the start of each turn.\"\n  },\n  {\n    name: \"True Shot\",\n    code: \"trueshot\",\n    desc: \"75% chance to ignore Armor with Skull damage.\"\n  },\n  {\n    name: \"Tsunami\",\n    code: \"waterspirit\",\n    desc: \"Submerge all Allies when matching 4 or more Gems.\"\n  },\n  {\n    name: \"Unbreakable\",\n    code: \"immense\",\n    desc: \"Reduce damage from Skulls by 80%.\"\n  },\n  {\n    name: \"Undead Bond\",\n    code: \"undeadbond\",\n    desc: \"Allied Undead gain 2 Life.\"\n  },\n  {\n    name: \"Undead Shield\",\n    code: \"undeadbond\",\n    desc: \"Allied Undead gain 2 Armor.\"\n  },\n  {\n    name: \"Undead Slayer\",\n    code: \"undeadslayer\",\n    desc: \"Deal double Skull damage vs. Undeads. \"\n  },\n  {\n    name: \"Undying\",\n    code: \"undeadslayer\",\n    desc: \"Immune to Poison, Disease, and Death Mark.\"\n  },\n  {\n    name: \"Unholy Blessing\",\n    code: \"undeadbond\",\n    desc: \"All Undead gain 2 Armor and Magic when an ally dies.\"\n  },\n  {\n    name: \"Unstable Possession\",\n    code: \"ensoul\",\n    desc: \"Explode 2 random Gems on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Up in Flames\",\n    code: \"firebrand\",\n    desc: \"Burn a random enemy when an ally dies.\"\n  },\n  {\n    name: \"Urska Bond\",\n    code: \"beastbond\",\n    desc: \"Allied Urska gain 2 Life.\"\n  },\n  {\n    name: \"Urska Major\",\n    code: \"beastslayer\",\n    desc: \"All Urska Allies gain 1 Attack every turn.\"\n  },\n  {\n    name: \"Urska Shield\",\n    code: \"beastslayer\",\n    desc: \"Allied Urska gain 2 Armor.\"\n  },\n  {\n    name: \"Urska Slayer\",\n    code: \"beastslayer\",\n    desc: \"Deal double Skull damage vs. Urska.\"\n  },\n  {\n    name: \"Valuable\",\n    code: \"stoneheart\",\n    desc: \"Gain 25 Gold when I die.\"\n  },\n  {\n    name: \"Vanguard\",\n    code: \"insulated\",\n    desc: \"Gain Barrier at the start of battle.\"\n  },\n  {\n    name: \"Vengeance\",\n    code: \"daemonslayer\",\n    desc: \"Gain 3 Attack when an enemy dies.\"\n  },\n  {\n    name: \"Venomous\",\n    code: \"venomous\",\n    desc: \"Poison enemies when doing Skull damage.\"\n  },\n  {\n    name: \"Victory Lap\",\n    code: \"gardswrath\",\n    desc: \"Gain 8 Mana when an Enemy dies.\"\n  },\n  {\n    name: \"Virtue of Courage\",\n    code: \"lionstrength\",\n    desc: \"All allies gain 2 Attack and Life on Skull gem matches.\"\n  },\n  {\n    name: \"Virtue of Honor\",\n    code: \"divineshield\",\n    desc: \"Gain 10 to all Skills when playing a PVP battle.\"\n  },\n  {\n    name: \"Virtue of Humility\",\n    code: \"compassion\",\n    desc: \"All allies gain 2 Armor and Magic when I take damage to Life.\"\n  },\n  {\n    name: \"Virtue of Justice\",\n    code: \"hacknslash\",\n    desc: \"All allies gain 3 Attack and Armor  when an enemy dies.\"\n  },\n  {\n    name: \"Virtue of Loyalty\",\n    code: \"fullplate\",\n    desc: \"All allies gain 3 Armor and Life when an ally casts a spell.\"\n  },\n  {\n    name: \"Virtue of Sacrifice\",\n    code: \"ensoul\",\n    desc: \"All allies gain 2 Attack and Magic when an ally dies.\"\n  },\n  {\n    name: \"Virulence\",\n    code: \"virulence\",\n    desc: \"Deal double Skull damage vs. Diseased enemies.\"\n  },\n  {\n    name: \"Voracious\",\n    code: \"hunger\",\n    desc: \"5% chance to Devour on Skull damage.\"\n  },\n  {\n    name: \"Wall of Vines\",\n    code: \"naturebrand\",\n    desc: \"All Green allies gain 5 Armor.\"\n  },\n  { name: \"Ward\", code: \"ward\", description: \"All allies gain 5 Armor.\" },\n  { name: \"Warded\", code: \"warded\", description: \"Immunity to Death Mark.\" },\n  {\n    name: \"Wargare Bond\",\n    code: \"wargarebond\",\n    desc: \"Allied Wargare gain 2 Life.\"\n  },\n  {\n    name: \"Wargare Shield\",\n    code: \"wargarebond\",\n    desc: \"Allied Wargare gain 2 Armor.\"\n  },\n  {\n    name: \"Wargare Slayer\",\n    code: \"wargareslayer\",\n    desc: \"Deal double Skull damage vs. Wargare.\"\n  },\n  {\n    name: \"Water Brand\",\n    code: \"waterbrand\",\n    desc: \"Gain 1 Attack for each Blue ally.\"\n  },\n  {\n    name: \"Water Heart\",\n    code: \"waterheart\",\n    desc: \"Gain 1 Life for each Blue ally.\"\n  },\n  {\n    name: \"Water Link\",\n    code: \"waterlink\",\n    desc: \"Gain bonus Blue Mana from Blue Gem matches.\"\n  },\n  {\n    name: \"Water Mastery\",\n    code: \"waterspirit\",\n    desc: \"Gain bonus Blue Mana from Blue Gem matches.\"\n  },\n  {\n    name: \"Water Spirit\",\n    code: \"waterspirit\",\n    desc: \"Gain 1 Magic for each Blue ally.\"\n  },\n  {\n    name: \"Watery Binding\",\n    code: \"waterbrand\",\n    desc: \"All Blue Allies gain 4 Life.\"\n  },\n  {\n    name: \"Webweaver\",\n    code: \"cocoon\",\n    desc: \"Web a random enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Well-Read\",\n    code: \"empowered\",\n    desc: \"Gain 3 Magic if using a Tome.\"\n  },\n  {\n    name: \"Wild Frenzy\",\n    code: \"wildfolkbond\",\n    desc: \"All Wildfolk allies gain 2 Attack at the start of every turn.\"\n  },\n  {\n    name: \"Wild Growth\",\n    code: \"beastbond\",\n    desc: \"All Beast allies gain 2 Attack and Life on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Wild Mana\",\n    code: \"dragonvines\",\n    desc: \"All Wildfolk start battle with 50% Mana.\"\n  },\n  {\n    name: \"Wild Vines\",\n    code: \"thorns\",\n    desc: \"Entangle a random enemy when matching Green.\"\n  },\n  {\n    name: \"Wildfolk Bond\",\n    code: \"wildfolkbond\",\n    desc: \"Allied Wildfolk gain 2 Life.\"\n  },\n  {\n    name: \"Wildfolk Shield\",\n    code: \"wildfolkbond\",\n    desc: \"Allied Wildfolk gain 2 Armor.\"\n  },\n  {\n    name: \"Wildfolk Slayer\",\n    code: \"wildfolkslayer\",\n    desc: \"Deal double Skull damage vs. Wildfolk.\"\n  },\n  {\n    name: \"Wind Aura\",\n    code: \"winterveil\",\n    desc: \"All Yellow Allies gain 5 to all Stats.\"\n  },\n  { name: \"Wind Shield\", code: \"manashield\", description: \"Gain 8 Armor.\" },\n  {\n    name: \"Wind Speed\",\n    code: \"airheart\",\n    desc: \"All Yellow Allies start battle with 10% Mana.\"\n  },\n  {\n    name: \"Winter Veil\",\n    code: \"winterveil\",\n    desc: \"Freeze a random enemy on 4 or 5 Gem matches.\"\n  },\n  {\n    name: \"Wood Ancestry\",\n    code: \"natureheart\",\n    desc: \"Immune to Mana Drain, Silence, Faerie Fire, and Entangle.\"\n  },\n  {\n    name: \"Wrath of Anu\",\n    code: \"fierycloak\",\n    desc: \"50% chance to Stun a random enemy at the start of my turn.\"\n  },\n  {\n    name: \"Zorn's Fury\",\n    code: \"doom\",\n    desc: \"Gain 4 Mana when I take damage.\"\n  }\n];\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { memo, useCallback } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, MenuItem, Paper } from \"@material-ui/core\";\n\nimport Autosuggest from \"react-autosuggest\";\nimport deburr from \"lodash/deburr\";\nimport match from \"autosuggest-highlight/match\";\nimport parse from \"autosuggest-highlight/parse\";\n\nimport { Image } from \"../../Util\";\nimport { traits } from \"../../Values\";\n\nconst getSuggestions = value => {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : traits.filter(suggestion => {\n        const keep =\n          count < 5 &&\n          suggestion.name.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n};\n\nconst getSuggestionValue = suggestion => {\n  return suggestion.name;\n};\n\nconst renderInputComponent = inputProps => {\n  const { classes, inputRef = () => {}, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      fullWidth\n      variant=\"filled\"\n      InputProps={{\n        inputRef: node => {\n          ref(node);\n          inputRef(node);\n        },\n        classes: {\n          input: classes.input\n        }\n      }}\n      {...other}\n    />\n  );\n};\n\nconst renderSuggestion = (suggestion, { query, isHighlighted }) => {\n  const matches = match(suggestion.name, query);\n  const parts = parse(suggestion.name, matches);\n\n  return (\n    <MenuItem selected={isHighlighted} component=\"div\">\n      <div>\n        <Image\n          source={`./graphics/traiticons/${suggestion.code}.png`}\n          style={{\n            width: \"auto\",\n            height: \"24px\",\n            marginRight: \"4px\"\n          }}\n        />\n        {parts.map(part => (\n          <span\n            key={part.text}\n            style={{ fontWeight: part.highlight ? 500 : 400 }}\n          >\n            {part.text}\n          </span>\n        ))}\n      </div>\n    </MenuItem>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 250,\n    flexGrow: 1\n  },\n  container: {\n    position: \"relative\"\n  },\n  suggestionsContainerOpen: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0\n  },\n  suggestion: {\n    display: \"block\"\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: \"none\"\n  },\n  divider: {\n    height: theme.spacing(2)\n  }\n}));\n\nconst FormTraitAutosuggest = memo(({ index, handleTroopChange }) => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState(\"\");\n\n  const [stateSuggestions, setSuggestions] = React.useState([]);\n\n  const handleChange = useCallback(\n    (event, { newValue }) => {\n      setState(newValue);\n    },\n    [setState]\n  );\n\n  const handleSuggestionSelected = useCallback(\n    (event, { suggestion }) => {\n      // Upon selecting a trait, clear out the autocomplete field and fill in the trait fields.\n      setState(\"\");\n      handleTroopChange(`trait${index}code`, suggestion.code);\n      handleTroopChange(`trait${index}name`, suggestion.name);\n      handleTroopChange(`trait${index}desc`, suggestion.desc);\n    },\n    [handleTroopChange, index]\n  );\n\n  const handleSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const handleSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  return (\n    <Autosuggest\n      renderInputComponent={renderInputComponent}\n      suggestions={stateSuggestions}\n      onSuggestionsFetchRequested={handleSuggestionsFetchRequested}\n      onSuggestionsClearRequested={handleSuggestionsClearRequested}\n      onSuggestionSelected={handleSuggestionSelected}\n      getSuggestionValue={getSuggestionValue}\n      renderSuggestion={renderSuggestion}\n      inputProps={{\n        classes,\n        id: `react-autosuggest-trait${index}`,\n        label: \"Autofill Trait\",\n        placeholder: \"Start typing...\",\n        value: state,\n        onChange: handleChange\n      }}\n      theme={{\n        container: classes.container,\n        suggestionsContainerOpen: classes.suggestionsContainerOpen,\n        suggestionsList: classes.suggestionsList,\n        suggestion: classes.suggestion\n      }}\n      renderSuggestionsContainer={options => (\n        <Paper {...options.containerProps} square>\n          {options.children}\n        </Paper>\n      )}\n    />\n  );\n});\n\nexport default FormTraitAutosuggest;\n","import React, { memo } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport FormTraitAutosuggest from \"./FormTraitAutosuggest\";\n\nimport { Image, FormText, validateFieldLength, GridCard } from \"../../Util\";\n\nconst useStyles = makeStyles(theme => {\n  return {\n    traitName: {\n      [theme.breakpoints.up(\"xs\")]: {\n        width: \"100%\"\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        width: `calc(100% - 80px)`,\n        padding: `${theme.spacing(0.5)}px`\n      }\n    },\n    traitDesc: {\n      width: \"100%\"\n    },\n    traitIcon: {\n      width: \"48px\",\n      height: \"48px\",\n      marginRight: theme.spacing(0.5)\n    },\n    formElement: {\n      margin: `${theme.spacing(1.5)}px 0`\n    },\n    iconSelector: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    overflow: {\n      overflow: \"visible\"\n    }\n  };\n});\n\nconst FormTrait = memo(({ index, troop, handleTroopChange }) => {\n  const classes = useStyles();\n\n  return (\n    <GridCard\n      gridClassName={classes.formElement}\n      cardClassName={classes.overflow}\n      xs={12}\n      sm={12}\n      md={6}\n      lg={4}\n      xl={4}\n    >\n      <Typography variant=\"h4\">{`Trait ${index}`}</Typography>\n      <div className={classes.iconSelector}>\n        <Image\n          className={classes.traitIcon}\n          source={\n            troop[`trait${index}code`] !== null\n              ? `./graphics/traiticons/${troop[`trait${index}code`]}.png`\n              : null\n          }\n        />\n        <FormText\n          id={`form-trait${index}name`}\n          fieldName={`trait${index}name`}\n          value={troop[`trait${index}name`]}\n          onChange={handleTroopChange}\n          label=\"Trait Name\"\n          className={classes.traitname}\n          onInput={validateFieldLength(20)}\n        />\n      </div>\n      <FormText\n        id={`form-trait${index}desc`}\n        fieldName={`trait${index}desc`}\n        value={troop[`trait${index}desc`]}\n        onChange={handleTroopChange}\n        label=\"Trait Description\"\n        multiline\n        className={classes.traitDesc}\n      />\n      <FormTraitAutosuggest\n        index={index}\n        handleTroopChange={handleTroopChange}\n      />\n    </GridCard>\n  );\n});\n\nexport default FormTrait;\n","import React, { memo } from \"react\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport FormTrait from \"./FormTrait\";\r\n\r\nconst FormTraits = memo(({ troop, handleTroopChange, className }) => {\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      md={8}\r\n      container\r\n      item\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <FormTrait\r\n        index={1}\r\n        troop={troop}\r\n        handleTroopChange={handleTroopChange}\r\n      />\r\n      <FormTrait\r\n        index={2}\r\n        troop={troop}\r\n        handleTroopChange={handleTroopChange}\r\n      />\r\n      <FormTrait\r\n        index={3}\r\n        troop={troop}\r\n        handleTroopChange={handleTroopChange}\r\n      />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default FormTraits;\r\n","import React, { memo } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  MenuItem,\r\n  InputAdornment,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { colors, roles, rarities } from \"../../Values\";\r\nimport { FormUploaderTroop } from \"./FormUploader\";\r\n\r\nimport {\r\n  Image,\r\n  FormText,\r\n  FormSelect,\r\n  validateFieldLength,\r\n  GridCard\r\n} from \"../../Util\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    menuColor: {\r\n      width: 400\r\n    },\r\n    skill: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1200)]: {\r\n        width: \"33%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    manaCost: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"25%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    manaColors: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"75%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    typeField: {\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"100%\"\r\n      },\r\n      [theme.breakpoints.up(1400)]: {\r\n        width: \"50%\",\r\n        padding: \"4px\"\r\n      }\r\n    },\r\n    fieldIcon: {\r\n      width: \"auto\",\r\n      height: theme.spacing(3),\r\n      marginRight: theme.spacing(0.5)\r\n    },\r\n    formElement: {\r\n      margin: `${theme.spacing(1.5)}px 0`\r\n    },\r\n    iconSelector: {\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    fullField: {\r\n      width: \"100%\"\r\n    }\r\n  };\r\n});\r\n\r\nconst FormTroop = memo(({ troop, handleTroopChange, className }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const mediaQueryLg = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  return (\r\n    <Grid\r\n      xs={12}\r\n      md={8}\r\n      spacing={mediaQueryLg ? 3 : 0}\r\n      container\r\n      item\r\n      direction=\"row\"\r\n      className={className}\r\n    >\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Name</Typography>\r\n        <FormText\r\n          id=\"form-name\"\r\n          fieldName=\"name\"\r\n          value={troop.name}\r\n          onChange={handleTroopChange}\r\n          label=\"Name\"\r\n          className={classes.fullField}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Kingdom</Typography>\r\n        <FormText\r\n          id=\"form-kingdom\"\r\n          fieldName=\"kingdom\"\r\n          value={troop.kingdom}\r\n          onChange={handleTroopChange}\r\n          label=\"Kingdom\"\r\n          className={classes.fullField}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Rarity</Typography>\r\n        <FormSelect\r\n          id=\"form-rarity\"\r\n          fieldName=\"rarity\"\r\n          value={troop.rarity}\r\n          onChange={handleTroopChange}\r\n          label=\"Rarity\"\r\n          className={classes.fullField}\r\n        >\r\n          {Object.keys(rarities).map(option => (\r\n            <MenuItem key={option} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </FormSelect>\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={3}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Level</Typography>\r\n        <FormText\r\n          id=\"form-level\"\r\n          fieldName=\"level\"\r\n          value={troop.level}\r\n          onChange={handleTroopChange}\r\n          label=\"Level\"\r\n          type=\"number\"\r\n          className={classes.fullField}\r\n          onInput={validateFieldLength(5)}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={3}\r\n        xl={3}\r\n      >\r\n        <Typography variant=\"h4\">Role</Typography>\r\n        <FormSelect\r\n          id=\"form-role\"\r\n          fieldName=\"role\"\r\n          value={troop.role}\r\n          onChange={handleTroopChange}\r\n          label=\"Role\"\r\n          className={classes.fullField}\r\n          inputProps={{ className: classes.iconSelector }}\r\n        >\r\n          {roles.map(option => (\r\n            <MenuItem key={option} value={option}>\r\n              <Image\r\n                source={`./graphics/roles/${option}.png`}\r\n                className={classes.fieldIcon}\r\n              />\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </FormSelect>\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={6}\r\n        xl={5}\r\n      >\r\n        <Typography variant=\"h4\">Mana Cost</Typography>\r\n        <FormText\r\n          id=\"form-cost\"\r\n          fieldName=\"cost\"\r\n          value={troop.cost}\r\n          onChange={handleTroopChange}\r\n          label=\"Cost\"\r\n          type=\"number\"\r\n          className={classes.manaCost}\r\n          onInput={validateFieldLength(3)}\r\n        />\r\n        <FormSelect\r\n          id=\"form-colors\"\r\n          fieldName=\"colors\"\r\n          value={troop.colors}\r\n          onChange={handleTroopChange}\r\n          label=\"Colors\"\r\n          className={classes.manaColors}\r\n          SelectProps={{\r\n            MenuProps: {\r\n              className: classes.menuColor\r\n            }\r\n          }}\r\n          inputProps={{ className: classes.iconSelector }}\r\n        >\r\n          {colors.map(option => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              <Image\r\n                source={`./graphics/colors/${option.value}.png`}\r\n                className={classes.fieldIcon}\r\n              />\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </FormSelect>\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={4}\r\n        xl={4}\r\n      >\r\n        <Typography variant=\"h4\">Types</Typography>\r\n        <FormText\r\n          id=\"form-type1\"\r\n          fieldName=\"type1\"\r\n          value={troop.type1}\r\n          onChange={handleTroopChange}\r\n          label=\"Type 1\"\r\n          className={classes.typeField}\r\n          onInput={validateFieldLength(10)}\r\n        />\r\n        <FormText\r\n          id=\"form-type2\"\r\n          fieldName=\"type2\"\r\n          value={troop.type2}\r\n          onChange={handleTroopChange}\r\n          label=\"Type 2\"\r\n          className={classes.typeField}\r\n          onInput={validateFieldLength(10)}\r\n        />\r\n      </GridCard>\r\n      <GridCard\r\n        gridClassName={classes.formElement}\r\n        cardClassName={classes.card}\r\n        xs={12}\r\n        sm={12}\r\n        md={6}\r\n        lg={6}\r\n        xl={5}\r\n      >\r\n        <Typography variant=\"h4\">Skills</Typography>\r\n        <FormText\r\n          id=\"form-attack\"\r\n          fieldName=\"attack\"\r\n          value={troop.attack}\r\n          onChange={handleTroopChange}\r\n          label=\"Attack\"\r\n          type=\"number\"\r\n          className={classes.skill}\r\n          onInput={validateFieldLength(3)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Image\r\n                  source=\"./graphics/troop/attack.png\"\r\n                  className={classes.fieldIcon}\r\n                />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <FormText\r\n          id=\"form-armor\"\r\n          fieldName=\"armor\"\r\n          value={troop.armor}\r\n          onChange={handleTroopChange}\r\n          label=\"Armor\"\r\n          type=\"number\"\r\n          className={classes.skill}\r\n          onInput={validateFieldLength(3)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Image\r\n                  source=\"./graphics/troop/armor.png\"\r\n                  className={classes.fieldIcon}\r\n                />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n        <FormText\r\n          id=\"form-life\"\r\n          fieldName=\"life\"\r\n          value={troop.life}\r\n          onChange={handleTroopChange}\r\n          label=\"Life\"\r\n          type=\"number\"\r\n          className={classes.skill}\r\n          onInput={validateFieldLength(3)}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Image\r\n                  source=\"./graphics/troop/life.png\"\r\n                  className={classes.fieldIcon}\r\n                />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n      </GridCard>\r\n      <FormUploaderTroop\r\n        handleTroopChange={handleTroopChange}\r\n        dimensions=\"460x640\"\r\n      />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default FormTroop;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Layer, Group } from \"react-konva\";\r\nimport Konva from \"konva\";\r\nimport {\r\n  CardBase,\r\n  CardImage,\r\n  CardText,\r\n  CardTextRef,\r\n  CardMultiStyleText,\r\n  CardImageRotating\r\n} from \"./CardBase\";\r\n\r\nconst getImageURL = troop =>\r\n  troop.spellimage !== null\r\n    ? URL.createObjectURL(troop.spellimage)\r\n    : \"./graphics/troop/eruption.png\";\r\n\r\n// Create a text element that scales to always be one line.\r\nconst CardSpellNameText = ({\r\n  text,\r\n  width,\r\n  x,\r\n  y,\r\n  horizontalAlign = \"center\",\r\n  fontWeight,\r\n  baseFontSize,\r\n  fontsLoaded\r\n}) => {\r\n  const textRef = useRef(null);\r\n\r\n  // Create a basic state that resets when the troop changes.\r\n  const [state, setState] = useState({ stable: false, fontSize: baseFontSize });\r\n  useEffect(() => {\r\n    setState({ stable: false, fontSize: baseFontSize });\r\n  }, [text, baseFontSize]);\r\n\r\n  // Modify the font size until it's right.\r\n  useEffect(() => {\r\n    if (!state.stable && textRef.current !== null) {\r\n      if (textRef.current.textArr.length > 1) {\r\n        setState(oldState => ({\r\n          ...oldState,\r\n          fontSize: oldState.fontSize - 2\r\n        }));\r\n      } else {\r\n        // Finalize the state.\r\n        setState(oldState => ({ ...oldState, stable: true }));\r\n      }\r\n    }\r\n  }, [state]);\r\n\r\n  // Display either the proper text or a loading icon.\r\n  const result = state.stable ? (\r\n    <CardTextRef\r\n      ref={textRef}\r\n      x={x}\r\n      y={y}\r\n      height={baseFontSize}\r\n      width={width}\r\n      horizontalAlign={horizontalAlign}\r\n      verticalAlign=\"middle\"\r\n      text={text}\r\n      fontWeight={fontWeight}\r\n      fontSize={state.fontSize}\r\n      fontsLoaded={fontsLoaded}\r\n    />\r\n  ) : (\r\n    <Group>\r\n      <CardTextRef\r\n        ref={textRef}\r\n        x={x}\r\n        y={0}\r\n        height={1000}\r\n        width={width}\r\n        horizontalAlign={horizontalAlign}\r\n        verticalAlign=\"middle\"\r\n        text={text}\r\n        opacity={0}\r\n        fontWeight={fontWeight}\r\n        fontSize={state.fontSize}\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n      <CardImage\r\n        src=\"./graphics/troop/loading.png\"\r\n        x={195}\r\n        y={323}\r\n        width={100}\r\n        height={100}\r\n      />\r\n    </Group>\r\n  );\r\n\r\n  return result;\r\n};\r\n\r\n// BEWARE, ALL YE WHO ENTER HERE\r\n// This creates multiple text elements in order to create multi-styled text.\r\nconst CardSpellDescText = ({\r\n  troop,\r\n  yCenter,\r\n  cardWidth,\r\n  innerWidth,\r\n  height,\r\n  baseFontSize,\r\n  fontFamily = \"Open Sans\",\r\n  fontWeight = 600,\r\n  color = \"#000\",\r\n  magicFontWeight,\r\n  magicColor,\r\n  fontsLoaded\r\n}) => {\r\n  // A reference to the hidden text display used for math.\r\n  const baseDisplayRef = useRef(null);\r\n\r\n  // Create a basic state that resets when the troop changes.\r\n  const [state, setState] = useState({ stable: false, fontSize: baseFontSize });\r\n  useEffect(() => {\r\n    setState({ stable: false, fontSize: baseFontSize });\r\n  }, [troop, baseFontSize]);\r\n\r\n  // Modify the font size until it's right.\r\n  useEffect(() => {\r\n    if (!state.stable && baseDisplayRef.current !== null) {\r\n      if (baseDisplayRef.current.textArr.length * state.fontSize > height) {\r\n        setState(oldState => ({\r\n          ...oldState,\r\n          fontSize: oldState.fontSize - 3\r\n        }));\r\n      } else {\r\n        // Finalize the state.\r\n        setState(oldState => ({ ...oldState, stable: true }));\r\n      }\r\n    }\r\n  }, [state, height]);\r\n\r\n  // Outputs either a magic value or a range, as appropriate.\r\n  const calculateMagicText = () => {\r\n    const magicDamage =\r\n      parseInt(troop.spellbase, 10) +\r\n      parseInt(troop.spellmult, 10) * parseInt(troop.magic, 10);\r\n    return troop.spellrange\r\n      ? `${Math.floor(magicDamage / 2)} - ${magicDamage}`\r\n      : magicDamage.toString();\r\n  };\r\n\r\n  // This simple substitution is only used for the baseDisplay.\r\n  const simpleDescSub = () =>\r\n    troop.spelldesc.replace(/{magic}/gi, calculateMagicText());\r\n\r\n  const calculateMagicPhrases = phrase =>\r\n    calculateMagicText()\r\n      .split(/(\\s+)/)\r\n      .map(word => {\r\n        return word === \"-\"\r\n          ? { ...phrase, text: word }\r\n          : {\r\n              ...phrase,\r\n              color: magicColor,\r\n              weight: magicFontWeight,\r\n              text: word\r\n            };\r\n      });\r\n\r\n  // Turn the current text into a MultiStyleText descriptor.\r\n  const splitSpellDesc = () => {\r\n    const result = [];\r\n    // Split the spell description.\r\n    troop.spelldesc.split(/(\\s+)/).forEach(word => {\r\n      const phrase = {\r\n        text: word,\r\n        weight: fontWeight,\r\n        size: state.fontSize,\r\n        family: fontFamily,\r\n        color\r\n      };\r\n      if (/\\{magic\\}/gi.test(word)) {\r\n        // Resolve the magic phrase into either a number or range.\r\n        result.push(...calculateMagicPhrases(phrase));\r\n      } else {\r\n        // Else, don't use magic.\r\n        result.push(phrase);\r\n      }\r\n    });\r\n\r\n    // Find the length of each line by checking the invisible baseDisplay.\r\n    const lineLengths = baseDisplayRef.current.textArr.map(value => {\r\n      return value.text.split(/(\\s+)/).length;\r\n    });\r\n\r\n    // Get the indexes of each line.\r\n    const lineIndexes = [0];\r\n    lineLengths.forEach(lineLength =>\r\n      lineIndexes.push(lineLength + lineIndexes[lineIndexes.length - 1] + 1)\r\n    );\r\n    lineIndexes.pop();\r\n\r\n    // Split the phrase array by index + length.\r\n    const lines = lineIndexes.map((lineIndex, position) => {\r\n      return result.slice(lineIndex, lineIndex + lineLengths[position]);\r\n    });\r\n\r\n    return lines;\r\n  };\r\n\r\n  // The invisible text is used to calculate line heights.\r\n  const baseDisplay = (\r\n    <CardTextRef\r\n      ref={baseDisplayRef}\r\n      x={(cardWidth - innerWidth) / 2}\r\n      y={0}\r\n      width={innerWidth}\r\n      color={color}\r\n      height={1000}\r\n      opacity={0}\r\n      fontsLoaded={fontsLoaded}\r\n      fontSize={state.fontSize}\r\n      fontWeight={fontWeight}\r\n      text={simpleDescSub()}\r\n      horizontalAlign=\"center\"\r\n      verticalAlign=\"middle\"\r\n    />\r\n  );\r\n\r\n  // If stable, display multi-styled text.\r\n  // Else, display a loading image.\r\n  return state.stable ? (\r\n    <Group>\r\n      {baseDisplay}\r\n      <CardMultiStyleText\r\n        fontsLoaded={fontsLoaded}\r\n        textArray={splitSpellDesc()}\r\n        yCenter={yCenter}\r\n        xCenter={cardWidth / 2}\r\n      />\r\n    </Group>\r\n  ) : (\r\n    <Group>\r\n      {baseDisplay}\r\n      <CardImage\r\n        src=\"./graphics/troop/loading.png\"\r\n        x={195}\r\n        y={323}\r\n        width={100}\r\n        height={100}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nconst CardSpell = ({ troop, displayLayer, fontsLoaded }) => {\r\n  const loadingLayer = useRef(null);\r\n\r\n  // Hide while loading.\r\n  useEffect(() => {\r\n    displayLayer.current.loaded = false;\r\n    loadingLayer.current.show();\r\n    displayLayer.current.hide();\r\n    loadingLayer.current.draw();\r\n  }, []);\r\n\r\n  // Show once loaded.\r\n  useEffect(() => {\r\n    if (fontsLoaded && displayLayer.current.loaded) {\r\n      loadingLayer.current.hide();\r\n      displayLayer.current.show();\r\n      displayLayer.current.draw();\r\n    }\r\n  }, [fontsLoaded, (displayLayer.current || { loaded: false }).loaded]);\r\n\r\n  // Loading animation.\r\n  useEffect(() => {\r\n    const anim = new Konva.Animation(frame => {\r\n      const angleDiff = (frame.timeDiff * 120) / 1000;\r\n      loadingLayer.current.rotate(angleDiff);\r\n    }, loadingLayer.current);\r\n    anim.start();\r\n  }, [loadingLayer]);\r\n\r\n  return (\r\n    <CardBase width={460} height={723}>\r\n      <Layer ref={loadingLayer}>\r\n        <CardImageRotating\r\n          src=\"./graphics/troop/loading.png\"\r\n          x={195}\r\n          y={323}\r\n          width={100}\r\n          height={100}\r\n          angularRate={90}\r\n        />\r\n      </Layer>\r\n      <Layer ref={displayLayer}>\r\n        <CardImage\r\n          src={getImageURL(troop)}\r\n          x={0}\r\n          y={87}\r\n          width={460}\r\n          height={340}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./graphics/spellcard/${troop.rarity}.png`\r\n              : null\r\n          }\r\n          width={460}\r\n          height={723}\r\n          onLoad={() => {\r\n            displayLayer.current.loaded = true;\r\n          }}\r\n        />\r\n        <CardSpellNameText\r\n          x={70}\r\n          y={30}\r\n          width={320}\r\n          horizontalAlign=\"center\"\r\n          text={troop.spellname}\r\n          fontWeight={600}\r\n          baseFontSize={50}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardText\r\n          x={235}\r\n          y={457}\r\n          width={80}\r\n          horizontalAlign=\"left\"\r\n          text={troop.magic}\r\n          fontWeight={600}\r\n          fontSize={40}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardSpellDescText\r\n          troop={troop}\r\n          yCenter={600}\r\n          innerWidth={425}\r\n          cardWidth={460}\r\n          height={160}\r\n          fontWeight={600}\r\n          baseFontSize={38}\r\n          color=\"#000\"\r\n          magicColor=\"#680b7c\"\r\n          magicFontWeight=\"800\"\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n      </Layer>\r\n    </CardBase>\r\n  );\r\n};\r\n\r\nexport default CardSpell;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PreviewButtonBar from \"./PreviewButtonBar\";\r\n\r\nimport { GridCard } from \"../../Util\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      padding: 0\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: theme.spacing(1.5)\r\n    }\r\n  }\r\n}));\r\n\r\nconst PreviewBase = ({ troopName, displayLayer, children, className }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <GridCard\r\n      gridClassName={className}\r\n      cardClassName={classes.card}\r\n      xs={12}\r\n      sm={6}\r\n      md={4}\r\n      lg={4}\r\n      xl={4}\r\n    >\r\n      {children}\r\n      <PreviewButtonBar troopName={troopName} displayLayer={displayLayer} />\r\n    </GridCard>\r\n  );\r\n};\r\n\r\nexport default PreviewBase;\r\n","import React from \"react\";\r\n\r\nimport CardSpell from \"./cards/CardSpell\";\r\nimport PreviewBase from \"./PreviewBase\";\r\n\r\nconst PreviewSpell = ({ troop, displayLayer, className, fontsLoaded }) => {\r\n  return (\r\n    <PreviewBase\r\n      troopName={troop.name}\r\n      className={className}\r\n      displayLayer={displayLayer}\r\n    >\r\n      <CardSpell\r\n        troop={troop}\r\n        displayLayer={displayLayer}\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n    </PreviewBase>\r\n  );\r\n};\r\n\r\nexport default PreviewSpell;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { Layer, Group } from \"react-konva\";\r\nimport {\r\n  CardBase,\r\n  CardImage,\r\n  CardText,\r\n  CardTextRef,\r\n  CardImageRotating\r\n} from \"./CardBase\";\r\nimport { rarities } from \"../../../Values\";\r\n\r\nconst CardTraitDescText = ({\r\n  text,\r\n  yCenter,\r\n  cardWidth,\r\n  innerWidth,\r\n  height,\r\n  baseFontSize,\r\n  fontFamily = \"Open Sans\",\r\n  fontWeight = 600,\r\n  color = \"#000\",\r\n  fontsLoaded = false\r\n}) => {\r\n  // A reference to the hidden text display used for math.\r\n  const baseDisplayRef = useRef(null);\r\n\r\n  // Create a basic state that resets when the troop changes.\r\n  const [state, setState] = useState({ stable: false, fontSize: baseFontSize });\r\n  useEffect(() => {\r\n    setState({ stable: false, fontSize: baseFontSize });\r\n  }, [text, baseFontSize]);\r\n\r\n  // Modify the font size until it's right.\r\n  useEffect(() => {\r\n    if (!state.stable && baseDisplayRef.current !== null) {\r\n      if (baseDisplayRef.current.textArr.length * state.fontSize > height) {\r\n        setState(oldState => ({\r\n          ...oldState,\r\n          fontSize: oldState.fontSize - 3\r\n        }));\r\n      } else {\r\n        // Finalize the state.\r\n        setState(oldState => ({ ...oldState, stable: true }));\r\n      }\r\n    }\r\n  }, [state, height]);\r\n\r\n  // The invisible text is used to calculate line heights.\r\n  const baseDisplay = (\r\n    <CardTextRef\r\n      ref={baseDisplayRef}\r\n      x={(cardWidth - innerWidth) / 2}\r\n      y={0}\r\n      text={text}\r\n      fontFamily={fontFamily}\r\n      verticalAlign=\"middle\"\r\n      horizontalAlign=\"center\"\r\n      width={innerWidth}\r\n      color=\"#009\"\r\n      opacity={0}\r\n      height={1000}\r\n      fontSize={state.fontSize}\r\n      fontWeight={fontWeight}\r\n      fontsLoaded={fontsLoaded}\r\n    />\r\n  );\r\n\r\n  return state.stable ? (\r\n    <Group>\r\n      {baseDisplay}\r\n      <CardText\r\n        x={(cardWidth - innerWidth) / 2}\r\n        y={yCenter - height / 2}\r\n        text={text}\r\n        color={color}\r\n        fontFamily={fontFamily}\r\n        fontSize={state.fontSize}\r\n        fontWeight={fontWeight}\r\n        width={innerWidth}\r\n        height={height}\r\n        verticalAlign=\"middle\"\r\n        horizontalAlign=\"center\"\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n    </Group>\r\n  ) : (\r\n    <Group>\r\n      {baseDisplay}\r\n      <CardImage\r\n        src=\"./graphics/troop/loading.png\"\r\n        x={195}\r\n        y={323}\r\n        width={100}\r\n        height={100}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nconst CardTraits = ({ troop, displayLayer, fontsLoaded }) => {\r\n  const loadingLayer = useRef(null);\r\n\r\n  // Hide while loading.\r\n  useEffect(() => {\r\n    displayLayer.current.loaded = false;\r\n    loadingLayer.current.show();\r\n    displayLayer.current.hide();\r\n    loadingLayer.current.draw();\r\n  }, []);\r\n\r\n  // Show once loaded.\r\n  useEffect(() => {\r\n    if (fontsLoaded && displayLayer.current.loaded) {\r\n      loadingLayer.current.hide();\r\n      displayLayer.current.show();\r\n      displayLayer.current.draw();\r\n    }\r\n  }, [fontsLoaded, (displayLayer.current || { loaded: false }).loaded]);\r\n\r\n  // Loading animation.\r\n  useEffect(() => {\r\n    const anim = new Konva.Animation(frame => {\r\n      const angleDiff = (frame.timeDiff * 120) / 1000;\r\n      loadingLayer.current.rotate(angleDiff);\r\n    }, loadingLayer.current);\r\n    anim.start();\r\n  }, [loadingLayer]);\r\n\r\n  return (\r\n    <CardBase width={460} height={727}>\r\n      <Layer ref={loadingLayer}>\r\n        <CardImageRotating\r\n          src=\"./graphics/troop/loading.png\"\r\n          x={195}\r\n          y={323}\r\n          width={100}\r\n          height={100}\r\n          angularRate={90}\r\n        />\r\n      </Layer>\r\n      <Layer ref={displayLayer}>\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./graphics/traitscard/${troop.rarity}.png`\r\n              : null\r\n          }\r\n          width={460}\r\n          height={727}\r\n          onLoad={() => {\r\n            displayLayer.current.loaded = true;\r\n          }}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.trait1code !== \"\"\r\n              ? `./graphics/traiticons/${troop.trait1code}.png`\r\n              : null\r\n          }\r\n          x={400}\r\n          y={100}\r\n          color={rarities.Epic.color}\r\n          width={44}\r\n          height={44}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.trait2code !== \"\"\r\n              ? `./graphics/traiticons/${troop.trait2code}.png`\r\n              : null\r\n          }\r\n          x={400}\r\n          y={306}\r\n          color={rarities.Legendary.color}\r\n          width={44}\r\n          height={44}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.trait3code !== \"\"\r\n              ? `./graphics/traiticons/${troop.trait3code}.png`\r\n              : null\r\n          }\r\n          x={400}\r\n          y={512}\r\n          color={rarities.Mythic.color}\r\n          width={44}\r\n          height={44}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.trait1name}\r\n          x={60}\r\n          y={110}\r\n          width={475}\r\n          color={rarities.Epic.color}\r\n          horizontalAlign=\"left\"\r\n          fontSize={32}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardTraitDescText\r\n          yCenter={220}\r\n          cardWidth={460}\r\n          innerWidth={410}\r\n          height={100}\r\n          text={troop.trait1desc}\r\n          fontWeight={600}\r\n          baseFontSize={32}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.trait2name}\r\n          x={60}\r\n          y={316}\r\n          width={475}\r\n          color={rarities.Legendary.color}\r\n          horizontalAlign=\"left\"\r\n          fontSize={32}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardTraitDescText\r\n          yCenter={425}\r\n          cardWidth={460}\r\n          innerWidth={410}\r\n          height={100}\r\n          text={troop.trait2desc}\r\n          fontWeight={600}\r\n          baseFontSize={32}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.trait3name}\r\n          x={60}\r\n          y={522}\r\n          color={rarities.Mythic.color}\r\n          width={475}\r\n          horizontalAlign=\"left\"\r\n          fontSize={32}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardTraitDescText\r\n          yCenter={630}\r\n          cardWidth={460}\r\n          innerWidth={410}\r\n          height={100}\r\n          text={troop.trait3desc}\r\n          fontWeight={600}\r\n          baseFontSize={32}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n      </Layer>\r\n    </CardBase>\r\n  );\r\n};\r\n\r\nexport default CardTraits;\r\n","import React from \"react\";\r\n\r\nimport CardTraits from \"./cards/CardTraits\";\r\nimport PreviewBase from \"./PreviewBase\";\r\n\r\nconst PreviewTraits = ({ troop, displayLayer, fontsLoaded, className }) => {\r\n  return (\r\n    <PreviewBase\r\n      troopName={troop.name}\r\n      className={className}\r\n      displayLayer={displayLayer}\r\n    >\r\n      <CardTraits\r\n        troop={troop}\r\n        displayLayer={displayLayer}\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n    </PreviewBase>\r\n  );\r\n};\r\n\r\nexport default PreviewTraits;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Layer } from \"react-konva\";\r\nimport {\r\n  CardBase,\r\n  CardImage,\r\n  CardText,\r\n  CardTextRef,\r\n  CardImageRotating\r\n} from \"./CardBase\";\r\nimport { rarities } from \"../../../Values\";\r\n\r\nconst getImageURL = troop =>\r\n  troop.troopimage !== null\r\n    ? URL.createObjectURL(troop.troopimage)\r\n    : \"./graphics/troop/infernus.png\";\r\n\r\n// Render a spell as part of a full-size card (like in the troop list).\r\nconst CardTroop = ({ troop, displayLayer, fontsLoaded }) => {\r\n  const loadingLayer = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Hide while loading.\r\n    displayLayer.current.loaded = false;\r\n    loadingLayer.current.show();\r\n    displayLayer.current.hide();\r\n    loadingLayer.current.draw();\r\n  }, []);\r\n\r\n  // Show once loaded.\r\n  useEffect(() => {\r\n    if (fontsLoaded && displayLayer.current.loaded) {\r\n      loadingLayer.current.hide();\r\n      displayLayer.current.show();\r\n      displayLayer.current.draw();\r\n    }\r\n  }, [fontsLoaded, (displayLayer.current || { loaded: false }).loaded]);\r\n\r\n  // Reference to the troop type line, so width can be accessed.\r\n  const typeRef = useRef(null);\r\n  // Troop type text to display.\r\n  const typeText =\r\n    troop.type2 !== \"\" ? `${troop.type1} / ${troop.type2}` : troop.type1;\r\n\r\n  // Logic for positioning the role icons.\r\n  const [typeTextWidth, setTypeTextWidth] = useState(0);\r\n  useEffect(() => {\r\n    if (typeRef.current) setTypeTextWidth(typeRef.current.textWidth);\r\n  }, [typeRef.current, fontsLoaded]);\r\n\r\n  return (\r\n    <CardBase width={490} height={739}>\r\n      <Layer ref={loadingLayer}>\r\n        <CardImageRotating\r\n          src=\"./graphics/troop/loading.png\"\r\n          x={195}\r\n          y={323}\r\n          width={100}\r\n          height={100}\r\n          angularRate={90}\r\n        />\r\n      </Layer>\r\n      <Layer ref={displayLayer}>\r\n        <CardImage\r\n          src={getImageURL(troop)}\r\n          x={30}\r\n          y={37 + 9}\r\n          width={461}\r\n          height={643}\r\n          crop={{ x: 0, y: 9, width: 460, height: 643 }}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\"\r\n              ? `./graphics/troopcard/${troop.rarity}.png`\r\n              : null\r\n          }\r\n          width={490}\r\n          height={739}\r\n          onLoad={() => {\r\n            displayLayer.current.loaded = true;\r\n          }}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\" ? `./graphics/colors/${troop.colors}.png` : null\r\n          }\r\n          width={100}\r\n          height={100}\r\n          x={0}\r\n          y={0}\r\n        />\r\n        <CardText\r\n          text={troop.cost}\r\n          x={15}\r\n          y={25}\r\n          width={70}\r\n          fontSize={60}\r\n          fontWeight={600}\r\n          shadowColor=\"black\"\r\n          horizontalAlign=\"center\"\r\n          shadowOffset={2}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.level}\r\n          x={0}\r\n          y={96}\r\n          width={475}\r\n          horizontalAlign=\"right\"\r\n          fontSize={50}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.trait1code !== \"\"\r\n              ? `./graphics/traiticons/${troop.trait1code}.png`\r\n              : null\r\n          }\r\n          x={45}\r\n          y={243}\r\n          color={rarities.Epic.color}\r\n          width={50}\r\n          height={50}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.trait2code !== \"\"\r\n              ? `./graphics/traiticons/${troop.trait2code}.png`\r\n              : null\r\n          }\r\n          x={45}\r\n          y={308}\r\n          color={rarities.Legendary.color}\r\n          width={50}\r\n          height={50}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.trait3code !== \"\"\r\n              ? `./graphics/traiticons/${troop.trait3code}.png`\r\n              : null\r\n          }\r\n          x={45}\r\n          y={373}\r\n          color={rarities.Mythic.color}\r\n          width={50}\r\n          height={50}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.name}\r\n          x={45}\r\n          y={285}\r\n          width={380}\r\n          height={300}\r\n          fontFamily=\"Raleway\"\r\n          horizontalAlign=\"left\"\r\n          verticalAlign=\"bottom\"\r\n          fontSize={57}\r\n          fontWeight={500}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardText\r\n          text={troop.kingdom}\r\n          x={45}\r\n          y={585}\r\n          width={460}\r\n          horizontalAlign=\"left\"\r\n          color=\"#CCCCCC\"\r\n          fontSize={30}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardText\r\n          text={troop.attack}\r\n          x={110}\r\n          y={635}\r\n          width={460}\r\n          horizontalAlign=\"left\"\r\n          fontSize={45}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardText\r\n          text={troop.armor}\r\n          x={250}\r\n          y={635}\r\n          width={460}\r\n          horizontalAlign=\"left\"\r\n          fontSize={45}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardText\r\n          text={troop.life}\r\n          x={400}\r\n          y={635}\r\n          width={460}\r\n          horizontalAlign=\"left\"\r\n          fontSize={45}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\" && fontsLoaded\r\n              ? `./graphics/roles/${troop.role}.png`\r\n              : null\r\n          }\r\n          x={260 - 44 - 8 - typeTextWidth / 2}\r\n          y={692}\r\n          color=\"#000000\"\r\n          width={44}\r\n          height={44}\r\n        />\r\n        <CardTextRef\r\n          ref={typeRef}\r\n          text={typeText}\r\n          x={40}\r\n          y={700}\r\n          horizontalAlign=\"center\"\r\n          width={440}\r\n          color=\"#000000\"\r\n          fontSize={30}\r\n          fontWeight={600}\r\n          fontsLoaded={fontsLoaded}\r\n        />\r\n        <CardImage\r\n          src={\r\n            troop.rarity !== \"\" && fontsLoaded\r\n              ? `./graphics/roles/${troop.role}.png`\r\n              : null\r\n          }\r\n          x={260 + 8 + typeTextWidth / 2}\r\n          y={692}\r\n          color=\"#000000\"\r\n          width={44}\r\n          height={44}\r\n        />\r\n      </Layer>\r\n    </CardBase>\r\n  );\r\n};\r\n\r\nexport default CardTroop;\r\n","import React from \"react\";\r\n\r\nimport CardTroop from \"./cards/CardTroop\";\r\nimport PreviewBase from \"./PreviewBase\";\r\n\r\nconst PreviewTroop = ({ troop, displayLayer, className, fontsLoaded }) => {\r\n  return (\r\n    <PreviewBase\r\n      troopName={troop.name}\r\n      className={className}\r\n      displayLayer={displayLayer}\r\n    >\r\n      <CardTroop\r\n        troop={troop}\r\n        displayLayer={displayLayer}\r\n        fontsLoaded={fontsLoaded}\r\n      />\r\n    </PreviewBase>\r\n  );\r\n};\r\n\r\nexport default PreviewTroop;\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Container, Toolbar } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport WebFontLoader from \"webfontloader\";\r\n\r\nimport NavBar from \"./layout/NavBar\";\r\nimport TabResult from \"./layout/TabResult\";\r\nimport { TabView, ScrollingContainer, TabList } from \"./layout/TabBase\";\r\nimport FormSpell from \"./layout/areas/FormSpell\";\r\nimport FormTraits from \"./layout/areas/FormTraits\";\r\nimport FormTroop from \"./layout/areas/FormTroop\";\r\nimport PreviewSpell from \"./layout/areas/PreviewSpell\";\r\nimport PreviewTraits from \"./layout/areas/PreviewTraits\";\r\nimport PreviewTroop from \"./layout/areas/PreviewTroop\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    height: `calc(100vh - 64px)`,\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: \"100%\"\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"calc(100vw - 64px)\",\r\n      height: \"calc(100vh - 112px)\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"calc(100vw - 64px)\",\r\n      height: \"calc(100vh - 112px)\"\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"calc(100vw - 240px)\",\r\n      height: \"calc(100vh - 112px)\"\r\n    }\r\n  },\r\n  previewGridItem: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      order: 1,\r\n      padding: 0,\r\n      paddingTop: theme.spacing(3),\r\n      margin: 0,\r\n      marginBottom: theme.spacing(1.5)\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      order: 1,\r\n      padding: theme.spacing(1.5),\r\n      margin: \"0 auto\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      order: 2\r\n    },\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      padding: theme.spacing(3)\r\n    },\r\n    width: `calc(75vh)`\r\n  },\r\n  formGridItem: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      order: 2,\r\n      margin: \"0\"\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      order: 1\r\n    }\r\n  },\r\n  grid: {\r\n    display: \"flex\"\r\n  },\r\n  tabView: {\r\n    marginBottom: \"22vh\"\r\n  }\r\n}));\r\n\r\n// Default troop for the troop creator.\r\nconst troopInfernus = {\r\n  name: \"Infernus\",\r\n  kingdom: \"Broken Spire\",\r\n  rarity: \"Mythic\",\r\n  level: \"20\",\r\n\r\n  role: \"Mage\",\r\n  cost: \"24\",\r\n  colors: \"RedYellowPurple\",\r\n\r\n  type1: \"Divine\",\r\n  type2: \"Elemental\",\r\n\r\n  attack: \"40\",\r\n  armor: \"40\",\r\n  life: \"40\",\r\n\r\n  troopimage: null,\r\n  magic: \"25\",\r\n\r\n  spellname: \"Eruption\",\r\n  spelldesc:\r\n    \"Deal {magic} splash damage to 2 random enemies. Explode 5 random Gems.\",\r\n  spellmult: \"1\",\r\n  spellbase: \"10\",\r\n  spellrange: false,\r\n\r\n  spellimage: null,\r\n  trait1name: \"Elemental Shield\",\r\n  trait1desc: \"Allied Elementals gain 2 Armor.\",\r\n  trait1code: \"elementalbond\",\r\n  trait2name: \"Fiery Death\",\r\n  trait2desc: \"Summon a Firestorm when an enemy dies.\",\r\n  trait2code: \"firebrand\",\r\n  trait3name: \"Conflagration\",\r\n  trait3desc: \"Burn all enemies on 4 or 5 Gem matches.\",\r\n  trait3code: \"molten\"\r\n};\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // State of troop info, stored in the forms.\r\n  const [troop, setTroop] = React.useState(troopInfernus);\r\n\r\n  // Creates an onChange function by passing the setState function. Uses callbacks for performance.\r\n  const handleTroopChange = useCallback(\r\n    (field, value) => setTroop(oldState => ({ ...oldState, [field]: value })),\r\n    [setTroop]\r\n  );\r\n\r\n  // State of the currently selected tab number.\r\n  const [currentTab, setCurrentTab] = useState(1);\r\n\r\n  const layerSpellDisplay = useRef(null);\r\n  const layerTroopDisplay = useRef(null);\r\n  const layerTraitsDisplay = useRef(null);\r\n\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n  // Handle loading effects.\r\n  useEffect(() => {\r\n    // Fetch necessary fonts.\r\n    WebFontLoader.load({\r\n      google: {\r\n        families: [\"Open Sans:400,600,700\", \"Roboto\", \"Raleway\"]\r\n      },\r\n      fontactive: () => {\r\n        setTimeout(() => {\r\n          setFontsLoaded(true);\r\n        }, 500);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Toolbar />\r\n      <Container maxWidth={false} className={classes.content}>\r\n        <TabList currentTab={currentTab} setCurrentTab={setCurrentTab} />\r\n        <ScrollingContainer>\r\n          <SwipeableViews\r\n            className={classes.swipeableView}\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={currentTab}\r\n            onChangeIndex={setCurrentTab}\r\n          >\r\n            <TabView value={currentTab} index={0} dir={theme.direction}>\r\n              {currentTab === 0 ? (\r\n                <FormSpell\r\n                  troop={troop}\r\n                  className={classes.formGridItem}\r\n                  handleTroopChange={handleTroopChange}\r\n                />\r\n              ) : null}\r\n              <PreviewSpell\r\n                troop={troop}\r\n                displayLayer={layerSpellDisplay}\r\n                fontsLoaded={fontsLoaded}\r\n                className={classes.previewGridItem}\r\n              />\r\n            </TabView>\r\n            <TabView value={currentTab} index={1} dir={theme.direction}>\r\n              {currentTab === 1 ? (\r\n                <FormTroop\r\n                  troop={troop}\r\n                  className={classes.formGridItem}\r\n                  handleTroopChange={handleTroopChange}\r\n                />\r\n              ) : null}\r\n              <PreviewTroop\r\n                troop={troop}\r\n                displayLayer={layerTroopDisplay}\r\n                fontsLoaded={fontsLoaded}\r\n                className={classes.previewGridItem}\r\n              />\r\n            </TabView>\r\n            <TabView value={currentTab} index={2} dir={theme.direction}>\r\n              {currentTab === 2 ? (\r\n                <FormTraits\r\n                  troop={troop}\r\n                  className={classes.formGridItem}\r\n                  handleTroopChange={handleTroopChange}\r\n                />\r\n              ) : null}\r\n              <PreviewTraits\r\n                troop={troop}\r\n                displayLayer={layerTraitsDisplay}\r\n                fontsLoaded={fontsLoaded}\r\n                className={classes.previewGridItem}\r\n              />\r\n            </TabView>\r\n            <TabView value={currentTab} index={3} dir={theme.direction}>\r\n              <TabResult\r\n                className={classes.tabView}\r\n                spellLayer={layerSpellDisplay}\r\n                troopLayer={layerTroopDisplay}\r\n                traitsLayer={layerTraitsDisplay}\r\n                troop={troop}\r\n              />\r\n            </TabView>\r\n          </SwipeableViews>\r\n        </ScrollingContainer>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nconst registerValidSW = (swUrl, config) => {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n};\n\nconst checkValidServiceWorker = (swUrl, config) => {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n};\n\nexport const registerServiceWorker = config => {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. Cool.\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nexport function unregisterServiceWorker() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport { orange, blueGrey } from \"@material-ui/core/colors\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport App from \"./components/App\";\nimport { unregisterServiceWorker } from \"./serviceWorker\";\n\n// CSS\n// Preload to force the browser to request it in the background.\nimport(\n  /* webpackPreload: true */\n  /* webpackChunkName: \"style\" */\n  \"./css/style.css\"\n);\nimport(\n  /* webpackPreload: true */\n  /* webpackChunkName: \"style\" */\n  \"./css/google-fonts.css\"\n);\nimport(\n  /* webpackPreload: true */\n  /* webpackChunkName: \"style\" */\n  \"./css/nerd-fonts.min.css\"\n);\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: blueGrey,\n    secondary: orange\n  },\n  zIndex: {\n    appBar: 1\n  }\n});\n\nconst Index = () => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </MuiThemeProvider>\n  );\n};\n\n// Register service worker.\n// registerServiceWorker();\n\n// Unregister service worker.\nunregisterServiceWorker();\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}